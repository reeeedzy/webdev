%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 9.0%%For: (MAC ) (PHPR)%%Title: (TBIlogo.AI)%%CreationDate: 7/15/02 4:46 PM%%BoundingBox: 91 -421 527 -342%%HiResBoundingBox: 91.022 -420.8682 526.9893 -342.3193%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 306.5 -396.5 306.5 -396.5%AI3_TileBox: 18 -752 594 -5%AI3_DocumentPreview: None%AI5_ArtSize: 612 792%AI5_RulerUnits: 0%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -142.0127 -92.0015 0.6667 777 476 18 1 1 16 85 0 0%AI5_OpenViewLayers: 7%%PageOrigin:18 -752%%AI3_PaperRect:-18 783 594 -9%%AI3_Margin:18 -36 -18 9%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI7_Thumbnail: 128 24 8%%BeginData: 4926 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD06F87DFFFF52FD05F852FFFFA1686969696869FD04FFA8FD4FFF%A8FD12FFFD06F87DFFFF52FD05F852FFFF9A694469446944FD04FF52527D%527D527D527D527D27A8FFFFFF7D527D7DFD06FF7D527DA8FD04FF7D527D%527D527D527D7DFD07FF527D527D7DFD05FFA87D527DFD04FFA87D527D52%7D527D527D5227FD04FFA87D527D527D527D527DA8FFFFFFFD06F87DFFFF%52FD05F852FFFFA1696944696969FD04FF27FD0BF87DFFFFFF7DF8F8FD07%FF52F827FD05FFA8FD0AF8A8FD05FF7DF8F8F8A8FD06FF27F87DFD05FF27%FD0AF8FD05FF27FD09F852FFFFFD06F852FFFF52FD05F852FFFF76694469%446944FD04FF7D7DA87DA8F8F852A87DA87DA8FFFFFFA8F8F8FD07FF7DF8%27FD06FFF8F8527D527D5252F8F8F8FD05FF52FD04F8A8FD05FF27F8A8FD%05FF27F8527DA87DA87DA87D52FD05FF27F827527D527D5227F8F87DFFFD%06F87DFFFF52FD05F852FFFFA1696968696969FD09FFF8F8A8FD08FFA8F8%F8FD07FF52F827FD06FFF8F8FD06FFA8F8F8A8FD04FF7DF852F8F8F8FD05%FF27F8A8FD05FF27F852FD0DFF27F852FD06FF27F852FFFD06F852FFFF52%FD05F852FFFF76694469446944FD09FFF8F87DFD08FFA8F8F8FD07FF7DF8%27FD06FFF8F8FD06FF7DF8F8A8FD04FF52F852A8F8F827FD04FF27F8A8FD%05FF27F87DFD0DFF27F87DFD06FF27F852FFFD067DFFFFFFA8FD057DA8FF%FFCA9AA19AA19AA1FD09FFF8F8A8FD08FFA8F8F8FD07FF52F827FD06FFF8%F8A87DA8A8A87D27F827FD05FF7DF87DFF7DF8F827FFFFFF27F8A8FD05FF%27F852A87DA8A8527DFD07FF27F852A87DA8A8A827F8F8A8FD23FFF8F87D%FD08FFA8F8F8FD07FF7DF827FD06FFFD09F8277DFD05FF52F852FFFF7DF8%F8F8FFFF27F8A8FD05FF27FD07F8A8FD07FF27FD09F852FD0BFF7DFD0552%7DFD12FFF8F8A8FD08FFA8F8F8FD07FF52F827FD06FFF8F85227522727F8%27FD07FF7DF87DFFFFFF52F8F852FF27F8A8FD05FF27F8277D527D5252A8%FD07FF27F82752275227F8F8FD0DFF52FD05F852FD12FFF8F87DFD08FFA8%F8F8FD07FF7DF827FD06FFF8F8FD04FF7DF8F8A8FD06FF52F852FD04FF52%F8F85227F8A8FD05FF27F87DFD0DFF27F87DFD04FFF8F852FD0CFF52FD05%F852FD12FFF8F8A8FD08FF7DF8F8FD07FF27F852FD06FFF8F8FD05FF27F8%27FD06FF7DF87DFD05FF27FD04F87DFD05FF27F852FD0DFF27F852FD04FF%7DF8F8A8FD0BFF52FD05F852FD12FFF8F87DFD09FFF8F827A8FD04FF52F8%F87DFD06FFF8F8FD06FFF8F852FD05FF52F852FD05FFA827F8F8F8A8FD05%FF27F87DFD08FFA8FD04FF27F87DFD05FF27F827FD0BFF52FD05F852FD12%FFF8F8A8FD09FF7DF8F8F8272752F8F8F827FD07FFF8F8FD06FF7DF827A8%FD04FF7DF87DFD07FF27F8F8A8FD05FF27F8F852275227522752277DFD04%FF27F852FD05FFA827F87DFD0AFF52FD05F852FD11FF7DF8F852FD0AFF7D%27FD06F87DA8FD06FF52F8F852FD05FFA8F8F827A8FFFFFF27F827FD07FF%27F8F852FD04FFA827FD0AF852FFFFFFA827F827FD06FF27F8F8A8FD09FF%7DFD05527DFD22FFA87DA8FD38FFA8A8FD9AFFA8FD057DA8FD0DFFA1CAA1%CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1%CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1%CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA1%CAA1CAA1CAA1FD09FF52FD05F852FD79FF52FD05F852FD79FF52FD05F852%FD0DFF522752A8FF52A8FF52FFFF27FF7D7DFFFFFF7D27527DFFA8272727%FF7D27527DFFFF7D277DFD04FF52A8FF527DFF27FFFF7D277DA8FF52527D%FFFF27277DA8FF272752A8FFA8277DA8FF522727A8FFFF527DFFA8272727%A87D272752FF7D275252FD0AFF52FD05F852FD0DFF27A8527DFF7DA8FF27%FFFF52FFA852FFFFFF52A8A852A8A827A8A8FFA8527D27FFA827A87DFD04%FF7DA8FF2727A87DFFA852FF7DFF7D7DA852A8FF27A827A8FF52A8527DFF%27FF527DFF52A87D52FFFF2727FFFFFF27FFFFA852A8FFFF52A8A852A8FD%09FF52FD05F852FD0DFF27525252FF52A8FF27FFFF27FF7D7DFFFFFF7D7D%FF27A87D2752A8FFA8275227FFA87D5227A8FFFFFF52A8FF27A82752FF52%7DFFA8A8527DFF527DFF275227A8FF277D7DFFA852FFA827FF277DF8A8FF%7D27277DFFFF27FFFF7D2752FFFF7D7DFF527DFD09FF52FD05F827FD0DFF%2727277DFFA8275252FFA827FFA8F85227FF52272727A8A8F82727A87D52%A827A87D275227FD04FF527DFF27FF7D27FFFF275227A8A8522727A8FF27%FF527DFF27FD04FF272727A8FF52A87D27FFF8FFA827FFFF27FFFFA8F852%27FF52272727A8FD38FFA8FD46FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient_Sep 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient_Sep 5 dict dup begin put/AGM_Gradient_Sep_private 100 dict def/initialize{	AGM_Gradient_Sep begin	AGM_Gradient_Sep_private begin	_compositeJob{		initializeSinglePassSeps	}{		initializeMultiPassSeps	}ifelse	initializeSeps	AGM_Gradient_private begin		/_fillSD newSpotDict def		/_rampSD newSpotDict def		/_nCustomColorSD nd end	AGM_Gradient_Sep_private 	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient_Sep	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop	 end}def/terminate{	currentdict AGM_Gradient_Sep eq{	 end	}if}defAGM_Gradient_Sep_private begin/initializeSeps{	/currentoverprint { _of } def	_noImage not _level2PS not and{		/linealFill{			currentoverprint{				0 0 1 1 rectfill			}{				mySave				8 setImageParms				_color{					_nCustomColorSD begin						cyan magenta yellow black							_spotColor{							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put						}if				 end						4{						makeByte8 4 1 roll					}repeat					true 4 _nCustomColorSD ncolorimage				}{					_nCustomColorSD/black get 1 exch sub makeByte8 					_nCustomColorSD bwImage				}ifelse				myRestore			}ifelse		}def	}if	/_whiteBytes 1 makeByte8 pt	 /knockOut{		_noImage _level2PS or currentoverprint or{			gsave			false setoverprint			1 setgray 			0 0 1 1 rectfill			grestore		}{			8 setImageParms _whiteBytes /_image load 5 execImage		}ifelse	}def	/newSpotDict{		11 dict dup begin			/nSpots 2 def			/spot1 7 dict def			/spot2 7 dict def	 end	}def	/initSpotData	{	 begin			/name nd			/tintImage nd			/tintValue nd			/spot_C nd			/spot_M nd			/spot_Y nd			/spot_K nd	 end	}def	/initSpotDict{	 begin			/cyanInk nd			/magentaInk nd			/yellowInk nd			/blackInk nd			/cyan nd			/magenta nd			/yellow nd			/black nd			spot1 initSpotData			spot2 initSpotData	 end	}def	/copySpotDict{		/_dst xp	 begin			cyanInk magentaInk yellowInk blackInk			cyan magenta yellow black			spot1 spot2	 end		_dst begin			/spot1 spot1 maxlength dict def			/spot2 spot2 maxlength dict def			spot2 copy pop			spot1 copy pop			/black xd			/yellow xd			/magenta xd			/cyan xd			/blackInk xd			/yellowInk xd			/magentaInk xd			/cyanInk xd	 end	}def	/setCustomColor	{		1 index /Black eq{			6 1 roll 5 npop			1 exch sub			setgray		}{			6 1 roll _ccAry1 astore exch			dup null eq{				pop 0			}if			setcustomcolor		}ifelse	}def	/setCStop{		/_colorStyle exch pt				_colorStyle 0 eq{			0 0 0			4 -1 roll			1 exch sub			_spotColor{				/_colorStyle 3 pt				/Black				1 index				1 exch sub			}if		}if		_colorStyle 2 eq{			3 npop		}if		_rampSD _fillSD copySpotDict				_colorStyle 4 eq{ 			pop			9 2 roll 3 npop 6 -2 roll		} if				_colorStyle 3 eq _colorStyle 4 eq or{ 								_fillSD begin				/_spot1 spot1 pt				/_spot2 spot2 pt		 end						exch dup _spot1/name get eq{				_spot1 _spot2			}{				_spot2 _spot1			}ifelse		 begin			 begin					/name xd					1 exch sub /tintValue xd					4{						tintValue mul 4 1 roll					}repeat					_spotColor not{						/tintValue null def					}if			 end				/tintValue 0 def		 end		}if		_fillSD nsetcustomcolor	}def	/renderCMYK{		spot1/name get null eq		spot2/name get null eq and		dup not{			pop			spot1 spotConverted		}if		dup not{			pop			spot2 spotConverted		}if	}def	/currentInk{		true		_inRipSep{			currentcolorspace 0 get			dup /DeviceGray eq			1 index /DeviceCMYK eq or{				pop				currentcmykcolor add add add 0 eq{					pop false				}if			}{				/Separation eq{					currentcolor 0 eq{						pop false					}if				}if			}ifelse		}{			currentgray 1 eq{				pop false			}if		}ifelse	}def	/currentInkN{			_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end		{			currentInk		}{			gsave			_spot1 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			_spot2 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			grestore						or		} ifelse	}def	/fill_ /fill load def	/fillOvp{		currentoverprint{			_inRipSep{				currentcolorspace 0 get				dup /DeviceGray eq				1 index /DeviceCMYK eq or{					pop					currentcmykcolor add add add 0 eq{						newpath					}if				}{					/Separation eq{						currentcolor 0 eq{							newpath						}if					}if				}ifelse			}{				currentgray 1 eq{					newpath				}if			}ifelse		}if		fill_	}def	/fill{		_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end				{			fillOvp		}{			_spot1 begin				gsave				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor				}{					1 setgray				}ifelse				fillOvp 				grestore		 end			_spot2 begin				name null ne{					gsave					true setoverprint					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					fillOvp					grestore				}if		 end			newpath		}ifelse	}def	/expandSpot{		_spotColor{			/_len xp			_rampSD begin				spot1 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end				spot2 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end		 end		}{			pop		}ifelse	}def	/rampImage{		currentoverprint{			rectImage		}{			_enabledSmoothShade{				fillRamp			}{				_color{					_rampSD begin						/cyanInk _cyanData 0 ne def						/magentaInk _magentaData 0 ne def						/yellowInk _yellowData 0 ne def						/blackInk _blackData 0 ne def				 end										_nSamples setImageParms					_nSamples expandSpot					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 _rampSD ncolorimage				}{					_rampSD begin						/cyanInk false def						/magentaInk false def						/yellowInk false def						/blackInk true def				 end					_nSamples setImageParms 					_blackData _rampSD bwImage				}ifelse			}ifelse		}ifelse	}def	/nsetcustomcolor where{		pop	}{		/nsetcustomcolor		{			/_nCustomColorSD xp			_nCustomColorSD begin				4 copy				/black xd				/yellow xd				/magenta xd				/cyan xd				4 copy				0 ne /blackInk xd				0 ne /yellowInk xd				0 ne /magentaInk xd				0 ne /cyanInk xd		 end			setcmykcolor		}def	}ifelse	/nsetcustomcolorend where{		pop	}{		/nsetcustomcolorend		{			/_nCustomColorSD null pt		}def	}ifelse}def/initializeSinglePassSeps{	/_decodeNorm	[0 1] pt	/_decodeInvert 	[1 0] pt	/spotConverted	{	 begin			name null eq{				false			}{				tintValue null eq tintImage null eq and{					true				}{					_inDistiller{						false					}{						false						currentpagedevice/SeparationColorNames get{name eq or}forall						not					}ifelse				}ifelse			}ifelse	 end	}def	/dictImage	{		20 dict dup begin			/Dict xd			/Decode xd			/DataSource xd			/ImageMatrix xd			/BitsPerComponent xd			/Height xd			/Width xd			/ImageType 1 def			Dict	 end		/_image load 1 execImage	}def	/bwImage{	 begin			gsave			currentoverprint{				blackInk{					[/Separation /Black /DeviceGray{}] setcolorspace					_decodeInvert dictImage				}{					5 npop				}ifelse			}{				/DeviceGray setcolorspace				_decodeNorm dictImage			}ifelse			grestore	 end	}def	/ncolorimage where{		pop	}{		/ncolorimage{		 begin				renderCMYK{					cyanInk 					magentaInk and					yellowInk and					blackInk and					not					currentoverprint 					and{							pop pop						gsave						cyanInk{							8 copy							[/Separation /Cyan /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}if						magentaInk{							8 copy							[/Separation /Magenta /DeviceGray{}] setcolorspace							4 -1 roll							3 npop							_decodeNorm dictImage						}if						yellowInk{							8 copy							[/Separation /Yellow /DeviceGray{}] setcolorspace							4 -2 roll							3 npop							_decodeNorm dictImage						}if						blackInk{							4 -3 roll							[/Separation /Black /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}{							8 npop						}ifelse						grestore					}{						/_colorimage load 10 execImage					}ifelse				}{					6 npop					gsave					spot1 begin						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							4 copy							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							1 setgray fill						}ifelse				 end					spot2 begin						true setoverprint						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							4 npop							1 setgray fill						}ifelse				 end					grestore				}ifelse		 end		}def	}ifelse	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_renderCMYK not{			_rampSD begin				[/DeviceN 					[					spot1 begin						name null ne tintImage null ne and{							name						}if				 end					spot2 begin						name null ne tintImage null ne and{							name						}if				 end					]					_inDistiller {						/DeviceCMYK [							spot1 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 1								}{									0 0 0 0 0								}ifelse						 end							spot2 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 2								}{									0 0 0 0 0								}ifelse						 end							5 1 roll 6 -2 roll add							dup 1 eq {								pop								8 /index cvx 1 /exch cvx /sub cvx								9 1 /roll cvx							}{								2 eq {									8 /index cvx 1 /exch cvx /sub cvx									10 1 /roll cvx								}if							}ifelse							4 1 /roll cvx 5 -2 /roll cvx							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx							3 1 /roll cvx 4 -2 /roll cvx							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx							2 1 /roll cvx 3 -2 /roll cvx							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx							6 -2 /roll cvx /pop cvx /pop cvx						] cvx bind					}{						/DeviceCMYK {}					}ifelse				] setcolorspace		 end			/_nColorSpace currentcolorspace pt		}if				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C0_Space _nColorSpace pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C1_Space _nColorSpace pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}def/initializeMultiPassSeps{	/invertXfer{		[		{			1 exch sub		}/exec load systemdict /currenttransfer get exec /exec load		] cvx systemdict /settransfer get exec	}def	/ccThrough{		gsave		1 setCustomColor		currentcmykcolor		grestore		add add add 0 ne	}def	/spotConverted	{	 begin			_isCMYKSep not{				false			}{				name null eq{					false				}{					tintValue null eq tintImage null eq and{						true					}{						spot_C spot_M spot_Y spot_K name ccThrough					}ifelse				}ifelse			}ifelse	 end	}def	/spotChannel	{		_isCMYKSep{			pop false		}{			/_spotDict xp				_spotDict/name get null eq{					false				}{					_spotDict/spot_C get					_spotDict/spot_M get					_spotDict/spot_Y get					_spotDict/spot_K get					_spotDict/name get					ccThrough 				}ifelse		}ifelse	}def	/getChannelData	{		_isCMYKSep dup{			pop renderCMYK		}if		{			_blackPlate{				4 1 roll 3 npop blackInk			}{				_yellowPlate{					4 2 roll 3 npop yellowInk				}{					_magentaPlate{						4 3 roll 3 npop magentaInk					}{						3 npop cyanInk					}ifelse				}ifelse			}ifelse			{				true /nonZeroData			}{				true /zeroData			}ifelse		}{			4 npop			spot1/name get null ne 			spot1 spotChannel and{				spot1/tintImage get dup null ne{					false /nonZeroData				}{					pop false /noData				}ifelse			}{				spot2/name get null ne 				spot2 spotChannel and{					spot2/tintImage get dup null ne{						false /nonZeroData					}{						pop false /noData					}ifelse				}{					false /noData				}ifelse			}ifelse		}ifelse	}def	/renderChannelData	{		/_tmp xp		_tmp /nonZeroData ne currentoverprint and{			pop			_tmp /zeroData eq{pop}if			4 npop		}{			_tmp /nonZeroData eq{				{					invertXfer				}if					systemdict/image				get 5 execImage			}{				pop				_tmp /zeroData eq{pop}if				4 npop				knockOut			}ifelse		}ifelse	}def	/bwImage{	 begin			gsave			dup dup dup			getChannelData			exch pop false exch			renderChannelData			grestore	 end	}def	/ncolorimage{	 begin			pop pop			gsave			spot2/name get null ne spot2 spotChannel and{				true setoverprint			}if			getChannelData 			renderChannelData			grestore	 end	}def	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C0_Space /DeviceGray pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C1_Space /DeviceGray pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}defendenddefaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient 20 dict dup begin put/AGM_Gradient_private 201 dict def/initialize{	AGM_Gradient begin	AGM_Gradient_private begin	initializeVars		/bd systemdict/mark get def	/ed		_level2PS 		{			(>>)		}{			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)		} ifelse	cvx def		_level2PS{		initializeLev2	}{		initializeLev1	}ifelse		queryDevice		initializeRectFill	initializeShading	initializeOps	_producingSeps{		AGM_Gradient_Sep/initialize get exec	}{		initializeComposite	}ifelse	_illustrator{		/f{}def		/F{}def		/s{}def		/S{}def		/b{}def		/B{}def	}if	/image where{		/image get /_image xd	}if	/colorimage where{		/colorimage get /_colorimage xd	}if	AGM_Gradient_private	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop end}def/initializeAI{	pop pop 	AGM_Gradient/AGM_Gradient_private get /_illustrator true put	AGM_Gradient/initialize get exec		AGM_Gradient begin}def/unload{	systemdict/languagelevel known{		systemdict/languagelevel get 2 ge{			userdict/AGM_Gradient_Sep 2 copy known{				undef			}{				pop pop			}ifelse			userdict/AGM_Gradient 2 copy known{				undef			}{				pop pop			}ifelse		}if	}if}def/terminate{	currentdict AGM_Gradient eq{	 end	}if}def AGM_Gradient_private begin/initializeVars{	/_d255 256 array def	0 1 255{		_d255 exch dup 255 div put	}bind for	/_d255- 256 array def	0 1 255{		_d255- exch 1 _d255 2 index get sub put	}bind for	/_sSave nd	/_dUserSpace matrix defaultmatrix def	/_bUMatrix matrix def	/_imageMatrix matrix def	/_saveMatrix matrix def	/_xm matrix def	/_ccAry1 5 array def	/_bbox 4 array pt	/_level2PS 		systemdict/languagelevel known dup{			pop systemdict/languagelevel get 2 ge		}if	def	/_level3PS		_level2PS systemdict/shfill known and	def	currentdict /_illustrator known not{		/_illustrator false def	}if	}def/initializeOps{	AGM_Gradient begin	currentdict/Bc known not{		/Bc{					_renderFlag 2 eq _enabledSmoothShade or{				6 npop			}{				pushBSpace				_rampIndex 0 eq{					pop pop					setCStop				}if				linealFill				popBSpace			}ifelse				}def	}if		currentdict/Bg known not{		/Bg{			10 npop			/_gradName xp			/_renderFlag xp			/_enabledSmoothShade false pt					_renderFlag 2 ne{						_illustrator{					_of setoverprint				}if						/_enabledSmoothShade 					_level3PS{						_usingSmoothShade						_producingSeps not						currentoverprint not or and						_noImage not and					}{						false					}ifelse				pt								_illustrator _eo and _renderFlag 3 eq or{					eoclip				}{					clip				}ifelse						_gradNames _gradName 2 copy known{					get					mark exch aload pop					/_gradType xp					1 sub dup /_rampIndex xp					/_maxRampIndex xp					mark exch aload pop					0 0				}if				pop pop				getRampData			}{				mark mark			}ifelse		}def	}if		currentdict/Bm known not{		/Bm{			_renderFlag 2 ne{				_gradType 0 eq{					linealRamp				}{					radialGrad				}ifelse			}{				6 npop			}ifelse		}def	}if		currentdict/Bh known not{		/Bh{			2 npop			/_yHi xp			/_xHi xp			/_radHilite _xHi 0 ne _yHi 0 ne or pt		}def	}if		currentdict/Bn known not{		/Bn{			AGM_Gradient_private begin				dict /_gradNames xp		 end		}def	}if		currentdict/Bd known not{		/Bd{			AGM_Gradient begin			AGM_Gradient_private begin				/_nColorsBd xp				/_gradType xp				/_gradName xp		}def	}if		currentdict/BD known not{		/BD{				currentdict/_gradNames known not{					/_gradNames 20 dict def				}if				] _nColorsBd _gradType				]  _gradName exch /_gradNames xput		 end		 end		}def	}if		currentdict/Bb known not{		/Bb{					AGM_Gradient/AGM_Gradient_private get /_illustrator get not{				AGM_Gradient begin			}if			AGM_Gradient_private begin			_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin			}if			mySave		}def	}if		currentdict/BB known not{		/BB{					/_tmp xp			cleartomark cleartomark					_tmp dup			_renderFlag					myRestore					_producingSeps{			 end			}if					_illustrator dup		 end			not {			 end			}if					{				2 ne exch 0 gt and{					2 eq{						s					}{						S					}ifelse				}{					pop newpath				}ifelse			}{				pop newpath			}ifelse						}def	}if		currentdict/Xm known not{		/Xm{			_xm astore pop		}def	}if	 end}def/queryDevice{	/_inDistiller		systemdict /currentdistillerparams known	def	/_inRipSep		_level2PS{			currentpagedevice/Separations 2 copy known{				get			}{				pop pop false			}ifelse		}{			false		}ifelse		_inDistiller or	def	/_noImage /lv1Fix where{		pop lv1Fix	}{		false	}ifelse	def	/_useShells where{		/_useShells get /_usingShells xp	}{		/_usingShells false def	}ifelse		/_useSmoothShade where{		pop	}{		/_useSmoothShade false def 	}ifelse	/_forceToCMYK where{		pop	}{		/_forceToCMYK false def 	}ifelse	/_cyanPlate 1 0 0 0 testCMYKColorThrough def	/_magentaPlate 0 1 0 0 testCMYKColorThrough def	/_yellowPlate 0 0 1 0 testCMYKColorThrough def	/_blackPlate 0 0 0 1 testCMYKColorThrough def	/_compositeJob		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and	def	/_isCMYKSep		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or	def	/_compositeSpotDevice where{		pop	}{		/_compositeSpotDevice _compositeJob not _inRipSep or{			1		}{			0		}ifelse		def	}ifelse	/_producingSeps _compositeSpotDevice 0 ne def	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/_dpiThreshold where{		pop	}{		/_dpiThreshold 600 def	}ifelse	/_screenFreqThreshold where{		pop	}{		/_screenFreqThreshold 150 def	}ifelse	/_contoneDevice where{		pop	}{		/_contoneDevice false def	}ifelse	/_subSampleOK 		_deviceDPI _dpiThreshold le 		currentScreenFreq _screenFreqThreshold le and 		_contoneDevice not and 	def}def/initializeRectFill{	/rectfill where dup{		exch pop not _producingSeps or	}{		not	}ifelse	{		/rectfill{			gsave			newpath			4 2 roll moveto			1 index 0 rlineto			0 1 index rlineto			1 index neg 0 rlineto			pop pop			closepath			fill			grestore		}def	}if}def/initializeLev1{	/currentScreenFreq{		currentscreen pop pop	}def	/_byte 1 string def	/colorimage where{		pop	}{		/colorimage{			pop pop			/_blackTmp xp			/_yellowTmp xp			/_magentaTmp xp			/_cyanTmp xp			/_cnt 0 pt			[			_byte dup 0			_cyanTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx			_magentaTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx			_yellowTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx			_blackTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/dup cvx 1 /gt cvx{				pop 1			}/if cvx			255 /mul cvx /cvi cvx			256 /mod cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/put cvx			/_cnt dup cvx 1 /add cvx /pt cvx			] cvx			bind			/_image load 5 execImage		}def	}ifelse}def/initializeLev2{	/level2ScreenFreq{	 begin		60		HalftoneType 1 eq{			pop Frequency		}if		HalftoneType 2 eq{			pop GrayFrequency		}if		HalftoneType 5 eq{			pop Default level2ScreenFreq		}if		 end	}def	/currentScreenFreq{		currenthalftone level2ScreenFreq	}def}def/initializeShading{	_useSmoothShade _level3PS and{		/_usingSmoothShade true pt		initializeLev3_Ops	}{		/_usingSmoothShade false pt	}ifelse}def/initializeLev3_Ops{	/initShFill{		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt		/_rampFuncsArray _maxRampIndex array pt		/_boundsArray _maxRampIndex 1 sub array pt		/_encodeArray _maxRampIndex 2 mul array pt		/_beginCoord _rampPoint pt		/_colorSpace null pt		/_firstFill _rampIndex _maxRampIndex eq pt		/_lastFill false pt	}def	/linealShFill{		popBSpace		_xm aload pop pushBSpace				/_size _index 1 add pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt		}if				bd			/ShadingType 2			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_firstFill _lastFill]			/Domain [0 1] 			/Coords [_beginCoord 0 _endCoord 0]		ed		shfill	}def		/radialShFill{		/_size _maxRampIndex _index sub pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt			/_boundsArray _boundsArray _index _size 1 sub getinterval pt			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt		}if				/_rampLen _beginCoord _endCoord sub pt		bd			/ShadingType 3			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_lastFill _firstFill]			/Domain [0 1] 			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 		ed		shfill				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if	}def		%	/sampFunc{		/_tmp exch pt		bd			_tmp length 1 eq {				_tmp 0 get				/_tmp 2 string pt				dup _tmp 0 3 -1 roll put				_tmp 1 3 -1 roll put			}if			/FunctionType 0			/Order 1			/Size [_tmp length]			/Domain [0 1]			/BitsPerSample 8			/DataSource _tmp			/Range [0 1]		ed	}def		/fillRamp{				/_invert _midPoint 0.5 lt pt		_rampIndex _maxRampIndex eq {			initShFill		}if				getRampColorSpace				_colorSpace null eq{			/_colorSpace _rampColorSpace pt		}{			_colorSpace _rampColorSpace ne _rgbInCMYK or{				/_index _index 1 				_gradType 0 eq{					sub pt					linealShFill				}{					add pt					radialShFill				}ifelse				initShFill				/_colorSpace _rampColorSpace pt			} if		}ifelse		/_endCoord _endPoint pt			/_rgbInCMYK false pt		_producingSeps _forceToCMYK or _rgbRamp and {			_spotColor{				_renderCMYK			}{				_isCMYKSep			}ifelse		}{			false		}ifelse		{			_compositeJob{				/_rgbInCMYK true pt				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor				dup length string copy /_kData exch pt				dup length string copy /_yData exch pt				dup length string copy /_mData exch pt				dup length string copy /_cData exch pt			}{				_rampFuncsArray _index					_cyanPlate{_cyanData}if						_magentaPlate{_magentaData}if						_yellowPlate{_yellowData}if						_blackPlate{_blackData}if					_nSamples expandOne					sampFunc					dup begin /Decode [1 0] def end				put				/_invert false pt			}ifelse		}{			_rampFuncsArray _index				bd					/FunctionType 2					/Domain [0 1]					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div					_gradType 0 eq{						_invert{/C1}{/C0}ifelse _C0						_invert{/C0}{/C1}ifelse _C1					}{						_invert{/C0}{/C1}ifelse _C1						_invert{/C1}{/C0}ifelse _C0					}ifelse				ed			put		}ifelse				_rampIndex 1 ne{			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put		} if				0 1 _invert {exch}if		_encodeArray _index 2 mul 1 add 3 -1 roll put		_encodeArray _index 2 mul 3 -1 roll put		_rampIndex 1 eq {			/_lastFill true pt			_gradType 0 eq{				linealShFill			}{				radialShFill			}ifelse		}if		/_index _index 1 		_gradType 0 eq{			add pt		}{			sub pt		}ifelse	}def}def/initializeComposite{	/bwImage{		pop /_image load 5 execImage 	}def	/rampImage{		_enabledSmoothShade{			fillRamp		}{			_color{				_nSamples setImageParms									_rgbRamp _forceToCMYK not and{					_redData _greenData _blueData _nSamples 3 expandColor					true 3 null ncolorimage				}{					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 null ncolorimage				}ifelse			}{				_nSamples setImageParms _blackData null bwImage			}ifelse		}ifelse	}def	/setCStop{		/_colorStyle exch pt		_colorStyle 0 eq{			1 exch sub			0 0 0			4 -1 roll		}if				_colorStyle 2 eq{			_forceToCMYK{				3 npop setcmykcolor			}{				setrgbcolor 4 npop			}ifelse		}if				_colorStyle 3 eq{			1 exch sub /_tmp xp			pop			4{				_tmp mul 4 1 roll			}repeat		}if				_colorStyle 4 eq{			_forceToCMYK{				6 npop setcmykcolor			}{				3 -1 roll pop pop				1 exch sub /_tmp xp				3{					1 exch sub _tmp mul 1 exch sub 3 1 roll				}repeat				setrgbcolor 				4 npop			}ifelse		}if		_colorStyle 2 ne _colorStyle 4 ne and{			null nsetcustomcolor		}if	}def	/nsetcustomcolor	{		pop setcmykcolor	}def	/nsetcustomcolorend	{	}def	/ncolorimage{		pop 		/_colorimage load 10 execImage	}def	_noImage not _level2PS not and{		/linealFill{			8 setImageParms			_color{				currentcmykcolor				4{					makeByte8 4 1 roll				}repeat				true 4 null ncolorimage			}{				currentgray makeByte8 null bwImage			}ifelse		}def	}if	/getRampColorSpace{		_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		/_C0 [currentcolor] pt		/_C0_Space currentcolorspace pt				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		/_C1 [currentcolor] pt		/_C1_Space currentcolorspace pt				/_rampColorSpace _C0_Space pt				_spotColor{			nsetcustomcolorend		}if	}def}def/npop{	{pop}repeat}def/xd{	exch def}def/nd{	null def}def/pt{	AGM_Gradient_private 3 1 roll put}def/xp{	exch pt}def/xput{	dup load dup length exch maxlength eq{		dup dup load dup		length 2 mul dict copy def	}if	load begin		def  end}def/mySave{	save /_sSave xp}def/myRestore{	_sSave type /savetype eq{		_sSave restore	}if}def/gMark{	counttomark 2 add -1 roll}def/execImage{	/_tmp xp	{		exec	}stopped{		$error /errorname get /undefinedresult ne{			stop		}{			_tmp npop		}ifelse	}if}def/pushBSpace{	newpath gsave	_bUMatrix astore concat }def/popBSpace{	grestore}def/makeByte8{	/_tmp 0 pt	255 mul cvi	8 string 8{		dup _tmp 3 index put 		/_tmp _tmp 1 add pt	}repeat	exch pop}def/setImageParms{	1 8 2 index 0 0 1 0 0 _imageMatrix astore}def/linealFill{	0 0 1 1 rectfill}def/testCMYKColorThrough{	gsave	setcmykcolor currentcmykcolor	grestore	add add add 0 ne}def/expandOne	{	/_tmp xp	dup type /stringtype ne{		_tmp string		exch		dup 0 ne{			255 mul cvi			0 1 _tmp 1 sub{				3 copy				exch put pop			}for		}if		pop	}if}def/expandColor{	/_channels xp	/_len xp	_channels{		_len expandOne _channels 1 roll	}repeat}def/blendColor{		_color{		_rgbRamp _producingSeps not and _forceToCMYK not and{			_redData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_greenData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blueData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			/setrgbcolor cvx		}{			_cyanData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_magentaData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_yellowData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blackData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if				_spotColor{				_rampSD begin					/_rampSD cvx /begin cvx						spot1 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx						spot2 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/_rampSD cvx				/nsetcustomcolor cvx			}{				/setcmykcolor cvx			}ifelse		}ifelse	}{		_blackData dup type /stringtype eq{			/_ndx cvx /get cvx _d255 /exch cvx /get cvx		}if				_enabledSmoothShade{			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx		}{			 /setgray cvx		}ifelse	}ifelse}def/useRectImage{	_subSampleOK _enabledSmoothShade not and{		{			mark			0 1 dtransform atan cvi 90 mod 0 eq			1 0 dtransform atan cvi 90 mod 0 eq		} stopped		{			cleartomark			false		}		{			and exch pop		} ifelse	}{		false	}ifelse}def/linealImage{	_noImage{		rectImage	}{		_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get				/rampImage get exec		}{			useRectImage{				rectImage			}{				rampImage			}ifelse		}ifelse	}ifelse}def/linealRamp{	pushBSpace	_ramp{		linealImage	}{		linealFill	}ifelse	popBSpace	/_rampIndex _rampIndex 1 sub pt	_rampIndex 0 gt{		getRampData	}if}def/radialGrad{	/_usingShells currentoverprint _producingSeps and _usingShells or pt	/_firstShell true pt	_enabledSmoothShade not{		currentoverprint _producingSeps and{						newpath			clippath pathbbox 			1 add 4 1 roll			1 add 4 1 roll			1 sub 4 1 roll			1 sub 4 1 roll			_bbox astore pop						newpath			_bbox 0 get _bbox 1 get moveto			_bbox 2 get _bbox 1 get lineto			_bbox 2 get _bbox 3 get lineto			_bbox 0 get _bbox 3 get lineto			closepath			6 copy			gsave _bUMatrix astore concat			1 0 moveto 0 0 1 0 360 arc closepath			eoclip fill			popBSpace		}{			fill		}ifelse	}if	pushBSpace		_radHilite{		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp		_rampPoint 1 lt{			1 _rampPoint sub dup _xHi mul exch _yHi mul translate		}if	}if	_rampIndex{		radialRamp		/_rampIndex _rampIndex 1 sub pt		_rampIndex 0 gt{			getRampData		}if	}repeat		popBSpace	}def/getNSamples{	0 exch	{		dup type /stringtype eq{			length exch pop exit		}if		pop	}forall	dup 0 eq{		pop 1	}if}def/getRampData{	/_rampType gMark pt	/_color _rampType 0 gt pt	/_ccRGB _rampType 5 eq _rampType 6 eq or pt	/_rgbRamp _rampType 4 eq _ccRGB or pt	/_ccProcess _rampType 2 eq _rampType 3 eq or pt	_producingSeps{		_rampSD initSpotDict		/_spotColor _ccProcess _ccRGB or pt	}{		/_spotColor false pt	}ifelse	/_ramp true pt	100 div /_rampPoint xp	100 div /_midPoint xp		dup /_colorStyle xp	_colorStyle 0 eq{ 		2	}{		_colorStyle 1 eq{ 			5		}{			_colorStyle 2 eq{				8			}{				_colorStyle 3 eq{					_producingSeps{						_rampSD /spot1 get begin							/name 3 index def							/spot_K 4 index def							/spot_Y 5 index def							/spot_M 6 index def							/spot_C 7 index def					 end					}if					7				}{					_producingSeps{						_rampSD/spot1 get begin							/name 4 index def							/spot_K 8 index def							/spot_Y 9 index def							/spot_M 10 index def							/spot_C 11 index def					 end					}if					11				} ifelse			}ifelse		}ifelse	}ifelse	/_tmp xp	_tmp index 100 div /_endPoint xp		_gradType 1 eq{		_tmp 1 add index 100 div /_midPoint xp	}if		_producingSeps{		_tmp 2 add index /_nextColorStyle xp		_nextColorStyle 3 eq{			/_tmp _tmp 4 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 2 add index def					/spot_Y _tmp 3 add index def					/spot_M _tmp 4 add index def					/spot_C _tmp 5 add index def			 end			}{				pop			}ifelse		}if		_nextColorStyle 4 eq{			/_tmp _tmp 5 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 5 add index def					/spot_Y _tmp 6 add index def					/spot_M _tmp 7 add index def					/spot_C _tmp 8 add index def			 end			}{				pop			}ifelse		}if	}if	_rampType 3 eq _rampType 6 eq or{		/_tint2Data gMark pt	}if	_ccProcess _ccRGB or{		/_tint1Data gMark pt	}if	_rgbRamp{		/_blueData gMark pt		/_greenData gMark pt		/_redData gMark pt	}if		_producingSeps{		_ccProcess _ccRGB or{			_rampType 3 eq _rampType 6 eq or{				_rampSD /spot2 get begin					/tintImage _gradType 0 eq{						_tint2Data					}{						_tint1Data					}ifelse					def					name null eq{						/name /Black def					}if			 end			}if			_rampSD /spot1 get begin				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{					_tint1Data				}{					_tint2Data				}ifelse				def				_rampType 2 eq _rampType 5 eq or{					name null eq{						/name _rampSD/spot2 get /name get def						/spot_C _rampSD/spot2 get /spot_C get def						/spot_M _rampSD/spot2 get /spot_M get def						/spot_Y _rampSD/spot2 get /spot_Y get def						/spot_K _rampSD/spot2 get /spot_K get def						_rampSD/spot2 get /name null put					}if				}{					name null eq{						/name /Black def					}if				}ifelse		 end		}if	}if	/_blackData gMark pt	_rampType 0 gt{		counttomark 4 add -3 roll		/_yellowData xp		/_magentaData xp		/_cyanData xp	}if	_ramp{		/_nSamples			[			_rampType 0 eq {_blackData}if			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if			] getNSamples pt		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if	} if		setCStop}def/rectImage{	gsave	/_sInc 1 pt	/_bInc 1 _nSamples div pt	/_nSubSamples _nSamples pt	/_optimize false pt			_subSampleOK{		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt				_pChange .5 gt dup /_optimize xp{			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc 1 _nSubSamples div pt			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt		}if	}if	0	_nSubSamples	[	/dup cvx	_optimize {		/round cvx /cvi cvx	} if	/_ndx /exch cvx /pt cvx	blendColor	0 0 _bInc 1 /rectfill cvx	_bInc 0 /translate cvx	_sInc /add cvx	] cvx	bind	repeat	pop	_spotColor{		nsetcustomcolorend	}if	grestore}def/radialInit{	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt	/_sInc -1 pt	/_rampLen _rampPoint _endPoint sub pt	/_bInc _rampLen _nSamples div neg pt	/_optimize false pt	_subSampleOK{		/_uRampLen			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			2 copy lt{				exch			}if pop		pt		/_pChange 			_uRampLen 0 eq{				0			}{				_nSamples _uRampLen div			}ifelse		pt		_pChange .5 gt dup /_optimize xp{			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc _rampLen _nRadSamples div neg pt			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt		}if	}if	_radHilite{		/_xBCInc _xHi _rampLen mul _nRadSamples div pt		/_yBCInc _yHi _rampLen mul _nRadSamples div pt	}if}def/radialRamp{	_enabledSmoothShade{		fillRamp	}{		/_saveMatrix _saveMatrix currentmatrix def				radialInit			%		%		true		_producingSeps _rgbRamp not and{			_nSamples 1 gt{ 				pop				/_ndx 0 pt				[blendColor] cvx exec				currentInkN				/_ndx _nSamples 1 sub pt				[blendColor] cvx exec				currentInkN				or			}if		}if		{			_rampPoint					_nSamples 1 sub					_nRadSamples 			[				/dup cvx						_optimize{					/round cvx /cvi cvx				}if						/_ndx /exch cvx /pt cvx								_usingShells{					/_firstShell cvx{						/_firstShell false pt					}{						0 0 3 index 360 0 arcn fill					}/ifelse cvx				}if						blendColor						_usingShells{					0 0 3 /index cvx 0 360 /arc cvx 				}{					0 0 3 /index cvx 0 360 /arc cvx /fill cvx				}ifelse						/exch cvx _bInc /add cvx /exch cvx						_sInc /add cvx						_radHilite{					_xBCInc _yBCInc /translate cvx				}if			] cvx bind			repeat					pop pop		}{			_usingShells{				0 0 _rampPoint 360 0 arcn fill			}if		}ifelse			_saveMatrix setmatrix				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if				_usingShells _rampIndex 1 eq and{			fill		}if			_spotColor{			nsetcustomcolorend		}if	}ifelse}defendenddefaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (03/26/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/@{} def/&{} def/dp{	dup null eq	{		pop		_dp 0 ne		{			0 1 _dp 1 sub _dl mod			{				_da exch get 3 get			} for			_dp 1 sub _dl mod 1 add packedarray			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll			definepattern pop		} if	}	{		_dp 0 ne _dp _dl mod 0 eq and		{			null dp		} if		7 packedarray _da exch _dp _dl mod exch put		_dp _dl mod _da 0 get 4 get 2 packedarray		/_dp _dp 1 add def	} ifelse} def/E{	_ed begin	dup 0 get type /arraytype ne	{		0		{			dup 1 add index type /arraytype eq			{				1 add			}			{				exit			} ifelse		} loop		array astore	} if	/_dd exch def	/_ury exch def	/_urx exch def	/_lly exch def	/_llx exch def	/_n exch def	/_y 0 def	/_dl 4 def	/_dp 0 def	/_da _dl array def	0 1 _dd length 1 sub	{		/_d exch _dd exch get def		0 2 _d length 2 sub		{			/_x exch def			/_c false def			/_r _d _x 1 add get cvlit def			_r _ ne			{				_urx _llx sub _ury _lly sub				[				1 0 0 1 0 0				]				[				/save cvx				_llx neg _lly neg /translate cvx				_c				{					nc /begin cvx				} if				_r dup type /stringtype eq				{					cvx				}				{					{						exec					} /forall cvx				} ifelse				_c				{					/end cvx				} if				/restore cvx				] cvx				/_fn 12 _n length add string def				_y _fn cvs pop				/_y _y 1 add def				_fn 12 _n putinterval				_fn _c false dp				_d exch _x 1 add exch put			} if		} for	} for	null dp	_n _dd /_pd end	xput} def/fc{	_fm dup concatmatrix pop} def/p{	/_fm exch ddef	9 -2 roll _pm translate fc	7 -2 roll _pm scale fc	5 -1 roll _pm rotate fc	4 -2 roll exch 0 ne	{		dup _pm rotate fc		1 -1 _pm scale fc		neg _pm rotate fc	}	{		pop	} ifelse	dup _pm rotate fc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore fc	neg _pm rotate fc	_pd exch get /_fdd exch ddef	/_pf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					patternfill				}				{					pop					fill				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_psf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					9 copy 6 npop patternashow				}				{					pop					6 copy 3 npop hvashow				} ifelse				grestore				pop			} for			pop		} for		restore		sw rmoveto	} ddef	/_pjsf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					12 copy 6 npop patternawidthshow				}				{					pop 9 copy 3 npop hvawidthshow				} ifelse				grestore				pop			} for			pop		} for		restore		swj rmoveto	} ddef	/_lp /none ddef} def/sc{	_sm dup concatmatrix pop} def/P{	/_sm exch ddef	9 -2 roll _pm translate sc	7 -2 roll _pm scale sc	5 -1 roll _pm rotate sc	4 -2 roll exch 0 ne	{		dup _pm rotate sc		1 -1 _pm scale sc		neg _pm rotate sc	}	{		pop	} ifelse	dup _pm rotate sc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore sc	neg _pm rotate sc	_pd exch get /_sdd exch ddef	/_ps	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					patternstroke				}				{					pop stroke				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_pss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					10 copy 6 npop patternashowstroke				}				{					pop 7 copy 3 npop ss				} ifelse				grestore				pop			} for			pop		} for		restore		pop sw rmoveto	} ddef	/_pjss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					13 copy 6 npop patternawidthshowstroke				}				{					pop 10 copy 3 npop jss				} ifelse				grestore				pop			} for			pop		} for		restore		pop swj rmoveto	} ddef	/_lp /none ddef} defenduserdict /Adobe_pattern_AI5 18 dict dup beginput/initialize{	/definepattern where	{		pop		pop pop	}	{	 begin	 begin		Adobe_pattern_AI5 begin		Adobe_pattern_AI5		{			dup xcheck			{				bind			} if			pop pop		} forall		mark		cachestatus 7 1 roll pop pop pop pop exch pop exch		{			{				10000 add				dup 2 index gt				{					exit				} if				dup setcachelimit			} loop		} stopped		cleartomark	 end 				 end	 end				Adobe_pattern_AI5 begin	} ifelse} def/terminate{	currentdict Adobe_pattern_AI5 eq	{	 end	} if} deferrordict/nocurrentpoint{	pop	stop} puterrordict/invalidaccess{	pop	stop} put/patternencoding256 array def0 1 255{	patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{	17 dict begin	/uniform exch def	/cache exch def	/key exch def	/procarray exch def	/mtx exch matrix invertmatrix def	/height exch def	/width exch def	/ctm matrix currentmatrix def	/ptm matrix def	/str 32 string def	/slice 9 dict def	slice /s 1 put	slice /q 256 procarray length div sqrt floor cvi put	slice /b 0 put	/FontBBox	[	0 0 0 0	] def	/FontMatrix mtx matrix copy def	/Encoding patternencoding def	/FontType 3 def	/BuildChar	{		exch	 begin		/setstrokeadjust where {pop true setstrokeadjust} if		slice begin		dup q dup mul mod s idiv /i exch def		dup q dup mul mod s mod /j exch def		q dup mul idiv procarray exch get		/xl j width s div mul def		/xg j 1 add width s div mul def		/yl i height s div mul def		/yg i 1 add height s div mul def		uniform		{			1 1		}		{			width 0 dtransform			dup mul exch dup mul add sqrt dup 1 add exch div			0 height dtransform			dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse		width 0 cache		{			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul			setcachedevice		}		{			setcharwidth		} ifelse		gsave		scale		newpath		xl yl moveto		xg yl lineto		xg yg lineto		xl yg lineto		closepath		clip		newpath	 end	 end		exec		grestore	} def	key currentdict definefont end} def/patterncachesize{	gsave	newpath	0 0 moveto	width 0 lineto	width height lineto	0 height lineto	closepath	patternmatrix setmatrix	pathbbox	exch ceiling 4 -1 roll floor sub 3 1 roll	ceiling exch floor sub	mul 1 add	grestore} def/patterncachelimit{	cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{	exch dup begin	setfont	ctm setmatrix	concat	slice exch /b exch slice /q get dup mul mul put	FontMatrix concat	uniform	{		width 0 dtransform round width div exch round width div exch		0 height dtransform round height div exch height div exch		0 0 transform round exch round exch		ptm astore setmatrix	}	{		ptm currentmatrix pop	} ifelse	{		currentpoint	} stopped not	{		2 npop		pathbbox		true		4 index 3 index eq		4 index 3 index eq		and		{			pop false			{				{					2 npop				}				{					3 npop true				}				{					7 npop true				}				{					pop true				} pathforall			} stopped			{				5 npop true			} if		} if		{			height div ceiling height mul 4 1 roll			width div ceiling width mul 4 1 roll			height div floor height mul 4 1 roll			width div floor width mul 4 1 roll			2 index sub height div ceiling cvi exch			3 index sub width div ceiling cvi exch			4 2 roll moveto			FontMatrix mtx invertmatrix			dup dup 4 get exch 5 get rmoveto			ptm ptm concatmatrix pop			slice /s			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi			dup slice /q get gt			{				pop slice /q get			} if			put			0 1 slice /s get dup mul 1 sub			{				slice /b get add				gsave				0 1 str length 1 sub				{					str exch 2 index put				} for				pop				dup				{					gsave					ptm setmatrix					1 index str length idiv					{						str show					} repeat					1 index str length mod str exch 0 exch getinterval show					grestore					0 height rmoveto				} repeat				grestore			} for			2 npop		}		{			4 npop		} ifelse	} if end} def/patternclip{	_eo {eoclip} {clip} ifelse} def/patternstrokepath{	strokepath} def/patternmatrixmatrix def/patternfill{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternclip	Adobe_pattern_AI5 /patternpath get exec	grestore	newpath} def/patternstroke{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternstrokepath	true	{		{			{				newpath				moveto			}			{				lineto			}			{				curveto			}			{				closepath				3 copy				Adobe_pattern_AI5 /patternfill get exec			} pathforall			3 npop		} stopped		{			5 npop			patternclip			Adobe_pattern_AI5 /patternfill get exec		} if	}	{		patternclip		Adobe_pattern_AI5 /patternfill get exec	} ifelse	grestore	newpath} def/vpatternawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef		{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	3 npop} def/hpatternawidthshow{	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		9 index 9 index 9 index		Adobe_pattern_AI5 /patternfill get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	8 npop} def/patternashow{0 0 0 6 3 rollpatternawidthshow} def/patternawidthshow{	6 index type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get 7 1 roll	} if	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse} def/vpatternawidthshowstroke{	7 1 roll	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			3 index setmatrix			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			4 index setmatrix			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	4 npop} def/hpatternawidthshowstroke{	7 1 roll	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		7 index setmatrix		10 index 10 index 10 index		Adobe_pattern_AI5 /patternstroke get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	9 npop} def/patternashowstroke{	0 0 0 7 3 roll	patternawidthshowstroke} def/patternawidthshowstroke{	7 index type /dicttype eq	{		patternmatrix /patternmatrix get 8 1 roll	} if	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse} defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp4 Bn%AI5_BeginGradient: (Black, White)(Black, White) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Chrome)(Chrome) 0 6 Bd[0<464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B3B3B3B3A3A3A393939393838383837373736363636353535353434343333333332323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A2929292828282827272726262626252525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A0909090908080807070707060606050505050404040403030302020202010101010000><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515151515151514141414141414141313131313131313121212121212121212111111111111111110101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0909090909090909090808080808080808070707070707070706060606060606060605050505050505050404040404040404030303030303030303020202020202020201010101010101010000000000>1 %_Br00.2751<6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F>1 %_Br0<00000101010102020202030303040404040505050506060607070707080808090909090A0A0A0A0B0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101011111112121212131313141414141515151516161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021212122222222232323232424242525252526262626272727282828282929292A2A2A2A2B2B2B2B2C2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313132323233333333343434353535353636363637373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F40404040414141414242424343434344444444454545464646><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><00000101020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0D0E0E0F0F1010101111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F30303131323232333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243434444444545464647474748484949494A4A4B4B4C4C4C4D4D4E4E4F4F4F5050515151525253535454545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F6060616161626263636464646565666666676768686969696A6A6B6B>1 %_Br10 %_Br<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A3939393838383837373736363635353535343434333333323232323131313030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A292929282828282727272626262525252524242423232322222222212121202020201F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1A1A1A1A1919191818181717171616161615151514141413131313121212111111101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A0909090808080707070706060605050504040404030303020202010101010000>001 %_Br[1 0 50 92 %_BS%_1 0 50 92 Bs0 0.275 1 0.12 1 50 59 %_BS%_0 0.275 1 0.12 1 50 59 Bs0 0.275 1 0.42 1 50 50 %_BS%_0 0.275 1 0.42 1 50 50 Bs1 0 50 49 %_BS%_1 0 50 49 Bs1 0 50 41 %_BS%_1 0 50 41 Bs1 0.3 0 0 1 50 0 %_BS%_1 0.3 0 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Rainbow)(Rainbow) 0 6 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>1001 %_Br1<0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>001 %_Br1<00000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020203030303030303030303030303030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040405050505050505050505050505050505050505050505050505050505050505050505050506060606060606060606060606060606060606060606060606060606060606060606060707070707070707070707070707070707070707070707><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0101 %_Br0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>101 %_Br[0 1 0 0 1 50 100 %_BS%_0 1 0 0 1 50 100 Bs1 1 0 0 1 50 80 %_BS%_1 1 0 0 1 50 80 Bs1 0.0279 0 0 1 50 60 %_BS%_1 0.0279 0 0 1 50 60 Bs1 0 1 0 1 50 40 %_BS%_1 0 1 0 1 50 40 Bs0 0 1 0 1 50 20 %_BS%_0 0 1 0 1 50 20 Bs0 1 1 0 1 50 0 %_BS%_0 1 1 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Orange Radial)(Yellow & Orange Radial) 1 2 Bd[0<0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6>01 %_Br[0 0 1 0 1 52 19 %_BS%_0 0 1 0 1 52 19 Bs0 0.55 0.9 0 1 50 100 %_BS%_0 0.55 0.9 0 1 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Brick)(Brick) 0 0 72 72 [%AI3_Tile(0 O 0 R 0.3 0.85 0.85 0 k 0.3 0.85 0.85 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR0 0 m0 72 L72 72 L72 0 L0 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR0 68.4097 m72 68.4097 lS0 61.209 m72 61.209 LS0 54.0088 m72 54.0088 LS0 46.8076 m72 46.8076 LS0 39.6084 m72 39.6084 LS0 32.4072 m72 32.4072 LS0 25.207 m72 25.207 LS0 18.0059 m72 18.0059 LS0 10.8057 m72 10.8057 LS0 3.6064 m72 3.6064 LS68.4102 68.4097 m68.4102 61.2217 lS54.0098 68.4097 m54.0098 61.2217 LS39.6094 68.4097 m39.6094 61.2217 LS25.21 68.4097 m25.21 61.2217 LS10.8105 68.4097 m10.8105 61.2217 LS68.4102 53.9717 m68.4102 46.7842 lS54.0098 53.9717 m54.0098 46.7842 LS39.6094 53.9717 m39.6094 46.7842 LS25.21 53.9717 m25.21 46.7842 LS10.8105 53.9717 m10.8105 46.7842 LS68.4102 39.5967 m68.4102 32.4092 lS54.0098 39.5967 m54.0098 32.4092 LS39.6094 39.5967 m39.6094 32.4092 LS25.21 39.5967 m25.21 32.4092 LS10.8105 39.5967 m10.8105 32.4092 LS68.4102 25.2217 m68.4102 18.0342 lS54.0098 25.2217 m54.0098 18.0342 LS39.6094 25.2217 m39.6094 18.0342 LS25.21 25.2217 m25.21 18.0342 LS10.8105 25.2217 m10.8105 18.0342 LS68.4102 10.7842 m68.4102 3.5967 lS54.0098 10.7842 m54.0098 3.5967 LS39.6094 10.7842 m39.6094 3.5967 LS25.21 10.7842 m25.21 3.5967 LS10.8105 10.7842 m10.8105 3.5967 LS61.1973 3.5967 m61.1973 0 LS46.7969 3.5967 m46.7969 0 LS32.3965 3.5967 m32.3965 0 LS17.9971 3.5967 m17.9971 0 LS3.5967 3.5967 m3.5967 0 lS61.1973 18.0342 m61.1973 10.8467 LS46.7969 18.0342 m46.7969 10.8467 LS32.3965 18.0342 m32.3965 10.8467 LS17.9971 18.0342 m17.9971 10.8467 LS3.5967 18.0342 m3.5967 10.8467 lS61.1973 32.4092 m61.1973 25.2217 LS46.7969 32.4092 m46.7969 25.2217 LS17.9971 32.4092 m17.9971 25.2217 LS3.5967 32.4092 m3.5967 25.2217 lS61.1973 46.7842 m61.1973 39.5967 LS46.7969 46.7842 m46.7969 39.5967 LS32.3965 46.7842 m32.3965 39.5967 LS17.9971 46.7842 m17.9971 39.5967 LS3.5967 46.7842 m3.5967 39.5967 lS61.1973 61.2217 m61.1973 54.0347 LS46.7969 61.2217 m46.7969 54.0347 LS32.3965 61.2217 m32.3965 54.0347 LS17.9971 61.2217 m17.9971 54.0347 LS3.5967 61.2217 m3.5967 54.0347 lS61.1973 71.959 m61.1973 68.4717 LS46.7969 71.959 m46.7969 68.4717 LS32.3965 71.959 m32.3965 68.4717 LS17.9971 71.959 m17.9971 68.4717 LS3.5967 71.959 m3.5967 68.4717 lS32.3965 32.4092 m32.3965 25.2217 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Confetti)(Confetti) 4.85 3.617 76.85 75.617 [%AI3_Tile(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR4.85 3.617 m4.85 75.617 L76.85 75.617 L76.85 3.617 L4.85 3.617 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 g 0 G) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR10.6 64.867 m7.85 62.867 lS9.1 8.617 m6.85 6.867 lS78.1 68.617 m74.85 67.867 lS76.85 56.867 m74.35 55.117 lS79.6 51.617 m76.6 51.617 lS76.35 44.117 m73.6 45.867 lS78.6 35.867 m76.6 34.367 lS76.1 23.867 m73.35 26.117 lS78.1 12.867 m73.85 13.617 lS68.35 14.617 m66.1 12.867 lS76.6 30.617 m73.6 30.617 lS62.85 58.117 m60.956 60.941 lS32.85 59.617 m31.196 62.181 lS47.891 64.061 m49.744 66.742 lS72.814 2.769 m73.928 5.729 lS67.976 2.633 m67.35 5.909 lS61.85 27.617 m59.956 30.441 lS53.504 56.053 m51.85 58.617 lS52.762 1.779 m52.876 4.776 lS45.391 5.311 m47.244 7.992 lS37.062 3.375 m35.639 5.43 lS55.165 34.828 m57.518 37.491 lS20.795 3.242 m22.12 5.193 lS14.097 4.747 m15.008 8.965 lS9.736 1.91 m8.073 4.225 lS31.891 5.573 m32.005 8.571 lS12.1 70.367 m15.6 68.867 lS9.35 54.867 m9.6 58.117 lS12.85 31.867 m14.35 28.117 lS10.1 37.367 m12.35 41.117 lS34.1 71.117 m31.85 68.617 lS38.35 71.117 m41.6 68.367 lS55.1 71.117 m58.35 69.117 lS57.35 65.117 m55.35 61.867 lS64.35 66.367 m69.35 68.617 lS71.85 62.867 m69.35 61.117 lS23.6 70.867 m23.6 67.867 lS20.6 65.867 m17.35 65.367 lS24.85 61.367 m25.35 58.117 lS25.85 65.867 m29.35 66.617 lS14.1 54.117 m16.85 56.117 lS12.35 11.617 m12.6 15.617 lS12.1 19.867 m14.35 22.367 lS26.1 9.867 m23.6 13.367 lS34.6 47.117 m32.1 45.367 lS62.6 41.867 m59.85 43.367 lS31.6 35.617 m27.85 36.367 lS36.35 26.117 m34.35 24.617 lS33.85 14.117 m31.1 16.367 lS37.1 9.867 m35.1 11.117 lS34.35 20.867 m31.35 20.867 lS44.6 56.617 m42.1 54.867 lS47.35 51.367 m44.35 51.367 lS44.1 43.867 m41.35 45.617 lS43.35 33.117 m42.6 30.617 lS43.85 23.617 m41.1 25.867 lS44.35 15.617 m42.35 16.867 lS67.823 31.1 m64.823 31.1 lS27.1 32.617 m29.6 30.867 lS31.85 55.117 m34.85 55.117 lS19.6 40.867 m22.1 39.117 lS16.85 35.617 m19.85 35.617 lS20.1 28.117 m22.85 29.867 lS52.1 42.617 m54.484 44.178 lS52.437 50.146 m54.821 48.325 lS59.572 54.133 m59.35 51.117 lS50.185 10.055 m53.234 9.928 lS51.187 15.896 m53.571 14.075 lS58.322 19.883 m59.445 16.823 lS53.1 32.117 m50.6 30.367 lS52.85 24.617 m49.6 25.617 lS61.85 9.117 m59.1 10.867 lS69.35 34.617 m66.6 36.367 lS67.1 23.617 m65.1 22.117 lS24.435 46.055 m27.484 45.928 lS25.437 51.896 m27.821 50.075 lS62.6 47.117 m65.321 46.575 lS19.85 19.867 m20.35 16.617 lS21.85 21.867 m25.35 22.617 lS37.6 62.867 m41.6 62.117 lS38.323 42.1 m38.823 38.6 lS69.35 52.617 m66.85 53.867 lS14.85 62.117 m18.1 59.367 lS9.6 46.117 m7.1 44.367 lS20.6 51.617 m18.6 50.117 lS46.141 70.811 m47.994 73.492 lS69.391 40.561 m71.244 43.242 lS38.641 49.311 m39.35 52.117 lS25.141 16.811 m25.85 19.617 lS36.6 32.867 m34.6 31.367 lS6.1 68.617 m2.85 67.867 lS4.85 56.867 m2.35 55.117 lS7.6 51.617 m4.6 51.617 lS6.6 35.867 m4.6 34.367 lS6.1 12.867 m1.85 13.617 lS4.6 30.617 m1.6 30.617 lS72.814 74.769 m73.928 77.729 lS67.976 74.633 m67.35 77.909 lS52.762 73.779 m52.876 76.776 lS37.062 75.375 m35.639 77.43 lS20.795 75.242 m22.12 77.193 lS9.736 73.91 m8.073 76.225 lS10.1 23.617 m6.35 24.367 lS73.217 18.276 m71.323 21.1 lS28.823 39.6 m29.505 42.389 lS49.6 38.617 m47.6 37.117 lS60.323 73.6 m62.323 76.6 lS60.323 1.6 m62.323 4.6 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Leaves - Fall )(Leaves - Fall ) 0 0 64.0781 78.9336 [%AI3_Tile(0 O 0 R 0.05 0.2 1 0 k 0.05 0.2 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR64.0781 78.9336 m64.0781 0 L0 0 L0 78.9336 L64.0781 78.9336 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.83 0 1 0 k 0.83 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR29.7578 0.9902 m30.4346 1.1914 30.7246 1.3428 V29.2559 4.0547 33.707 8.3359 34.627 9.0762 C35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 Cf13.8525 29.9844 m13.3281 29.5127 13.1309 29.25 V15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C7.2256 14.5 9.2598 15.6133 10.166 15.5645 C10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C8.1875 11.041 9.207 9.5107 10.166 7.0947 C10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C15.373 24.3779 15.373 27.2959 13.8525 29.9844 Cf41.2324 26.0742 m41.5518 26.7021 41.7549 26.959 V44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C46.3408 31.123 45.4395 33.084 44.2402 34.126 C45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C49.749 24.9766 50.584 26.9941 50.25 28.4609 C45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 Cf27.7578 38.7324 m28.4346 38.9316 28.7246 39.084 V27.2559 41.7969 31.707 46.0776 32.627 46.8169 C33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C38.002 44.582 37.3359 46.0547 36.5742 47.5039 C37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C30.7373 55.5146 30.166 54.314 29.2969 53.0366 C30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C30.9775 50.46 29.2852 51.2036 28.793 52.1958 C28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 Cf13.5195 70.3916 m12.9941 69.9209 12.7988 69.6587 V15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C7.8545 51.4497 8.873 49.9189 9.832 47.5039 C10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C15.041 64.7856 15.041 67.7046 13.5195 70.3916 Cf41.2324 64.4824 m41.5518 65.1113 41.7549 65.3682 V44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C51.2881 60.583 50.4268 61.8882 48.5645 62.333 C49.749 63.3862 50.584 65.4033 50.25 66.8691 C45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Stripes)(Stripes) 8.45 4.6001 80.45 76.6001 [%AI3_Tile(0 O 0 R 1 0.07 1 0 k 1 0.07 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 3.6 w 4 M []0 d0 XR8.2 8.2 m80.7 8.2 LS8.2 22.6001 m80.7 22.6001 LS8.2 37.0002 m80.7 37.0002 LS8.2 51.4 m80.7 51.4 LS8.2 65.8001 m80.7 65.8001 LS8.2 15.4 m80.7 15.4 LS8.2 29.8001 m80.7 29.8001 LS8.2 44.2 m80.7 44.2 LS8.2 58.6001 m80.7 58.6001 LS8.2 73.0002 m80.7 73.0002 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(New Pattern 1)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7834.75 7794.999 m-7834.75 7770.999 L-7884.75 7770.999 L-7884.75 7794.999 L-7834.75 7794.999 Lnu0 Ap0 O1 g-7854.75 7792.999 m-7866.96 7796.0518 -7875.4434 7786.0601 -7884.75 7778.9502 CF-7844.75 7792.999 m-7861.1279 7797.0942 -7870.8008 7777.7222 -7884.75 7773.3154 CF-7884.75 7772.999 m-7864.75 7767.999 -7854.75 7797.999 -7834.75 7792.999 CF-7874.75 7772.999 m-7858.3721 7768.9048 -7848.6992 7788.2769 -7834.75 7792.6841 CF-7864.75 7772.999 m-7852.54 7769.9473 -7844.0566 7779.939 -7834.75 7787.0479 CF-7844.75 7772.999 m-7841.1279 7772.0942 -7837.835 7772.3398 -7834.75 7773.3154 CF-7874.75 7792.999 m-7878.3721 7793.9048 -7881.665 7793.6582 -7884.75 7792.6841 CF-7844.7817 7773.125 m-7850.9009 7771.6162 -7854.7817 7773.125 V-7858.877 7771.6479 -7864.7817 7773.125 V-7869.7446 7771.4487 -7874.7817 7773.125 V-7880.7969 7771.5737 -7884.7817 7773.125 V-7884.7817 7792.8086 L-7881.6958 7793.7842 -7878.2969 7793.9902 -7874.3799 7792.9082 C-7868.2134 7794.4902 -7864.4634 7792.9082 V-7859.4634 7794.4902 -7854.3799 7792.8242 V-7850.0474 7794.4082 -7844.3799 7792.9082 V-7838.8799 7794.3242 -7834.7817 7793.125 V-7834.7817 7773.4399 L-7837.5254 7772.4282 -7840.6514 7771.9282 -7844.7817 7773.125 Cf0 R0 G1 J 1 j 0.5 w-7864.75 7792.999 m-7872.54 7794.9473 -7878.813 7791.585 -7884.75 7787.0479 CS-7854.75 7792.999 m-7866.96 7796.0518 -7875.4434 7786.0601 -7884.75 7778.9502 CS-7844.75 7792.999 m-7861.1279 7797.0942 -7870.8008 7777.7222 -7884.75 7773.3154 CS-7884.75 7772.999 m-7864.75 7767.999 -7854.75 7797.999 -7834.75 7792.999 CS-7874.75 7772.999 m-7858.3721 7768.9048 -7848.6992 7788.2769 -7834.75 7792.6841 CS-7864.75 7772.999 m-7852.54 7769.9473 -7844.0566 7779.939 -7834.75 7787.0479 CS-7854.75 7772.999 m-7846.96 7771.0518 -7840.687 7774.4146 -7834.75 7778.9502 CS-7844.75 7772.999 m-7841.1279 7772.0942 -7837.835 7772.3398 -7834.75 7773.3154 CS-7874.75 7792.999 m-7878.3721 7793.9048 -7881.665 7793.6582 -7884.75 7792.6841 CSUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 10)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884 7793.999 m-7833.8921 7793.999 L-7833.8921 7737.9751 L-7884 7737.9751 L-7884 7793.999 Lnu0 O0.1 1 1 0 k-7846.9014 7759.5742 m-7848.7178 7753.0952 -7858.8247 7756.4658 Y-7858.791 7756.5298 L-7868.8999 7753.1606 -7870.7144 7759.6392 V-7876.6758 7777.0063 -7871.4922 7783.7446 V-7864.7529 7793.3359 -7860.6055 7793.3359 V-7857.0103 7793.27 L-7852.8638 7793.27 -7846.125 7783.6816 Y-7840.9409 7776.9414 -7846.9014 7759.5742 Yfu0 0 0 1 k-7851.3926 7737.9751 m-7852.1167 7739.4194 -7852.9238 7740.4751 V-7852.4058 7740.063 -7851.5151 7739.1919 -7851.3926 7737.9751 Cf-7865.064 7740.4849 m-7865.8711 7739.4302 -7866.5942 7737.9858 Y-7866.4727 7739.2017 -7865.582 7740.0728 -7865.064 7740.4849 CfU0 0.61 0.74 0 k-7850.5977 7762.4609 m-7851.9038 7757.7954 -7859.1816 7760.2207 Y-7859.1567 7760.2681 L-7866.436 7757.8423 -7867.7417 7762.5073 V-7872.0337 7775.0112 -7868.3018 7779.8623 V-7863.4487 7786.7681 -7860.4634 7786.7681 V-7857.875 7786.7222 L-7854.8887 7786.7222 -7850.0366 7779.8169 Y-7846.3042 7774.9634 -7850.5977 7762.4609 Yfu1 Ap0.73 0.43 1 0.22 k0 R0 0 0 1 K-7854.6226 7765.2754 m-7853.813 7765.2754 -7853.1558 7764.6177 -7853.1558 7763.8086 c-7853.1558 7762.999 -7853.813 7762.3423 -7854.6226 7762.3423 c-7855.4321 7762.3423 -7856.0889 7762.999 -7856.0889 7763.8086 c-7856.0889 7764.6177 -7855.4321 7765.2754 -7854.6226 7765.2754 cb-7854.3638 7776.9966 m-7853.0806 7776.9966 -7852.0415 7776.1201 -7852.0415 7775.0415 c-7852.0415 7773.9614 -7853.0806 7773.0864 -7854.3638 7773.0864 c-7855.645 7773.0864 -7856.6846 7773.9614 -7856.6846 7775.0415 c-7856.6846 7776.1201 -7855.645 7776.9966 -7854.3638 7776.9966 cb-7853.834 7788.7856 m-7852.2817 7788.7856 -7851.0239 7788.1294 -7851.0239 7787.3208 c-7851.0239 7786.5112 -7852.2817 7785.854 -7853.834 7785.854 c-7855.3862 7785.854 -7856.645 7786.5112 -7856.645 7787.3208 c-7856.645 7788.1294 -7855.3862 7788.7856 -7853.834 7788.7856 cb-7849.6104 7760.5254 m-7848.8687 7760.5254 -7848.2671 7759.8154 -7848.2671 7758.936 c-7848.2671 7758.0591 -7848.8687 7757.3472 -7849.6104 7757.3472 c-7850.353 7757.3472 -7850.9546 7758.0591 -7850.9546 7758.936 c-7850.9546 7759.8154 -7850.353 7760.5254 -7849.6104 7760.5254 cb-7848.0034 7782.0825 m-7848.8818 7781.7354 -7849.1494 7780.3345 -7848.603 7778.9536 c-7848.0566 7777.5742 -7846.9014 7776.7358 -7846.0234 7777.085 c-7845.145 7777.4321 -7844.877 7778.833 -7845.4233 7780.2134 c-7845.9702 7781.5942 -7847.125 7782.4312 -7848.0034 7782.0825 cbu-7863.0566 7765.1582 m-7863.8662 7765.1582 -7864.5239 7764.5015 -7864.5239 7763.6929 c-7864.5239 7762.8823 -7863.8662 7762.2266 -7863.0566 7762.2266 c-7862.248 7762.2266 -7861.5913 7762.8823 -7861.5913 7763.6929 c-7861.5913 7764.5015 -7862.248 7765.1582 -7863.0566 7765.1582 cb-7863.3159 7776.8794 m-7864.5991 7776.8794 -7865.6382 7776.0049 -7865.6382 7774.9238 c-7865.6382 7773.8442 -7864.5991 7772.9697 -7863.3159 7772.9697 c-7862.0342 7772.9697 -7860.9951 7773.8442 -7860.9951 7774.9238 c-7860.9951 7776.0049 -7862.0342 7776.8794 -7863.3159 7776.8794 cb-7863.8457 7788.6704 m-7865.3975 7788.6704 -7866.6558 7788.0142 -7866.6558 7787.2031 c-7866.6558 7786.3926 -7865.3975 7785.7378 -7863.8457 7785.7378 c-7862.293 7785.7378 -7861.0352 7786.3926 -7861.0352 7787.2031 c-7861.0352 7788.0142 -7862.293 7788.6704 -7863.8457 7788.6704 cb-7868.0679 7760.4087 m-7868.811 7760.4087 -7869.4121 7759.6978 -7869.4121 7758.8208 c-7869.4121 7757.9438 -7868.811 7757.2329 -7868.0679 7757.2329 c-7867.3262 7757.2329 -7866.7241 7757.9438 -7866.7241 7758.8208 c-7866.7241 7759.6978 -7867.3262 7760.4087 -7868.0679 7760.4087 cb-7869.6758 7781.9673 m-7868.7983 7781.6191 -7868.5298 7780.2183 -7869.0762 7778.8374 c-7869.6226 7777.457 -7870.7778 7776.6191 -7871.6558 7776.9673 c-7872.5342 7777.3159 -7872.8032 7778.7178 -7872.2568 7780.0962 c-7871.7104 7781.4766 -7870.5552 7782.3154 -7869.6758 7781.9673 cbUU0 Ap0 0 0 1 k-7859.1318 7760.6543 m-7859.1318 7793.314 lFu-7843.3906 7746.5298 m-7844.0815 7745.8369 -7847.019 7746.7017 Y-7848.229 7746.8735 -7848.0562 7749.2935 Y-7847.019 7751.3682 -7847.7104 7751.1934 Y-7848.2998 7751.1934 -7849.855 7751.1138 -7850.7822 7751.063 C-7851.1226 7749.6689 -7852.6128 7748.4751 -7854.7217 7747.769 C-7852.7578 7744.4766 -7854.5176 7743.7944 -7856.2935 7743.7896 C-7856.3096 7743.7017 -7856.332 7743.6162 -7856.3599 7743.5327 C-7854.1089 7743.5786 -7853.6392 7741.2583 Y-7853.4048 7741.063 -7853.1606 7740.7856 -7852.9238 7740.4751 C-7853.1416 7740.647 -7853.2944 7740.7393 Y-7854.2583 7740.7393 -7855.8774 7742.4937 -7856.4966 7743.2065 C-7856.9194 7742.4434 -7857.853 7741.9102 -7858.9434 7741.9102 c-7860.0698 7741.9102 -7861.0322 7742.479 -7861.4312 7743.2847 C-7861.9985 7742.623 -7863.6968 7740.7505 -7864.6943 7740.7505 C-7864.8462 7740.6567 -7865.064 7740.4849 V-7864.8281 7740.7935 -7864.583 7741.0728 -7864.3481 7741.2681 C-7863.8638 7743.6558 -7861.5254 7743.5337 V-7861.5449 7743.5889 -7861.5674 7743.6431 -7861.5806 7743.7017 C-7864.9238 7743.6919 -7863.937 7746.3169 -7863.2104 7747.6602 C-7865.5918 7748.375 -7867.2646 7749.7007 -7867.5239 7751.2495 C-7868.4473 7751.2993 -7869.6729 7751.3574 -7870.1802 7751.3574 C-7870.8726 7751.5313 -7869.835 7749.4575 V-7869.6626 7747.0386 -7870.8726 7746.8657 V-7873.8096 7746.0015 -7874.501 7746.6929 V-7875.1919 7747.5562 -7876.0562 7746.3462 V-7875.1919 7748.0742 -7873.291 7747.5562 V-7870.6982 7746.8657 -7871.3906 7748.5938 V-7871.9087 7752.0498 -7870.1802 7752.7402 V-7868.0342 7753.854 -7866.2822 7754.0879 V-7865.9087 7754.4136 -7865.4639 7754.7104 -7864.958 7754.9761 C-7867.5562 7755.0464 -7870.2246 7755.9199 -7871.0752 7758.9551 C-7871.5151 7760.2422 -7872.0518 7762.2422 V-7873.1025 7762.8247 -7874.3022 7764.0073 -7875.541 7766.2622 C-7876.394 7769.4497 -7877.167 7764.7119 V-7878.3975 7761.6489 -7879.6504 7761.5376 V-7878.4702 7763.2866 -7878.9038 7764.415 V-7877.2998 7768.917 -7875.6138 7767.8994 V-7874.0986 7767.2192 -7872.688 7764.8154 V-7873.0698 7766.4966 -7873.4326 7768.417 -7873.6743 7770.3906 C-7874.4888 7770.397 L-7876.3506 7769.479 -7876.3262 7772.9585 V-7877.1226 7776.9448 -7876.3594 7779.6826 V-7875.647 7782.1494 -7878.1274 7780.9302 V-7879.2842 7781.3242 -7879.9839 7780.7871 V-7882.3882 7779.4126 -7884 7781.123 V-7882.147 7780.8794 -7881.4482 7781.417 V-7879.9785 7781.561 -7879.897 7782.1782 V-7876.9561 7782.855 -7876.188 7782.0767 V-7874.417 7781.2134 -7875.1304 7778.3599 V-7875.8799 7770.481 -7874.3198 7772.4048 V-7874.1182 7772.4214 -7873.8784 7772.5166 V-7874.1519 7776.4321 -7873.8018 7780.3247 -7871.9961 7782.8511 C-7875.4536 7775.333 -7870.2974 7760.3032 Y-7868.9609 7755.5298 -7863.127 7756.1006 -7860.145 7756.7334 C-7860.0718 7758.1294 -7859.8374 7759.9487 -7859.1318 7760.6543 C-7858.2134 7758.6958 -7858.2358 7757.0728 V-7857.0762 7756.7217 -7850.2817 7754.8442 -7847.4487 7758.3359 C-7848.4312 7755.813 -7850.8262 7755.0186 -7853.2007 7754.9185 C-7852.667 7754.6313 -7852.2041 7754.3042 -7851.8257 7753.9497 C-7850.041 7753.7856 -7847.7104 7752.5767 Y-7845.9814 7751.8857 -7846.5015 7748.4302 Y-7847.1919 7746.7017 -7844.5991 7747.3926 Y-7842.7002 7747.9102 -7841.835 7746.1831 Y-7842.7002 7747.3926 -7843.3906 7746.5298 Yf-7837.9082 7780.9521 m-7838.6074 7781.4888 -7839.7632 7781.0938 Y-7842.2446 7782.313 -7841.5327 7779.8462 Y-7840.769 7777.1094 -7841.564 7773.1216 Y-7841.541 7769.644 -7843.4014 7770.5591 Y-7844.0342 7770.5552 L-7844.3198 7768.6118 -7844.7046 7766.7544 -7845.0898 7765.1694 C-7843.7129 7767.4194 -7842.2778 7768.063 Y-7840.5913 7769.0815 -7838.9878 7764.5786 Y-7839.4214 7763.4497 -7838.2417 7761.7017 Y-7839.4937 7761.812 -7840.7246 7764.875 Y-7841.4976 7769.6143 -7842.3511 7766.4263 Y-7843.5776 7764.1895 -7844.769 7763.0098 -7845.814 7762.4224 C-7846.2026 7761.063 -7846.4858 7760.2383 Y-7846.7002 7759.4722 -7847.0337 7758.8481 -7847.4487 7758.3359 C-7847.3799 7758.5122 -7847.3174 7758.6978 -7847.2632 7758.8911 C-7841.3022 7776.2583 -7846.4858 7782.9966 V-7853.2246 7792.5864 -7857.3721 7792.5864 V-7860.9663 7792.6514 L-7865.1138 7792.6514 -7871.853 7783.061 Y-7871.9038 7782.9951 -7871.9463 7782.9214 -7871.9961 7782.8511 C-7871.7378 7783.4136 -7871.437 7783.9399 -7871.0752 7784.4087 C-7864.3359 7793.999 -7860.189 7793.999 V-7856.5942 7793.9346 L-7852.4482 7793.9346 -7845.709 7784.3442 Y-7843.5801 7781.5767 -7843.3306 7777.0166 -7843.7769 7772.605 C-7843.6553 7772.5742 -7843.5698 7772.5679 Y-7842.0112 7770.647 -7842.7598 7778.5239 Y-7843.4746 7781.3784 -7841.7026 7782.2402 Y-7840.9351 7783.0186 -7837.9946 7782.3423 Y-7837.9136 7781.7246 -7836.4434 7781.5806 Y-7835.7446 7781.0449 -7833.8921 7781.2881 Y-7835.5024 7779.5767 -7837.9082 7780.9521 YfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884 7793.999 m-7819.187 7793.999 L-7819.187 7729.9014 L-7884 7729.9014 L-7884 7793.999 Lnu0 O0 g-7849.6978 7752.4287 m-7851.6094 7729.9014 L-7853.5215 7752.4287 L-7852.9033 7752.3066 -7852.2642 7752.2402 -7851.6094 7752.2402 c-7850.9551 7752.2402 -7850.3159 7752.3066 -7849.6978 7752.4287 Cf-7861.2402 7760.397 m-7884 7762.3296 L-7861.1138 7764.2729 L-7861.2856 7763.5464 -7861.3848 7762.793 -7861.3848 7762.0151 c-7861.3848 7761.4624 -7861.3281 7760.9238 -7861.2402 7760.397 Cf-7856.519 7753.5718 m-7870.1626 7744.8042 L-7860.2153 7757.377 L-7859.3574 7755.7905 -7858.0718 7754.4761 -7856.519 7753.5718 Cf-7853.481 7771.6074 m-7851.5786 7793.999 L-7849.6768 7771.5962 L-7850.3018 7771.7222 -7850.9473 7771.7905 -7851.6094 7771.7905 c-7852.25 7771.7905 -7852.873 7771.7241 -7853.481 7771.6074 Cf-7841.9609 7763.5063 m-7819.187 7761.5728 L-7842.083 7759.6289 L-7842.083 7759.8506 L-7841.9258 7760.5479 -7841.834 7761.269 -7841.834 7762.0151 c-7841.834 7762.5234 -7841.8848 7763.019 -7841.9609 7763.5063 Cf-7860.1138 7766.8257 m-7870.1641 7779.5288 L-7856.2778 7770.605 L-7857.8823 7769.73 -7859.2114 7768.415 -7860.1138 7766.8257 Cf-7842.9961 7757.394 m-7832.875 7744.605 L-7846.7666 7753.5313 L-7845.1768 7754.4409 -7843.8633 7755.7793 -7842.9961 7757.394 Cf-7846.6895 7770.4502 m-7832.873 7779.3281 L-7842.9658 7766.5728 L-7843.8198 7768.189 -7845.1152 7769.5313 -7846.6895 7770.4502 Cf-7842.8887 7766.6128 m-7842.3862 7765.6641 -7842.043 7764.6206 -7841.875 7763.519 c-7841.7993 7763.0288 -7841.748 7762.5273 -7841.748 7762.0151 c-7841.748 7761.2632 -7841.8398 7760.5342 -7841.998 7759.8306 c-7842.1958 7758.957 -7842.5049 7758.123 -7842.918 7757.354 c-7843.7954 7755.7241 -7845.1191 7754.3735 -7846.7241 7753.4561 c-7847.6294 7752.937 -7848.6226 7752.5537 -7849.6802 7752.3457 c-7850.3047 7752.2202 -7850.9497 7752.1519 -7851.6094 7752.1519 c-7852.2695 7752.1519 -7852.915 7752.2202 -7853.5391 7752.3457 c-7854.623 7752.5601 -7855.6382 7752.957 -7856.5625 7753.4961 c-7858.1313 7754.4097 -7859.4282 7755.7358 -7860.291 7757.3345 c-7860.7969 7758.269 -7861.145 7759.2959 -7861.3262 7760.3823 c-7861.415 7760.915 -7861.4727 7761.4585 -7861.4727 7762.0151 c-7861.4727 7762.7998 -7861.3711 7763.5601 -7861.1978 7764.293 c-7860.981 7765.2065 -7860.6406 7766.0728 -7860.187 7766.8696 c-7859.2793 7768.4722 -7857.939 7769.7998 -7856.3174 7770.6826 c-7855.4487 7771.1553 -7854.5 7771.4976 -7853.4961 7771.6929 c-7852.8848 7771.811 -7852.2554 7771.8774 -7851.6094 7771.8774 c-7850.9414 7771.8774 -7850.29 7771.8081 -7849.6602 7771.6826 c-7848.5786 7771.4663 -7847.5664 7771.0649 -7846.6455 7770.5273 c-7845.0566 7769.5967 -7843.751 7768.2441 -7842.8887 7766.6128 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 3)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7874.75 7794.999 m-7874.75 7770.999 L-7884.75 7770.999 L-7884.75 7794.999 L-7874.75 7794.999 Lnuu0 Ap0 O1 g-7875.4058 7786.5361 m-7874.9878 7785.4351 -7874.75 7784.2466 -7874.75 7782.999 c-7874.75 7781.1377 -7875.2681 7779.3999 -7876.1543 7777.9063 c-7877.897 7774.9727 -7881.0898 7772.999 -7884.75 7772.999 C-7884.75 7792.999 L-7884.4297 7792.999 -7884.1143 7792.981 -7883.8018 7792.9521 c-7881.9121 7792.7754 -7880.1807 7792.064 -7878.7441 7790.9814 c-7877.2471 7789.854 -7876.0801 7788.3174 -7875.4058 7786.5361 cf0 R0 G1 J 1 j 0.5 w-7884.75 7773.3169 m-7881.7207 7774.2734 -7878.8926 7775.9321 -7876.1543 7777.9063 CS-7884.75 7778.9502 m-7881.5991 7781.356 -7878.543 7784.0864 -7875.4058 7786.5361 CS-7878.7441 7790.9814 m-7880.8105 7789.8911 -7882.7993 7788.5337 -7884.75 7787.0425 CS-7883.8018 7792.9521 m-7884.1191 7792.8682 -7884.4375 7792.7847 -7884.75 7792.686 CS-7878.7441 7790.9814 m-7880.1807 7792.064 -7881.9121 7792.7734 -7883.8018 7792.9521 CS-7875.4058 7786.5361 m-7874.9878 7785.4351 -7874.75 7784.2466 -7874.75 7782.999 c-7874.75 7781.1377 -7875.2681 7779.3999 -7876.1543 7777.9063 CS-7884.75 7792.999 m-7884.4297 7792.999 -7884.1143 7792.981 -7883.8018 7792.9521 CS-7878.7441 7790.9814 m-7877.2471 7789.854 -7876.0801 7788.3174 -7875.4058 7786.5361 CS-7876.1543 7777.9063 m-7877.8975 7774.9727 -7881.0898 7772.999 -7884.75 7772.999 CSUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 34)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884.0254 7794.0254 m-7828.0542 7794.0254 L-7828.0542 7732.5337 L-7884.0254 7732.5337 L-7884.0254 7794.0254 Lnuu0 O0.0745 0.9 0.9019 0.18 k0 R0 0 0 1 K1 J 1 j 0.0518 w-7857.5991 7770.7217 m-7857.3594 7781.521 -7862.8794 7791.8394 v-7862.4009 7793.999 -7860.959 7793.999 v-7861.2002 7790.6401 -7860.2393 7790.1606 v-7855.9199 7778.1602 -7856.6382 7770.2402 v-7857.5991 7770.7217 lb-7857.5991 7770.7217 m-7859.2793 7775.999 -7871.0391 7777.2007 v-7875.3594 7777.6802 -7875.5991 7779.1206 v-7869.1206 7769.519 -7868.1602 7769.7598 v-7881.3594 7764.001 -7884 7758.7192 v-7878.959 7761.6001 -7875.5991 7759.4399 v-7867.6802 7759.2007 -7862.6406 7761.3608 v-7858.8008 7763.2808 -7866.7202 7747.2007 v-7862.8794 7758.96 -7859.2793 7732.5601 v-7858.3198 7737.8398 -7856.8799 7739.2808 v-7850.8799 7746.96 -7851.8398 7749.1206 v-7852.3198 7752.96 -7847.7598 7746.7202 v-7848 7756.3208 -7850.4009 7759.6802 v-7852.5591 7763.2808 -7846.5591 7761.1206 v-7840.5591 7759.2007 -7835.2793 7760.8799 v-7829.7598 7762.3198 -7828.0801 7759.4399 v-7839.8398 7771.9199 -7845.5991 7771.6802 v-7843.9194 7775.2808 l-7841.519 7780.0806 -7842 7781.2808 v-7857.2681 7771.8823 -7857.5991 7770.7217 vb-7857.5991 7770.7217 m-7854.959 7752.2402 -7857.5991 7744.5601 v-7859.998 7734.001 -7859.2793 7732.5601 vS-7856.1602 7759.4399 m-7850.1602 7754.6401 -7848.959 7749.3599 vS-7856.1602 7758.7192 m-7865.0391 7751.041 -7866.7202 7747.2007 vS-7828.0801 7759.4399 m-7829.2793 7761.6001 -7857.3594 7769.7598 y-7862.4009 7764.2417 -7873.9199 7761.8398 v-7881.5986 7760.8799 -7884 7758.7192 vS-7874.6382 7777.6802 m-7863.1191 7768.561 -7857.3594 7769.7598 y-7843.1992 7775.999 -7842 7781.2808 vSUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 36)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7883.8496 7793.9951 m-7833.96 7793.9951 L-7833.96 7742.9258 L-7883.8496 7742.9258 L-7883.8496 7793.9951 Lnu0 O0.025 0.1 0.475 0 k-7862.1504 7761.9038 m-7864.4766 7760.812 -7866.6914 7760.4434 -7868.373 7760.9233 c-7869.0518 7761.1167 -7869.645 7761.4463 -7870.123 7761.9233 c-7870.6006 7762.4014 -7870.9297 7762.9946 -7871.123 7763.6719 c-7872.0088 7766.771 -7870.0103 7771.6768 -7865.9233 7775.7666 c-7861.834 7779.853 -7856.9297 7781.8511 -7853.8286 7780.9663 c-7853.1519 7780.771 -7852.5586 7780.4414 -7852.0806 7779.9658 c-7851.603 7779.4878 -7851.2754 7778.895 -7851.082 7778.2158 c-7850.5176 7776.2456 -7851.1226 7773.5439 -7852.6855 7770.7886 c-7853.582 7769.2095 -7854.791 7767.6128 -7856.2793 7766.1226 c-7858.1504 7764.2534 -7860.1914 7762.8242 -7862.1504 7761.9038 cfu0.0035 0.014 0.0665 0 k-7861.2183 7760.9722 m-7863.8306 7760.021 -7866.3975 7759.9678 -7868.373 7760.9233 C-7866.6914 7760.4434 -7864.4766 7760.812 -7862.1504 7761.9038 c-7861.6191 7762.1538 -7861.0806 7762.4434 -7860.543 7762.7671 C-7858.8984 7762.0527 L-7859.667 7761.6167 -7860.4434 7761.2534 -7861.2183 7760.9722 cf0.015 0.06 0.285 0 k-7858.8984 7762.0527 m-7860.543 7762.7671 L-7859.0962 7763.6343 -7857.6426 7764.7598 -7856.2793 7766.1226 c-7856.1538 7766.2495 -7856.0327 7766.3774 -7855.9102 7766.5054 C-7855.2153 7764.8623 L-7856.3706 7763.7231 -7857.6191 7762.7808 -7858.8984 7762.0527 CfUu0.039 0.156 0.741 0 k-7849.687 7749.4038 m-7849.9746 7749.6914 -7861.2183 7760.9722 Y-7860.4434 7761.2534 -7859.667 7761.6167 -7858.8984 7762.0527 C-7845.4146 7748.5698 L-7847.061 7748.0991 -7848.6406 7748.355 -7849.687 7749.4038 cf0.025 0.1 0.475 0 k-7845.4146 7748.5698 m-7858.8984 7762.0527 L-7857.584 7762.8022 -7856.2969 7763.7754 -7855.1143 7764.957 c-7855.084 7764.9858 -7855.0586 7765.0151 -7855.0278 7765.0449 C-7841.3408 7751.3569 L-7841.5264 7751.1318 -7841.7202 7750.9136 -7841.9302 7750.7007 c-7843.0103 7749.6226 -7844.2305 7748.9082 -7845.4146 7748.5698 CfUu0.0115 0.046 0.2185 0 k-7835.9346 7758.3921 m-7833.5337 7755.9888 -7833.335 7752.0898 -7835.1382 7748.6968 C-7836.2954 7749.1177 L-7834.0938 7752.4961 -7833.8398 7756.2944 -7835.9346 7758.3921 cf0.015 0.06 0.285 0 k-7843.5337 7743.5952 m-7842.582 7742.9258 L-7845.2046 7742.3511 -7847.8306 7742.9136 -7849.6206 7744.7056 c-7848.1719 7743.2578 -7845.9082 7742.9302 -7843.5337 7743.5952 Cf0.0295 0.118 0.5605 0 k-7843.5337 7743.5952 m-7845.9082 7742.9302 -7848.1719 7743.2578 -7849.6206 7744.7056 c-7851.019 7746.105 -7851.3706 7748.2632 -7850.7954 7750.5464 C-7848.8672 7747.5439 -7845.4082 7748.5537 V-7843.585 7743.6304 L-7843.5337 7743.5952 Lf*u1 D0.048 0.192 0.912 0 k-7835.9346 7758.3921 m-7837.2817 7759.7378 -7839.332 7760.1128 -7841.5234 7759.6265 C-7851.6714 7769.7729 L-7851.7695 7769.5679 -7851.7695 7769.5679 -7851.6714 7769.7729 c-7850.2246 7772.814 -7849.9702 7775.915 -7851.082 7778.2158 C-7850.5176 7776.2456 -7851.1226 7773.5439 -7852.6855 7770.7886 c-7853.5054 7769.3433 -7854.5918 7767.8838 -7855.9102 7766.5054 C-7855.2153 7764.8623 L-7855.1816 7764.894 -7855.1465 7764.9233 -7855.1143 7764.957 c-7855.084 7764.9878 -7855.0566 7765.0166 -7855.0273 7765.0464 c-7855.0278 7765.0464 -7855.0278 7765.0464 -7855.0278 7765.0449 C-7841.3408 7751.3569 L-7836.3262 7749.1279 L-7836.2954 7749.1177 L-7834.0938 7752.4961 -7833.8398 7756.2944 -7835.9346 7758.3921 cf*U0 D0.0215 0.086 0.4085 0 k-7842.582 7742.9258 m-7843.5337 7743.5952 L-7841.6846 7744.1104 -7839.7656 7745.228 -7838.1138 7746.8823 c-7837.4063 7747.5889 -7836.7998 7748.3418 -7836.2954 7749.1177 C-7835.1382 7748.6968 L-7835.6553 7747.7241 -7836.3374 7746.793 -7837.1802 7745.9502 c-7838.7695 7744.3594 -7840.6758 7743.3423 -7842.582 7742.9258 Cf0.0205 0.082 0.3895 0 k-7836.2954 7749.1177 m-7836.7998 7748.3418 -7837.4063 7747.5889 -7838.1138 7746.8823 c-7839.7656 7745.228 -7841.6846 7744.1104 -7843.5337 7743.5952 C-7843.585 7743.6304 L-7845.4082 7748.5537 L-7844.2114 7748.9214 -7842.9878 7749.6431 -7841.9302 7750.7007 c-7841.7202 7750.9136 -7841.5264 7751.1318 -7841.3408 7751.3569 C-7836.3262 7749.1279 L-7836.2954 7749.1177 LfUu0.445 0.356 0.267 0 k-7883.8496 7793.9951 m-7861.957 7770.9678 L-7862.2007 7770.6489 -7862.5752 7770.6128 -7862.8887 7770.6582 C-7867.1802 7775.2886 -7878.3145 7787.4561 -7882.7266 7792.2783 C-7883.5649 7793.3511 -7884 7793.9927 -7883.8496 7793.9951 Cf0.15 0.12 0.09 0 k-7883.834 7793.9951 m-7882.6606 7793.7026 -7861.6934 7772.0024 Y-7861.6934 7771.5015 -7861.7993 7771.1753 -7861.957 7770.9678 C-7883.8496 7793.9951 L-7883.8442 7793.9951 -7883.8418 7793.999 -7883.834 7793.9951 cf0.2 0.16 0.12 0 k-7882.7266 7792.2783 m-7878.3145 7787.4561 -7867.1802 7775.2886 -7862.8887 7770.6582 C-7863.2002 7770.7041 -7863.4526 7770.8296 Y-7864.603 7771.1318 -7878.5742 7786.9614 -7882.7266 7792.2783 CfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 37)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7882.9502 7793.2319 m-7833.0391 7793.2319 L-7833.0391 7729.1143 L-7882.9502 7729.1143 L-7882.9502 7793.2319 Lnu0 O0 0 0 1 k0 R0 0 0 1 K0 w-7833.2358 7729.1143 m-7833.6064 7729.248 -7833.9858 7729.2822 -7834.3833 7729.2026 c-7834.4863 7729.167 l-7834.5254 7729.1602 -7834.5703 7729.1782 -7834.6025 7729.1982 c-7834.9434 7729.3921 l-7838.7129 7731.2954 -7842.0962 7733.896 -7844.5 7737.4463 c-7845.9634 7739.5913 -7847.123 7741.8784 -7848.7993 7743.856 c-7849.1729 7744.209 -7849.1758 7744.772 -7848.834 7745.1304 c-7848.4951 7745.501 -7847.918 7745.5073 -7847.561 7745.165 c-7847.4038 7745.2095 l-7847.2642 7745.1279 -7847.0742 7745.0698 -7847.0234 7744.957 c-7845.853 7742.2026 -7845.1895 7739.5137 -7843.4336 7737.1382 c-7841.1719 7734.0942 -7838.1777 7731.9937 -7835.0298 7730.0234 c-7834.3672 7729.605 L-7834.4966 7729.6343 L-7833.7695 7729.6426 l-7833.791 7729.6113 -7833.8008 7729.5952 -7833.8223 7729.564 C-7833.6064 7729.5234 -7833.377 7729.4746 -7833.1626 7729.4326 c-7833.0762 7729.4233 -7833.0186 7729.3384 -7833.0391 7729.2378 c-7833.0503 7729.1519 -7833.1382 7729.1079 -7833.2358 7729.1143 c-7833.2358 7729.1143 lb-7849.2222 7742.9946 m-7849.5742 7742.8066 -7849.9658 7742.6714 -7850.248 7742.3882 c-7856.4521 7736.1714 -7866.6802 7735.2729 -7874.0488 7741.6846 C-7874.1582 7741.7808 -7874.1582 7741.957 -7874.063 7742.064 C-7871.0527 7740.9434 -7862.8838 7742.3745 -7859.3223 7745.4111 C-7859.2534 7745.4663 -7859.1465 7745.4526 -7859.1055 7745.3706 C-7859.0503 7745.3042 -7859.0664 7745.1953 -7859.1328 7745.1558 C-7862.5625 7742.0854 -7867.0674 7740.2896 -7871.6729 7740.7471 C-7868.8535 7739.1846 -7865.6313 7738.4937 -7862.3984 7738.688 c-7857.7144 7738.9712 -7853.4634 7741.1182 -7849.3711 7743.2783 c-7849.291 7743.3184 -7849.1978 7743.293 -7849.1553 7743.2104 C-7849.1016 7743.1304 -7849.1426 7743.0342 -7849.2222 7742.9946 cb-7858.647 7744.335 m-7860.2266 7748.3608 -7862.3911 7752.3198 -7865.8018 7755.0762 c-7865.9648 7755.2114 -7865.9946 7755.4487 -7865.8711 7755.605 c-7865.7344 7755.7671 -7865.5049 7755.7793 -7865.3481 7755.6558 c-7861.123 7753.5962 -7858.1904 7749.1304 -7858.1626 7744.4009 c-7858.1626 7744.4009 l-7858.1328 7744.2671 -7858.2354 7744.1343 -7858.3633 7744.1216 c-7858.5039 7744.105 -7858.6318 7744.1968 -7858.647 7744.335 c-7858.647 7744.335 lb-7852.9414 7749.0166 m-7853.042 7749.1807 -7853.1152 7749.3833 -7853.2617 7749.4814 c-7856.0806 7751.3906 -7858.9785 7752.6304 -7861.8848 7754.1318 c-7862.0503 7754.209 -7862.1118 7754.4175 -7862.0313 7754.5698 c-7861.9512 7754.7222 -7861.7559 7754.7793 -7861.5898 7754.7041 c-7858.439 7753.3232 -7854.313 7752.499 -7852.6729 7749.1792 c-7852.6289 7749.1104 -7852.6455 7749.0142 -7852.7266 7748.9648 c-7852.7959 7748.9194 -7852.897 7748.9487 -7852.9414 7749.0166 c-7852.9414 7749.0166 lb-7852.6602 7749.9175 m-7852.4438 7750.4287 -7852.1431 7750.8896 -7852.0503 7751.4351 c-7851.2183 7756.2769 -7851.1152 7761.0415 -7852.248 7765.687 c-7852.248 7765.687 l-7852.3418 7765.9526 -7852.2114 7766.2441 -7851.9438 7766.3384 c-7851.6777 7766.4326 -7851.3882 7766.312 -7851.2935 7766.0474 c-7849.293 7760.811 -7849.897 7754.7368 -7852.3711 7749.7822 c-7852.4063 7749.7002 -7852.498 7749.6689 -7852.582 7749.6914 c-7852.6641 7749.7271 -7852.6978 7749.8345 -7852.6602 7749.9175 c-7852.6602 7749.9175 lb-7851.5352 7765.5938 m-7848.8984 7763.2271 -7846.6816 7760.251 -7845.853 7756.7358 c-7845.853 7756.7358 l-7845.7246 7756.1807 -7846.0742 7755.6226 -7846.6416 7755.4897 c-7847.1992 7755.3745 -7847.7578 7755.7241 -7847.8862 7756.2783 c-7848.5649 7759.5313 -7849.8711 7762.6719 -7851.7954 7765.3862 c-7851.7954 7765.3862 l-7851.8462 7765.4546 -7851.834 7765.5566 -7851.7695 7765.6191 c-7851.6992 7765.6694 -7851.5977 7765.6577 -7851.5352 7765.5938 c-7851.5352 7765.5938 lb-7836.3711 7758.1826 m-7837.7114 7753.8296 -7840.2598 7750.0688 -7843.689 7747.1528 C-7843.729 7747.0718 -7843.8242 7747.0322 -7843.9038 7747.0854 C-7843.9863 7747.1265 -7844.0122 7747.2202 -7843.9722 7747.3018 C-7843.957 7747.7886 -7843.7144 7748.2329 -7843.4458 7748.5313 c-7838.4063 7754.1616 -7834.9902 7762.7192 -7837.3433 7769.9546 C-7837.0762 7764.4502 -7838.7241 7758.2998 -7842.1362 7753.6738 c-7843.1606 7752.269 -7844.7422 7752.1206 -7846.3081 7752.2026 C-7846.4023 7752.189 -7846.4834 7752.2422 -7846.4961 7752.3359 c-7846.5098 7752.4185 -7846.4551 7752.5137 -7846.3623 7752.5249 C-7843.1479 7753.769 -7841.4878 7757.2241 -7840.084 7760.1934 c-7838.415 7763.7441 -7837.7017 7767.6382 -7838.0054 7771.499 C-7838.0454 7771.6768 -7838.1138 7773.397 -7837.9775 7773.4097 C-7837.8306 7773.439 -7837.709 7773.3433 -7837.6802 7773.1934 C-7837.645 7773.0449 -7834.6426 7763.7983 -7836.3711 7758.1826 cb-7844.4863 7745.4902 m-7843.3945 7741.6206 -7841.1094 7738.2505 -7838.4824 7735.2378 c-7838.3306 7735.104 -7838.3145 7734.8862 -7838.4502 7734.7354 c-7838.5752 7734.6001 -7838.8047 7734.5815 -7838.957 7734.7178 c-7842.3306 7737.3311 -7843.4487 7741.541 -7844.7954 7745.3745 c-7844.7954 7745.3745 l-7844.8262 7745.4639 -7844.7754 7745.5586 -7844.6982 7745.5864 c-7844.6094 7745.6182 -7844.5166 7745.5679 -7844.4863 7745.4902 c-7844.4863 7745.4902 lb-7838.5313 7770.1089 m-7838.5991 7770.0562 -7838.707 7770.0825 -7838.748 7770.1494 C-7838.9634 7770.4746 -7840.6914 7772.519 -7841.3926 7773.1401 c-7846.1719 7777.394 -7849.5137 7781.96 -7857.5391 7785.7222 c-7864.4512 7788.9634 -7867.1113 7791.5952 -7874.3862 7789.8257 c-7877.687 7789.0288 -7879.0313 7788.5313 -7880.4351 7783.4546 C-7881.9473 7777.2983 -7880.8672 7779.7822 -7881.084 7772.438 c-7881.2222 7767.6968 -7884 7756.4546 -7871.5254 7742.2593 C-7871.4199 7742.1479 -7871.4336 7741.9951 -7871.5337 7741.9063 C-7871.6328 7741.8022 -7871.7959 7741.8159 -7871.8862 7741.915 C-7877.5786 7746.7158 -7881.0234 7753.6577 -7882.3145 7760.9414 c-7883.2871 7766.4663 -7882.9199 7771.2495 -7882.666 7777.6362 c-7882.5688 7780.0938 -7883.6855 7787.0718 -7878.9102 7791.062 c-7875.3926 7793.999 -7870.3911 7793.5464 -7866.3545 7792.1558 c-7860.6992 7790.2114 -7855.9727 7787.146 -7850.8711 7783.6089 c-7847.2656 7781.125 -7839.2881 7771.2847 -7838.4785 7770.3257 C-7838.4351 7770.2583 -7838.4502 7770.1494 -7838.5313 7770.1089 Cb-7873.0503 7757.3057 m-7872.168 7756.5024 -7871.7017 7757.8447 -7871.4297 7758.6006 c-7871.1626 7759.3569 -7870.189 7759.2495 -7870.5127 7759.5728 c-7870.8369 7759.897 -7870.8369 7759.9521 -7871.3232 7759.519 c-7871.8086 7759.0874 -7871.8086 7759.7358 -7872.5649 7759.2495 c-7873.3198 7758.7622 -7873.645 7757.8447 -7873.0503 7757.3057 cb-7865.6519 7761.9487 m-7865.3657 7761.5913 -7864.6802 7761.5718 -7864.4648 7761.894 c-7864.25 7762.2192 -7863.3306 7762.2729 -7863.4937 7762.5962 c-7863.6543 7762.9214 -7863.6016 7763.1382 -7864.0874 7762.9214 c-7864.5737 7762.7046 -7864.4121 7763.2993 -7864.897 7763.083 c-7865.3833 7762.8662 -7865.8687 7762.2192 -7865.6519 7761.9487 cb-7857.6074 7767.0786 m-7857.1206 7766.7554 -7855.8794 7767.5112 -7856.4727 7767.5112 c-7857.0674 7767.5112 -7856.311 7768.2671 -7856.8521 7768.4834 c-7857.3906 7768.6982 -7857.2832 7768.4287 -7857.6074 7768.644 c-7857.9297 7768.8608 -7858.3633 7769.2383 -7858.5239 7768.4287 c-7858.6855 7767.6182 -7858.3633 7767.6182 -7857.9849 7767.3486 c-7857.6074 7767.0786 -7857.6074 7767.0786 yb-7872.2402 7767.3486 m-7871.1074 7767.2417 -7871.8633 7767.9976 -7871.269 7768.4834 c-7870.6738 7768.9697 -7869.918 7769.6167 -7870.729 7769.3999 c-7871.5391 7769.1846 -7872.9961 7769.6714 -7872.9434 7768.5376 c-7872.8887 7767.4033 -7872.6328 7767.3862 -7872.2402 7767.3486 cb-7866.5703 7775.6113 m-7866.1016 7775.3433 -7866.6802 7775.7192 -7866.0303 7775.6113 c-7865.3833 7775.5034 -7864.7886 7775.6113 -7865.2207 7775.8271 c-7865.6519 7776.043 -7866.3008 7776.1519 -7866.4634 7775.9888 c-7866.625 7775.8271 -7866.9473 7775.8271 -7866.5703 7775.6113 cb-7857.0674 7775.1792 m-7857.4785 7774.1792 -7856.0962 7774.4233 -7855.4473 7774.7456 c-7854.7998 7775.0718 -7853.8262 7774.4766 -7854.4209 7774.9097 c-7855.0137 7775.3418 -7854.7998 7774.9097 -7855.3926 7775.2329 c-7855.9873 7775.5562 -7856.6895 7776.0977 -7857.0674 7775.1792 cb-7872.6738 7781.0654 m-7872.7222 7780.0742 -7871.8086 7780.957 -7871.269 7781.0112 c-7870.729 7781.0654 -7870.0801 7781.0654 -7870.2432 7781.2808 c-7870.4038 7781.4976 -7870.459 7781.4976 -7871.1626 7781.7119 c-7871.8633 7781.9297 -7872.6191 7782.144 -7872.6738 7781.0654 cb-7873.1582 7775.6113 m-7874.0664 7775.9746 -7874.293 7775.8799 -7874.5625 7776.2046 c-7874.834 7776.5288 -7875.1558 7777.231 -7875.5352 7776.0977 c-7875.9121 7774.9624 -7875.4282 7773.7759 -7875.0479 7773.937 c-7874.6714 7774.0991 -7874.293 7774.7456 -7873.8618 7774.9624 c-7873.4297 7775.1792 -7872.6191 7775.394 -7873.1582 7775.6113 cbUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 41)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884 7793.999 m-7803 7793.999 L-7803 7688.999 L-7884 7688.999 L-7884 7793.999 Lnuuu0 O0 0 0 1 k-7865.8057 7706.4258 m-7866.0742 7704.6616 -7867.1602 7703.2905 -7868.5239 7703.396 c-7869.8862 7703.5015 -7870.707 7705.0234 -7870.7432 7706.8066 c-7870.748 7707.0688 -7870.6743 7708.2441 -7870.6304 7708.4766 C-7870.6382 7708.5815 -7870.6191 7708.6738 -7870.6104 7708.7798 c-7870.5142 7710.0249 -7869.3574 7711.3599 -7867.9414 7711.2495 c-7866.5249 7711.1401 -7865.4897 7709.8608 -7865.6367 7708.4722 c-7865.644 7708.4063 -7865.6958 7707.6255 -7865.707 7707.562 C-7865.6816 7707.2847 -7865.7598 7706.7246 -7865.8057 7706.4258 cf-7876.2646 7715.7329 m-7876.9946 7723.915 -7871.5015 7723.1182 v-7868.3682 7722.0186 -7869.4414 7719.1206 v-7869.6426 7717.751 -7871.7847 7716.4976 v-7872.146 7716.2495 -7872.7632 7715.1006 v-7873.1294 7713.5967 -7874.5186 7713.2974 v-7876.0762 7713.2505 -7876.2646 7715.7329 vf-7850.7646 7724.4966 mF-7850.0762 7722.3398 m-7850.7847 7721.1929 -7853.8848 7721.6274 Y-7854.811 7721.688 -7855.3799 7721.1104 Y-7857.8394 7717.0913 -7861.0386 7717.8857 -7861.4082 7717.9927 C-7861.4097 7717.9858 L-7864.999 7718.604 -7865.2666 7723.603 V-7865.4912 7724.3823 -7866.335 7724.769 V-7869.2695 7725.8608 -7869.3481 7727.207 V-7869.8999 7729.1143 -7867.6006 7729.7417 V-7865.6792 7730.2559 -7863.7886 7727.894 V-7862.6113 7726.6792 -7859.5762 7725.939 V-7859.5728 7725.9526 L-7856.3594 7725.0454 -7854.6392 7725.5889 Y-7851.8521 7726.7671 -7850.4063 7725.4009 Y-7848.6826 7723.7554 -7850.0762 7722.3398 Yf-7863.9834 7705.8784 m-7864.5854 7704.2002 -7864.2822 7702.4766 -7863.0327 7701.9224 c-7861.7842 7701.3662 -7860.3384 7702.3159 -7859.4585 7703.8662 c-7859.3286 7704.0952 -7858.8359 7705.165 -7858.7632 7705.3906 C-7858.7065 7705.478 -7858.6792 7705.5679 -7858.6362 7705.6665 c-7858.1289 7706.8081 -7858.5122 7708.5298 -7859.8105 7709.1074 c-7861.1089 7709.6846 -7862.6279 7709.0518 -7863.1582 7707.7617 c-7863.1831 7707.7002 -7863.5078 7706.9878 -7863.5298 7706.9263 C-7863.6831 7706.6958 -7863.8809 7706.1655 -7863.9834 7705.8784 cf-7849.7129 7708.9312 m-7845.1802 7715.7817 -7850.3911 7717.6934 v-7853.6714 7718.2158 -7854.103 7715.1567 v-7854.5786 7713.856 -7853.29 7711.7354 v-7853.0903 7711.3442 -7853.0938 7710.04 v-7853.4858 7708.5439 -7852.4082 7707.6177 v-7851.0591 7706.835 -7849.7129 7708.9312 vfUu-7824.7358 7758.1074 m-7824.3687 7756.3618 -7824.9048 7754.6958 -7826.2183 7754.3159 c-7827.5322 7753.937 -7828.8345 7755.0742 -7829.4937 7756.7319 c-7829.5903 7756.9766 -7829.9326 7758.1025 -7829.9746 7758.3359 C-7830.0176 7758.4321 -7830.0322 7758.5239 -7830.0625 7758.6274 c-7830.4087 7759.8262 -7829.7935 7761.48 -7828.4282 7761.8745 c-7827.063 7762.269 -7825.645 7761.436 -7825.2969 7760.085 c-7825.2793 7760.02 -7825.0552 7759.27 -7825.0425 7759.2065 C-7824.9214 7758.9546 -7824.7983 7758.4048 -7824.7358 7758.1074 cf-7838.2705 7762.6167 m-7841.8242 7770.0239 -7836.3999 7771.2056 v-7833.0801 7771.2754 -7833.0688 7768.1841 v-7832.7778 7766.8306 -7834.3433 7764.9063 v-7834.5942 7764.5454 -7834.7695 7763.2534 v-7834.5854 7761.7183 -7835.7793 7760.9487 v-7837.2222 7760.3594 -7838.2705 7762.6167 vf-7817.4648 7779.769 mF-7816.063 7777.9902 m-7816.3247 7776.6689 -7819.3799 7775.9878 Y-7820.27 7775.7192 -7820.5986 7774.979 Y-7821.4922 7770.353 -7824.7666 7769.9746 -7825.1494 7769.9448 C-7825.1494 7769.939 L-7828.7271 7769.2583 -7830.731 7773.8462 V-7831.2153 7774.4961 -7832.1416 7774.562 V-7835.272 7774.5552 -7835.8169 7775.7886 V-7837.0039 7777.3809 -7835.0713 7778.7759 V-7833.4526 7779.9312 -7830.853 7778.3818 V-7829.3242 7777.6577 -7826.2222 7778.0288 V-7826.2231 7778.0415 L-7822.896 7778.3208 -7821.4766 7779.4321 Y-7819.2793 7781.5142 -7817.4463 7780.7422 Y-7815.2554 7779.8047 -7816.063 7777.9902 Yf-7822.8374 7758.2354 m-7822.813 7756.4502 -7821.9258 7754.9448 -7820.5601 7754.8623 c-7819.1943 7754.7798 -7818.1743 7756.1758 -7817.895 7757.938 c-7817.854 7758.1968 -7817.7666 7759.3706 -7817.7778 7759.6089 C-7817.7559 7759.7104 -7817.7617 7759.8032 -7817.7559 7759.9121 c-7817.6807 7761.1582 -7818.644 7762.6362 -7820.0625 7762.7217 c-7821.4814 7762.8066 -7822.6826 7761.6826 -7822.7246 7760.2866 c-7822.7271 7760.2207 -7822.7822 7759.4399 -7822.7798 7759.3745 C-7822.8433 7759.104 -7822.8423 7758.5391 -7822.8374 7758.2354 cf-7811.0186 7765.562 m-7809.1777 7773.5679 -7814.7271 7773.5298 v-7817.9834 7772.8687 -7817.3154 7769.8511 v-7817.3032 7768.4663 -7815.353 7766.9321 v-7815.0278 7766.6367 -7814.5742 7765.4146 v-7814.417 7763.875 -7813.083 7763.3872 v-7811.5454 7763.1274 -7811.0186 7765.562 vfUU1 Ap-7884 7793.999 m-7884 7688.999 L-7803 7688.999 L-7803 7793.999 L-7884 7793.999 LnUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 42)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-7857.4609 7767.085 m-7885 7767.085 L-7885 7794.623 L-7857.4609 7794.623 L-7857.4609 7767.085 Ln0 O0 0.55 1 0.12 k-7871.7598 7785.3618 m-7871.7598 7794.999 L-7870.6343 7794.999 L-7870.6343 7785.3618 L-7871.7598 7785.3618 Lf0 0.55 1 0.3 k-7875.4233 7780.875 m-7874.3096 7779.1553 -7870.8809 7777.457 -7866.4966 7777.457 c-7862.1152 7777.457 -7858.6138 7779.106 -7857.5718 7780.8735 C-7857.5718 7780.8735 L-7858.6138 7782.6001 -7862.1152 7784.2974 -7866.4966 7784.2974 c-7870.875 7784.2974 -7874.3242 7782.561 -7875.4233 7780.875 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 45)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7885 7751.9175 m-7885 7794.999 L-7798.2217 7794.999 L-7798.2217 7751.9175 L-7885 7751.9175 Lnuu0 O0 0 0 1 k-7825.2217 7781.2358 m-7825.2217 7789.0737 L-7813.2217 7782.144 L-7801.2217 7775.2158 L-7813.2217 7768.2886 L-7825.2217 7761.3608 L-7825.2217 7769.4814 L-7883.9351 7755.7158 L-7870.9878 7774.8022 L-7885 7794.999 L-7825.2217 7781.2358 Lf0 1 1 0.1 k0 R0 0 0 1 K-7823.2217 7778.2358 m-7823.2217 7786.0737 L-7811.2217 7779.144 L-7799.2217 7772.2158 L-7811.2217 7765.2886 L-7823.2217 7758.3608 L-7823.2217 7766.4814 L-7881.9351 7752.7158 L-7867.2754 7772.3594 L-7881.9351 7791.999 L-7823.2217 7778.2358 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 5)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7726.3994 7794.999 m-7726.3994 7781.4194 L-7885 7781.4194 L-7885 7794.999 L-7726.3994 7794.999 Lnuu0 O0.285 0.228 0.171 0 k-7741.0786 7793.4839 m-7741.043 7794.689 L-7727.5103 7795.5166 -7726.8418 7794.2817 v-7726.7441 7794.1006 -7726.647 7793.7144 -7726.561 7793.1929 C-7728.584 7793.8242 -7738.291 7793.5713 -7741.0786 7793.4839 Cf0.44 0.352 0.264 0 k-7741.4063 7782.0234 m-7741.3711 7783.2671 L-7738.4912 7783.0479 -7728.1914 7782.3159 -7726.543 7782.8647 C-7726.7031 7782.2183 -7726.9199 7781.7642 -7727.2046 7781.6143 c-7728.8306 7780.7646 -7741.4063 7782.0234 Yf0.145 0.116 0.087 0 k-7741.3711 7783.2671 m-7741.0786 7793.4839 L-7738.291 7793.5713 -7728.584 7793.8242 -7726.561 7793.1929 C-7726.1519 7790.7769 -7725.9258 7785.3599 -7726.543 7782.8647 C-7728.1914 7782.3159 -7738.4912 7783.0479 -7741.3711 7783.2671 CfUu0.155 0.124 0.093 0 k-7766.9375 7787.2729 m-7765.897 7787.6558 L-7747.0728 7783.146 L-7747.481 7782.314 L-7766.3633 7784.7241 L-7767.252 7785.0054 L-7767.6504 7784.8926 -7768.1934 7784.8242 V-7767.6094 7785.2368 -7767.1426 7786.1401 -7766.9375 7787.2729 Cfu0.085 0.068 0.051 0 k-7771.7993 7791.6655 m-7772.5977 7791.7217 -7769.749 7791.6641 Y-7770.3481 7791.0166 -7770.771 7789.8198 -7770.8105 7788.437 c-7770.8169 7788.2241 -7770.8105 7788.0166 -7770.7993 7787.813 C-7771.041 7787.7065 -7771.0918 7787.7729 -7771.6289 7787.564 C-7771 7791.6113 -7771.7993 7791.6655 vf0.305 0.244 0.183 0 k-7770.3442 7784.8662 m-7770.5527 7784.8105 -7770.4937 7786.9302 Y-7769.4785 7787.7583 L-7767.8359 7786.9434 L-7766.9375 7787.2729 L-7767.1426 7786.1401 -7767.6094 7785.2368 -7768.1934 7784.8242 C-7768.6094 7784.771 -7769.874 7784.7993 -7770.3442 7784.8662 CfU0.115 0.092 0.069 0 k-7766.9375 7787.2729 m-7767.8359 7786.9434 L-7769.4785 7787.7583 L-7770.4937 7786.9302 L-7770.793 7787.707 -7770.7993 7787.813 V-7769.5137 7788.3784 -7768.1831 7788.7402 -7766.8398 7788.9258 C-7766.79 7788.7271 -7766.7842 7788.5425 -7766.79 7788.3359 c-7766.7998 7787.9712 -7766.8218 7787.6177 -7766.9375 7787.2729 Cf0.41 0.328 0.246 0 k-7747.4512 7783.396 m-7749.377 7784.6426 -7758.3862 7790.0986 -7766.8398 7788.9258 C-7766.9038 7790.0918 -7767.248 7791.0903 -7767.75 7791.6626 C-7767.1895 7791.6616 L-7746.7402 7794.7554 L-7747.0366 7784.4258 L-7747.0728 7783.146 L-7747.2046 7783.2368 -7747.4512 7783.396 vf0.395 0.316 0.237 0 k-7770.8105 7788.437 m-7770.771 7789.8198 -7770.3481 7791.0166 -7769.749 7791.6641 C-7767.6807 7791.6626 L-7767.1782 7791.0903 -7766.8218 7790.0703 -7766.8398 7788.9258 C-7768.1831 7788.7402 -7769.5137 7788.3784 -7770.7993 7787.813 C-7770.8105 7788.0166 -7770.8169 7788.2241 -7770.8105 7788.437 cfUu0 0 0 0.11 k-7741.2642 7782.2007 m-7740.2407 7782.0342 L-7741.2642 7782.2007 L-7741.2642 7782.2007 Lf0 0 0 0.34 k-7747.481 7782.314 m-7747.0728 7783.146 L-7745.6714 7782.9175 L-7744.5234 7782.731 L-7742.6758 7782.4302 L-7741.2642 7782.2007 L-7740.2407 7782.0342 L-7740.2954 7781.7158 -7740.3672 7781.4976 -7740.4648 7781.4194 C-7747.481 7782.314 Lf0 0 0 0.32 k-7745.8042 7787.2065 m-7746.041 7794.8608 L-7740.7144 7794.999 L-7739.7266 7791.5142 -7740.1816 7787.1538 V-7745.8042 7787.2065 LfU0.025 0.02 0.015 0 k-7739.3223 7784.3838 m-7736.373 7784.9194 -7733.2402 7785.1602 -7730.3159 7784.3608 c-7730.2856 7784.3486 -7730.2754 7784.3174 -7730.2871 7784.2959 c-7730.2881 7784.2646 -7730.3198 7784.2554 -7730.3418 7784.2554 c-7733.2422 7785.064 -7736.375 7784.8242 -7739.3042 7784.2778 c-7739.3262 7784.2783 -7739.3574 7784.2905 -7739.3672 7784.3218 c-7739.3662 7784.3433 -7739.355 7784.3745 -7739.3223 7784.3838 c-7739.3223 7784.3838 lf-7737.8374 7783.3071 m-7737.7295 7783.3784 -7737.6313 7783.4937 -7737.5234 7783.5015 c-7733.7886 7783.8311 -7730.1631 7783.7808 -7726.4746 7783.6641 c-7726.4526 7783.6641 -7726.4209 7783.6426 -7726.4214 7783.6206 c-7726.4214 7783.5874 -7726.4551 7783.5679 -7726.4766 7783.5679 c-7729.3223 7783.6816 -7732.1401 7783.6982 -7735.0039 7783.5342 c-7735.9336 7783.4761 -7736.9082 7783.7402 -7737.7778 7783.2202 c-7737.7993 7783.2104 -7737.8306 7783.2104 -7737.8506 7783.2329 c-7737.8618 7783.2554 -7737.8594 7783.2866 -7737.8374 7783.3071 c-7737.8374 7783.3071 lf-7733.373 7785.3662 m-7731.5098 7786.6792 -7729.3022 7787.3735 -7727.1001 7787.8862 c-7727.0679 7787.896 -7727.0474 7787.8838 -7727.0366 7787.853 c-7727.0273 7787.8198 -7727.0488 7787.7998 -7727.0703 7787.7896 c-7729.2617 7787.2646 -7731.459 7786.603 -7733.3105 7785.2798 c-7733.3433 7785.2593 -7733.375 7785.271 -7733.3848 7785.293 c-7733.4058 7785.314 -7733.3945 7785.3457 -7733.373 7785.3662 c-7733.373 7785.3662 lf-7738.9321 7792.0562 m-7736.7295 7792.5698 -7734.5298 7793.0298 -7732.2798 7793.2754 c-7732.2598 7793.2847 -7732.229 7793.2632 -7732.229 7793.2417 c-7732.2183 7793.209 -7732.2407 7793.1777 -7732.2729 7793.1782 c-7734.5122 7792.8799 -7736.7305 7792.5166 -7738.9126 7791.9497 c-7738.9351 7791.9502 -7738.9673 7791.9624 -7738.9766 7791.9937 c-7738.9751 7792.0151 -7738.9648 7792.0474 -7738.9321 7792.0562 c-7738.9321 7792.0562 lf-7738.439 7791.3599 m-7736.3457 7792.1968 -7734.1016 7791.9297 -7731.9023 7791.9624 c-7731.8706 7791.96 -7731.8496 7791.939 -7731.8506 7791.9082 c-7731.8521 7791.8745 -7731.873 7791.855 -7731.8945 7791.855 c-7734.0928 7791.8433 -7736.3374 7792.0991 -7738.4209 7791.2529 c-7738.4434 7791.2534 -7738.4746 7791.2646 -7738.4834 7791.2959 c-7738.4834 7791.3174 -7738.4722 7791.3506 -7738.439 7791.3599 c-7738.439 7791.3599 lf-7737.707 7792.7046 m-7736.3833 7792.751 -7735.1504 7792.5464 -7733.8271 7792.209 c-7733.3594 7792.0991 -7732.9199 7792.2266 -7732.4609 7792.2129 c-7731.897 7792.1968 l-7731.874 7792.1958 -7731.8633 7792.1846 -7731.8535 7792.1738 c-7731.834 7792.1519 -7731.8442 7792.1206 -7731.8662 7792.0991 c-7732.0625 7791.9448 l-7732.0742 7791.9448 -7732.085 7791.9351 -7732.0962 7791.9351 c-7732.5 7791.9473 l-7733.9551 7792.1914 -7735.457 7792.6714 -7736.8926 7792.0737 c-7736.9258 7792.064 -7736.957 7792.0854 -7736.9673 7792.1074 c-7736.9673 7792.1392 -7736.9551 7792.1602 -7736.9336 7792.1704 c-7735.647 7792.6982 -7734.1714 7792.4751 -7732.8818 7792.0542 c-7732.0918 7792.0425 L-7732.124 7792.0327 L-7731.9282 7792.187 L-7731.8984 7792.0898 L-7732.4639 7792.106 l-7732.9321 7792.1401 -7733.3848 7791.9834 -7733.8398 7792.103 c-7735.1543 7792.4609 -7736.3975 7792.625 -7737.71 7792.5986 c-7737.7422 7792.5991 -7737.7642 7792.6206 -7737.7617 7792.6528 c-7737.7617 7792.6846 -7737.7402 7792.7056 -7737.707 7792.7046 c-7737.707 7792.7046 lf-7738.5718 7793.0601 m-7735.8711 7794.2202 -7732.9023 7793.5698 -7730.1279 7793.1807 c-7729.7832 7793.2886 l-7729.7617 7793.2983 -7729.7417 7793.2866 -7729.7207 7793.2646 c-7729.71 7793.2441 -7729.7217 7793.2129 -7729.7422 7793.2017 c-7730.0801 7793.0098 l-7732.7754 7792.3921 -7735.5391 7792.7808 -7738.271 7792.7847 c-7738.3022 7792.7866 -7738.3232 7792.8081 -7738.3223 7792.8394 c-7738.3198 7792.8721 -7738.2983 7792.8921 -7738.2681 7792.8921 c-7735.6738 7792.9351 -7733.0303 7792.4434 -7730.4727 7793.0737 c-7729.7954 7793.2886 L-7729.7534 7793.1914 L-7730.1406 7793.0854 l-7732.9058 7793.4414 -7735.8418 7794.1343 -7738.5313 7792.9746 c-7738.5537 7792.9648 -7738.585 7792.9648 -7738.5962 7792.9976 c-7738.6055 7793.019 -7738.605 7793.0503 -7738.5718 7793.0601 c-7738.5718 7793.0601 lf-7735.6895 7786.394 m-7734.3945 7786.8999 -7732.9834 7786.646 -7731.6802 7786.3433 c-7731.647 7786.3418 -7731.6367 7786.3198 -7731.6382 7786.2886 c-7731.6504 7786.2559 -7731.6714 7786.2456 -7731.7031 7786.248 c-7732.998 7786.5298 -7734.377 7786.8154 -7735.6504 7786.2959 c-7735.6826 7786.2866 -7735.7144 7786.2983 -7735.7246 7786.3306 c-7735.7222 7786.3521 -7735.7114 7786.3838 -7735.6895 7786.394 c-7735.6895 7786.394 lf-7736.1401 7788.2202 m-7734.2266 7788.689 -7732.3145 7789.103 -7730.355 7789.3242 c-7730.3242 7789.3335 -7730.3022 7789.312 -7730.293 7789.2798 c-7730.2954 7789.2593 -7730.3159 7789.228 -7730.3374 7789.228 c-7732.2959 7789.0073 -7734.209 7788.5815 -7736.1206 7788.1128 c-7736.1426 7788.1143 -7736.1738 7788.1255 -7736.1831 7788.1577 c-7736.1831 7788.1792 -7736.1719 7788.2104 -7736.1401 7788.2202 c-7736.1401 7788.2202 lf-7736.9336 7790.6343 m-7734.499 7791.4609 -7731.8647 7791.0542 -7729.3457 7791.0874 c-7729.313 7791.0874 -7729.293 7791.0654 -7729.293 7791.0327 c-7729.2954 7791.0112 -7729.3159 7790.9922 -7729.3481 7790.9922 c-7731.8574 7790.915 -7734.481 7791.3838 -7736.8945 7790.5254 c-7736.9282 7790.5273 -7736.959 7790.5386 -7736.9688 7790.5601 c-7736.9678 7790.5913 -7736.9561 7790.623 -7736.9336 7790.6343 c-7736.9336 7790.6343 lf-7732.0542 7791.8486 m-7730.6582 7792.5439 -7729.0503 7792.4033 -7727.5342 7792.4663 c-7727.502 7792.4639 -7727.4824 7792.4434 -7727.4824 7792.4111 c-7727.4834 7792.3906 -7727.5054 7792.3594 -7727.5366 7792.3594 c-7729.0137 7792.2202 -7730.6489 7792.5234 -7732.0039 7791.7617 c-7732.0366 7791.752 -7732.0679 7791.7632 -7732.0786 7791.7856 c-7732.0879 7791.8071 -7732.0767 7791.8394 -7732.0542 7791.8486 c-7732.0542 7791.8486 lf-7731.3418 7788.4238 m-7730.3926 7788.397 -7729.4336 7788.3696 -7728.4839 7788.3423 c-7728.4526 7788.3418 -7728.4312 7788.3198 -7728.4336 7788.2881 c-7728.4336 7788.2554 -7728.4551 7788.2354 -7728.4878 7788.2358 c-7729.437 7788.2632 -7730.397 7788.2905 -7731.3457 7788.3174 c-7731.377 7788.3174 -7731.3975 7788.3418 -7731.3975 7788.3726 c-7731.397 7788.4038 -7731.374 7788.4258 -7731.3418 7788.4238 c-7731.3418 7788.4238 lf-7729.1592 7786.0352 m-7728.6895 7786.064 -7728.209 7786.0718 -7727.7383 7786.0913 c-7727.7168 7786.0903 -7727.6855 7786.0679 -7727.6865 7786.0366 c-7727.687 7786.0034 -7727.71 7785.9839 -7727.7417 7785.9839 c-7728.2114 7785.9873 -7728.6816 7785.937 -7729.1514 7785.939 c-7729.1831 7785.9297 -7729.2031 7785.9502 -7729.2134 7785.9839 c-7729.2129 7786.0151 -7729.1914 7786.0366 -7729.1592 7786.0352 c-7729.1592 7786.0352 lf-7736.9702 7788.2334 m-7736.5688 7788.5103 -7736.125 7788.6792 -7735.645 7788.7505 c-7735.6113 7788.7598 -7735.5918 7788.7378 -7735.5806 7788.7158 c-7735.5703 7788.6846 -7735.5928 7788.6538 -7735.6152 7788.6538 c-7736.0854 7788.5718 -7736.5176 7788.4014 -7736.9209 7788.147 c-7736.9521 7788.1377 -7736.9849 7788.1382 -7736.9946 7788.1704 c-7737.0039 7788.1929 -7736.9922 7788.2241 -7736.9702 7788.2334 c-7736.9702 7788.2334 lf-7738.1904 7794.085 m-7735.7344 7794.5273 -7733.2983 7795.001 -7730.7993 7794.7266 c-7730.7778 7794.7266 -7730.7568 7794.7041 -7730.7578 7794.6714 c-7730.7578 7794.6401 -7730.7798 7794.6182 -7730.8022 7794.6182 c-7733.291 7794.8726 -7735.7344 7794.4839 -7738.1719 7793.9766 c-7738.1934 7793.978 -7738.2256 7793.9897 -7738.2344 7794.021 c-7738.2344 7794.0425 -7738.2222 7794.0742 -7738.1904 7794.085 c-7738.1904 7794.085 lf0.195 0.156 0.117 0 k-7738.166 7782.644 m-7735.7969 7782.2671 -7733.4058 7782.3472 -7731.0298 7782.5898 c-7730.998 7782.5874 -7730.9766 7782.5654 -7730.9766 7782.5342 c-7730.9785 7782.5137 -7731 7782.4814 -7731.0215 7782.4814 c-7733.4082 7782.2417 -7735.791 7782.1602 -7738.1694 7782.5386 c-7738.2026 7782.5386 -7738.2222 7782.5601 -7738.2217 7782.5938 c-7738.2207 7782.625 -7738.1992 7782.646 -7738.166 7782.644 c-7738.166 7782.644 lf0.335 0.268 0.201 0 k-7737.4351 7782.1104 m-7734.9282 7782.1143 -7732.4146 7782.2769 -7729.918 7781.896 c-7729.8862 7781.894 -7729.8647 7781.8726 -7729.8662 7781.8418 c-7729.8672 7781.8081 -7729.8896 7781.7886 -7729.9209 7781.7886 c-7732.418 7782.1694 -7734.9297 7782.0288 -7737.4375 7782.0054 c-7737.46 7782.0054 -7737.481 7782.0273 -7737.4785 7782.0591 c-7737.4785 7782.0913 -7737.457 7782.1118 -7737.4351 7782.1104 c-7737.4351 7782.1104 lf0.205 0.164 0.123 0 k-7738.9766 7782.3257 m-7737.5039 7782.667 -7736.0078 7782.4014 -7734.5391 7782.2202 c-7734.5078 7782.2202 -7734.4873 7782.1968 -7734.499 7782.1655 c-7734.5 7782.1343 -7734.5215 7782.1128 -7734.5537 7782.125 c-7736.0103 7782.2842 -7737.4961 7782.5825 -7738.9473 7782.2183 c-7738.9785 7782.2202 -7739.0103 7782.2319 -7739.0098 7782.2632 c-7739.019 7782.2847 -7738.998 7782.3159 -7738.9766 7782.3257 c-7738.9766 7782.3257 lf-7732.3535 7781.7944 m-7731.1978 7781.9214 -7730.0273 7781.814 -7728.8926 7781.5898 c-7728.8711 7781.5776 -7728.8506 7781.5562 -7728.8618 7781.5239 c-7728.8623 7781.5024 -7728.8945 7781.4814 -7728.916 7781.4937 c-7730.0503 7781.7402 -7731.1914 7781.7935 -7732.3462 7781.688 c-7732.3794 7781.689 -7732.3984 7781.7104 -7732.4087 7781.7319 c-7732.4082 7781.7642 -7732.3862 7781.7847 -7732.3535 7781.7944 c-7732.3535 7781.7944 lf0.335 0.268 0.201 0 k-7739.2681 7784.4463 m-7737.9214 7785.188 -7736.3066 7784.5967 -7734.855 7784.6406 c-7734.8223 7784.6401 -7734.8022 7784.6182 -7734.8022 7784.5854 c-7734.8042 7784.5649 -7734.8262 7784.5439 -7734.8574 7784.5439 c-7736.2886 7784.4897 -7737.8823 7785.0801 -7739.2168 7784.3506 c-7739.2383 7784.3394 -7739.2695 7784.3511 -7739.291 7784.3735 c-7739.3008 7784.395 -7739.2886 7784.4272 -7739.2681 7784.4463 c-7739.2681 7784.4463 lf-7737.8945 7786.564 m-7735.6719 7787.0449 -7733.3896 7786.6162 -7731.1504 7786.562 c-7731.1177 7786.561 -7731.0977 7786.5386 -7731.0977 7786.5073 c-7731.1001 7786.4858 -7731.1318 7786.4663 -7731.1519 7786.4663 c-7733.3833 7786.4766 -7735.6519 7786.98 -7737.875 7786.457 c-7737.8975 7786.457 -7737.9287 7786.4678 -7737.9375 7786.5015 c-7737.9375 7786.522 -7737.9258 7786.5542 -7737.8945 7786.564 c-7737.8945 7786.564 lf-7732.0273 7783.1401 m-7730.3496 7783.9678 -7728.499 7784.5015 -7726.603 7784.3608 c-7726.5718 7784.3608 -7726.5513 7784.3384 -7726.5527 7784.3066 c-7726.5527 7784.2754 -7726.5742 7784.2534 -7726.6074 7784.2554 c-7728.481 7784.415 -7730.3198 7783.8599 -7731.9873 7783.0542 c-7732.0078 7783.0449 -7732.041 7783.0449 -7732.0503 7783.0776 c-7732.061 7783.0991 -7732.061 7783.1304 -7732.0273 7783.1401 c-7732.0273 7783.1401 lfu0.5 0.85 1 0.45 k-7885 7789.9082 m-7885.0254 7790.4878 -7884.5664 7791.187 -7883.167 7791.9897 C-7882.8521 7792.0024 -7881.3945 7792.0234 -7879.0889 7792.0479 C-7879.0889 7789.8218 L-7881.1382 7789.8447 -7883.1177 7789.8862 -7885 7789.9082 Cf-7884.5088 7788.9678 m-7879.0889 7788.8442 L-7879.0889 7787.814 L-7882.644 7787.9585 L-7883.8145 7788.3296 -7884.5088 7788.9678 Vf0.5 0.85 1 0.32 k-7879.0889 7788.8247 m-7884.4746 7788.9434 L-7884.7695 7789.2144 -7884.9849 7789.5562 -7885 7789.9272 C-7883.1177 7789.9058 -7881.1382 7789.8838 -7879.0889 7789.8608 C-7879.0889 7788.8247 Lf0.5 0.85 1 0.45 k-7774.1504 7788.6167 m-7852.3584 7789.541 -7879.1079 7789.8418 V-7879.1079 7792.0479 L-7862.8145 7792.2319 -7803.9902 7792.7065 Y-7769.749 7791.6641 L-7770.457 7788.5679 L-7774.1504 7788.6167 Lf0.5 0.85 1 0.12 k-7879.1079 7787.814 m-7879.1079 7788.8442 L-7770.4258 7786.999 L-7770.3833 7784.8623 L-7803.6553 7784.7119 L-7879.1079 7787.814 Lfu0.065 0.052 0.039 0 k-7747.0728 7783.146 m-7747.0366 7784.4258 L-7747.2954 7783.1167 L-7765.897 7787.6558 L-7766.9375 7787.2729 L-7766.8794 7787.605 -7766.8398 7787.957 -7766.8306 7788.3218 c-7766.8242 7788.5278 -7766.8281 7788.728 -7766.8398 7788.9258 C-7758.3862 7790.0986 -7748.9634 7785.6714 -7747.0366 7784.4258 C-7746.7402 7794.7554 L-7746.041 7794.8608 L-7745.8042 7787.2065 L-7740.1816 7787.1538 L-7740.0898 7785.0127 -7740.0718 7783.021 -7740.2407 7782.0342 C-7747.0728 7783.146 Lf0.4 0.7 1 0 k-7770.457 7788.5874 m-7770.4258 7786.98 L-7879.1079 7788.8247 L-7879.1079 7789.8608 L-7852.3584 7789.5601 -7770.457 7788.5874 YfUU0.025 0.02 0.015 0 k-7734.7344 7791.0288 m-7734.7344 7791.062 -7734.7129 7791.0815 -7734.6802 7791.0815 c-7731.6714 7791.1128 -7729.4214 7790.9448 -7726.415 7790.8594 C-7726.4087 7790.7646 L-7729.3262 7790.8696 -7731.7607 7791.0073 -7734.6841 7790.9746 C-7734.7168 7790.9761 -7734.7358 7790.9976 -7734.7344 7791.0288 Cf-7726.3994 7790.7646 m-7726.4082 7790.7441 L-7726.4087 7790.7646 L-7726.4063 7790.7646 -7726.4033 7790.7646 -7726.3994 7790.7646 Cf-7730.4487 7789.4233 m-7731.4458 7789.291 -7732.3394 7789.7646 -7733.2114 7790.1968 C-7733.2441 7790.207 -7733.2534 7790.2402 -7733.2422 7790.271 C-7733.2305 7790.293 -7733.1982 7790.3022 -7733.1777 7790.2905 c-7732.3262 7789.8296 -7731.4312 7789.4194 -7730.4678 7789.519 c-7729.1079 7789.6616 -7727.9038 7790.3745 -7726.5254 7790.4526 C-7726.4463 7790.3594 L-7728.04 7790.2646 -7728.8647 7789.6226 -7730.4487 7789.4233 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 50)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884 7793.999 m-7756.877 7793.999 L-7756.877 7746.4146 L-7884 7746.4146 L-7884 7793.999 Lnu*u0 O0.9529 0.949 0.1961 0.0745 k-7857.793 7778.417 m-7857.8232 7778.2671 L-7859.9849 7772.3638 -7860.9438 7769.6367 -7861.2754 7768.2886 c-7861.3657 7768.2886 L-7861.6953 7769.6074 -7862.7754 7772.3345 -7864.9673 7778.2671 c-7864.9966 7778.417 L-7857.793 7778.417 lf1 D-7868.1182 7786.9673 m-7869.6191 7790.5366 -7870.3994 7792.709 -7868.1182 7792.917 c-7868.1182 7793.9673 L-7870.6992 7793.937 -7873.5806 7793.917 -7876.3418 7793.917 c-7880.0649 7793.917 -7882.5273 7793.937 -7884 7793.9673 c-7884 7792.917 L-7882.1064 7792.709 -7881.0542 7790.5674 -7873.5513 7773.5024 c-7861.6953 7746.4146 L-7859.8638 7746.4146 L-7848.1582 7773.5024 L-7840.8047 7790.5073 -7839.7246 7792.709 -7837.8887 7792.917 c-7837.8887 7793.9673 L-7839.5142 7793.937 -7841.916 7793.917 -7845.5767 7793.917 c-7848.5488 7793.917 -7851.6694 7793.937 -7854.7026 7793.9673 c-7854.7026 7792.917 L-7852.481 7792.709 -7853.3218 7790.5073 -7854.7617 7786.9673 C-7868.1182 7786.9673 lf*U*u0 D-7813.0762 7762.0806 m-7813.0762 7758.4712 -7815.3535 7756.0942 -7819.1294 7756.0942 c-7820.2383 7756.0942 -7821.0767 7756.2153 -7821.5273 7756.2446 c-7821.5273 7768.5474 L-7820.8672 7768.6079 -7820.208 7768.6079 -7819.729 7768.6079 c-7818.2002 7768.6079 -7816.7026 7768.1265 -7815.6841 7767.4048 c-7814.3945 7766.5327 -7813.0762 7764.7871 -7813.0762 7762.1406 C-7813.0762 7762.0806 lf1 D-7832.0806 7766.3921 m-7832.0806 7750.644 -7832.0806 7748.4282 -7834.542 7748.2778 c-7834.542 7747.3174 L-7833.042 7747.2583 -7830.3174 7747.1982 -7827.5664 7747.1689 c-7825.6538 7747.1079 -7822.3945 7747.0186 -7820.1479 7746.9766 c-7816.582 7746.9766 -7813.585 7747.4258 -7811.0049 7748.2622 c-7806.353 7749.8472 -7801.9702 7753.8521 -7801.9702 7761.6602 c-7801.9702 7766.7422 -7804.4014 7770.3184 -7806.5034 7772.0601 c-7807.583 7773.021 -7808.8135 7773.8311 -7809.7744 7774.312 c-7809.7744 7774.4624 L-7807.5234 7777.4902 -7805.6025 7780.062 -7799.3906 7788.6426 c-7797.5 7791.064 -7795.9102 7792.7378 -7794.7402 7792.9766 c-7794.7402 7793.999 L-7796.6602 7793.999 -7799 7793.8838 -7801.1294 7793.8838 c-7803.3511 7793.8838 -7804.8521 7793.999 -7806.4424 7793.999 c-7807.6729 7793.999 -7808.7241 7793.9399 -7809.5039 7793.272 c-7813.0151 7787.8472 -7816.9121 7781.7554 -7820.1182 7776.7134 c-7820.5078 7776.7134 -7820.957 7776.7134 -7821.5273 7776.7134 c-7821.5273 7779.2847 L-7821.5273 7790.5254 -7821.437 7792.7681 -7819.1895 7792.9766 c-7819.1895 7793.9697 L-7820.6279 7793.9399 -7823.9194 7793.9146 -7826.6992 7793.9146 c-7829.9287 7793.9146 -7832.8921 7793.9399 -7834.5122 7793.9697 c-7834.5122 7792.9766 L-7832.0518 7792.7681 -7832.0806 7790.5254 -7832.0806 7773.5913 C-7832.0806 7766.3921 lf*U*u0 D-7781.4561 7773.5918 m-7781.4561 7790.4937 -7781.4561 7792.6479 -7784.2832 7792.9766 C-7784.2832 7793.9697 l-7782.3887 7793.9399 -7779.0542 7793.9146 -7775.7822 7793.9146 c-7772.6294 7793.9146 -7769.5688 7793.9399 -7767.2881 7793.9697 C-7767.2881 7792.9766 l-7770.2578 7792.9766 -7770.2881 7790.5239 -7770.2881 7773.5918 C-7770.2881 7756.1514 L-7762.8193 7756.1514 l-7759.999 7756.1514 -7758.5298 7756.959 -7757.8994 7759.2622 C-7756.9072 7759.2622 l-7756.9072 7754.4688 -7756.877 7750.4146 -7756.877 7747.1704 c-7761.3486 7747.2007 -7766.748 7747.231 -7772.0601 7747.231 C-7779.7446 7747.231 l-7784.5537 7747.231 -7789.9966 7747.2007 -7794.9614 7747.1704 c-7794.9614 7750.3838 -7794.9326 7754.4688 -7794.9326 7759.2622 C-7793.9072 7759.2622 l-7793.3657 7757.1089 -7791.771 7756.1514 -7788.9438 7756.1514 C-7781.4561 7756.1514 l-7781.4561 7773.5918 Lf*UUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 6)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7884.75 7770.999 m-7884.75 7794.999 L-7874.75 7794.999 L-7874.75 7770.999 L-7884.75 7770.999 Ln0 Ap0 O1 g-7874.75 7772.999 m-7875.0703 7772.999 -7875.3857 7773.0186 -7875.6982 7773.0474 c-7877.5879 7773.2246 -7879.3198 7773.9346 -7880.7559 7775.0166 c-7882.2529 7776.146 -7883.4199 7777.6816 -7884.0942 7779.4634 c-7884.5122 7780.564 -7884.75 7781.752 -7884.75 7782.999 c-7884.75 7784.8618 -7884.2319 7786.5991 -7883.3457 7788.0913 c-7881.6025 7791.0273 -7878.4102 7792.999 -7874.75 7792.999 C-7874.75 7772.999 Lf0 R0 G1 J 1 j 0.5 w-7874.75 7792.6816 m-7877.7793 7791.7246 -7880.6074 7790.0674 -7883.3457 7788.0913 CS-7874.75 7787.0479 m-7877.8999 7784.6431 -7880.957 7781.9126 -7884.0942 7779.4634 CS-7880.7559 7775.0166 m-7878.6904 7776.1079 -7876.7017 7777.4663 -7874.75 7778.957 CS-7875.6982 7773.0474 m-7875.3809 7773.1304 -7875.063 7773.2144 -7874.75 7773.314 CS-7880.7559 7775.0166 m-7879.3193 7773.9351 -7877.5879 7773.2246 -7875.6982 7773.0474 CS-7884.0942 7779.4634 m-7884.5122 7780.564 -7884.75 7781.752 -7884.75 7782.999 c-7884.75 7784.8618 -7884.231 7786.5991 -7883.3457 7788.0913 CS-7874.75 7772.999 m-7875.0703 7772.999 -7875.3857 7773.0186 -7875.6982 7773.0474 CS-7880.7559 7775.0166 m-7882.2529 7776.146 -7883.4199 7777.6816 -7884.0942 7779.4634 CS-7883.3457 7788.0913 m-7881.6025 7791.0273 -7878.4102 7792.999 -7874.75 7792.999 CSU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 62)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7885 7794.999 m-7885 7756.73 L-7846.7305 7756.73 L-7846.7305 7794.999 L-7885 7794.999 Ln0 O1 0.14 0.09 0 k-7846.7305 7777.9038 m-7846.7305 7769.3398 L-7885 7769.3398 L-7885 7777.9038 L-7846.7305 7777.9038 Lf-7846.7305 7781.0962 m-7846.7305 7780.4224 L-7885 7780.4224 L-7885 7781.0962 L-7846.7305 7781.0962 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 63)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7885 7794.999 m-7885 7756.73 L-7846.7305 7756.73 L-7846.7305 7794.999 L-7885 7794.999 Ln0 O1 0.14 0.09 0 k-7846.7305 7773.8257 m-7846.7305 7782.3887 L-7859.3408 7782.3887 L-7859.3408 7794.999 L-7867.9038 7794.999 L-7867.9063 7773.8257 L-7867.9038 7773.8257 L-7867.9038 7773.8247 L-7846.7305 7773.8257 Lf-7846.7305 7771.3071 m-7870.4233 7771.3071 L-7870.4233 7794.999 L-7871.0967 7794.999 L-7871.0977 7770.6318 L-7846.7305 7770.6318 L-7846.7305 7771.3071 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 64)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7885 7794.9985 m-7885 7756.728 L-7846.7305 7756.728 L-7846.7305 7794.9985 L-7885 7794.9985 Ln0 O1 0.14 0.09 0 k-7846.7305 7769.3384 m-7872.3896 7769.3384 L-7872.3896 7794.9985 L-7863.8262 7794.999 L-7863.8262 7777.9023 L-7846.7305 7777.9023 L-7846.7305 7769.3384 Lf-7846.7305 7780.4214 m-7861.3081 7780.4214 L-7861.3081 7794.999 L-7860.6338 7794.999 L-7860.6338 7781.0952 L-7846.7305 7781.0952 L-7846.7305 7780.4214 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 65)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7857.0625 7767.4609 m-7884.6025 7767.4609 L-7884.6025 7794.999 L-7857.0625 7794.999 L-7857.0625 7767.4609 Ln0 O0 0.55 1 0.12 k-7856.8418 7780.7002 m-7885 7780.7002 L-7885 7781.8247 L-7856.8418 7781.8247 L-7856.8418 7780.7002 Lfu0 0.55 1 0.3 k-7883.9814 7768.521 m-7884.4102 7770.5249 -7883.1865 7774.1514 -7880.0874 7777.2505 c-7876.9878 7780.3486 -7873.3457 7781.6602 -7871.3594 7781.145 C-7871.3594 7781.145 L-7870.875 7779.189 -7872.1519 7775.5112 -7875.25 7772.4136 c-7878.3457 7769.3174 -7882.0122 7768.106 -7883.9814 7768.521 Cf0 0.39 0.7 0.12 k-7883.9814 7793.9902 m-7884.4102 7791.9878 -7883.1865 7788.3608 -7880.0874 7785.2607 c-7876.9878 7782.1631 -7873.3457 7780.853 -7871.3594 7781.3662 C-7871.3594 7781.3662 L-7870.875 7783.3242 -7872.1519 7787.001 -7875.25 7790.0991 c-7878.3457 7793.1953 -7882.0122 7794.4058 -7883.9814 7793.9902 CfUu0 0.55 1 0.3 k-7870.1782 7793.9902 m-7870.6074 7791.9878 -7869.3838 7788.3608 -7866.2842 7785.2607 c-7863.1855 7782.1631 -7859.543 7780.853 -7857.5576 7781.3662 C-7857.5566 7781.3662 L-7857.0718 7783.3242 -7858.3496 7787.001 -7861.4473 7790.0991 c-7864.543 7793.1953 -7868.209 7794.4058 -7870.1782 7793.9902 Cf0 0.39 0.7 0.12 k-7870.1782 7768.521 m-7870.6074 7770.5249 -7869.3838 7774.1514 -7866.2842 7777.2505 c-7863.1855 7780.3486 -7859.543 7781.6602 -7857.5576 7781.145 C-7857.5566 7781.145 L-7857.0718 7779.189 -7858.3496 7775.5112 -7861.4473 7772.4136 c-7864.543 7769.3174 -7868.209 7768.106 -7870.1782 7768.521 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 67)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-7857.4609 7767.085 m-7885 7767.085 L-7885 7794.623 L-7857.4609 7794.623 L-7857.4609 7767.085 Ln0 O0 0.55 1 0.12 k-7871.7598 7785.3618 m-7871.7598 7794.999 L-7870.6343 7794.999 L-7870.6343 7785.3618 L-7871.7598 7785.3618 Lf0 0.55 1 0.3 k-7875.4233 7780.875 m-7874.3096 7779.1553 -7870.8809 7777.457 -7866.4966 7777.457 c-7862.1152 7777.457 -7858.6138 7779.106 -7857.5718 7780.8735 C-7857.5718 7780.8735 L-7858.6138 7782.6001 -7862.1152 7784.2974 -7866.4966 7784.2974 c-7870.875 7784.2974 -7874.3242 7782.561 -7875.4233 7780.875 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 69)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7857.4609 7767.4609 m-7885 7767.4609 L-7885 7794.999 L-7857.4609 7794.999 L-7857.4609 7767.4609 Ln0 O0 0.55 1 0.3 k-7875.4233 7781.251 m-7874.3096 7779.5313 -7870.8809 7777.833 -7866.4966 7777.833 c-7862.1152 7777.833 -7858.6138 7779.4814 -7857.5718 7781.2495 C-7857.5718 7781.2495 L-7858.6138 7782.9761 -7862.1152 7784.6738 -7866.4966 7784.6738 c-7870.875 7784.6738 -7874.3242 7782.937 -7875.4233 7781.251 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 8)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7883.9521 7792.312 m-7776.7954 7792.312 L-7776.7954 7778.1846 L-7883.9521 7778.1846 L-7883.9521 7792.312 Lnu0 O0 0 0 1 k-7882.2832 7791.6226 m-7882.8535 7793.999 -7882.8184 7790.0034 V-7883.0479 7786.8022 L-7883.6167 7784.4546 L-7883.4502 7782.1226 L-7881.9502 7781.4546 -7865.2832 7780.1226 V-7858.6167 7778.7886 -7849.6167 7778.7886 V-7784.3936 7779.4761 -7779.4912 7780.8838 v-7820.3882 7778.8745 -7822.9688 7779.5112 v-7783.8569 7781.1602 -7780.8545 7782.4312 v-7818.79 7780.5464 -7822.167 7782.1777 v-7787.249 7783.9097 -7783.021 7785.5313 v-7789.7217 7784.8823 -7791.5127 7785.0815 v-7788.3896 7785.5698 l-7793.4194 7785.5015 l-7796.3218 7785.1279 l-7788.4521 7786.2417 -7787.9033 7786.8081 v-7784.3154 7786.1304 -7798.5186 7786.3838 v-7832.1177 7782.4546 -7882.2832 7791.6226 Vf/BBAccumRotation (5.805971) XT0 R0 0 0 0.5 K0.025 w-7883.9502 7781.1226 m-7863.667 7779.2944 -7843.9727 7778.2202 v-7801.1514 7778.5015 -7796.5737 7778.8999 v-7784.1631 7779.0303 -7776.7959 7780.0273 vS/BBAccumRotation (5.805971) XT0 0 0 1 K-7821.8369 7778.4082 m-7825.2959 7778.0273 -7851.2607 7778.2783 Y-7861.627 7778.1602 -7883.9502 7781.1226 YS/BBAccumRotation (5.805971) XT-7820.9873 7781.6641 m-7790.3608 7782.5815 -7783.6606 7783.2319 vS/BBAccumRotation (5.805971) XT0 0 0 0.5 K-7829.6201 7786.2046 m-7794.3706 7787.6167 -7791.4058 7788.1401 vS/BBAccumRotation (5.805971) XTUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 83)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884 7793.9351 m-7670.4009 7793.9351 L-7670.4009 7786.1343 L-7884 7786.1343 L-7884 7793.9351 Ln0 O0 0 0 1 k-7884 7790.0342 m-7873.9858 7792.5273 -7867.187 7793.8745 -7855.2007 7793.9351 c-7842.2183 7793.999 -7777.2002 7793.9351 y-7712.1816 7793.999 -7699.2002 7793.9351 v-7687.2129 7793.8745 -7680.415 7792.5273 -7670.4009 7790.0342 C-7680.415 7787.5425 -7687.2129 7786.1953 -7699.2002 7786.1343 c-7712.1816 7786.0688 -7777.2002 7786.1343 y-7842.2183 7786.0688 -7855.2007 7786.1343 v-7867.187 7786.1953 -7873.9858 7787.5425 -7884 7790.0342 CfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 6 pt Flat / Adobe Calligraphic Brush T) -(ool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt Oval / Adobe Cal) -(ligraphic Brush Tool/ 20 pt Oval/ Adobe Calligraphic Brush Tool/ 25 pt) -( Round / Adobe Calligraphic Brush Tool/ 50 pt Flat/ Adobe Scatter Brus) -(h Tool/ Dog Tracks/ Adobe Scatter Brush Tool/ Fall Leaf/ Adobe Scatter) -( Brush Tool/ Ladybug/ Adobe Scatter Brush Tool/ Push Pin/ Adobe Scatte) -(r Brush Tool/ Strawberry/ Adobe Scatter Brush Tool/ Twinkle Star / Ado) -(be ArtOnPath Brush Tool/ Marker/ Adobe ArtOnPath Brush Tool/ Tapered S) -(troke/ Adobe ArtOnPath Brush Tool/ Arrow/ Adobe ArtOnPath Brush Tool/ ) -(Paintbrush/ Adobe ArtOnPath Brush Tool/ Type/ Adobe PatternOnPath Brus) -(h Tool/ Double Lines/ Adobe PatternOnPath Brush Tool/ Laurel/ Adobe Pa) -(tternOnPath Brush Tool/ Rope /) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Dog Tracks)(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Fall Leaf)(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0.1 1 1 -) -(1 1 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Ladybug)(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.55 1.55 ) -(1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Push Pin)(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 -1.06145) -( 1.06 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Strawberry)(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.5 0.5 1 ) -(-75 75.419 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Twinkle Star )(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(10 pt Oval)(1 1 19 15 15 130 130 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(12 pt Oval )(1 7 17 45 45 0 0 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(20 pt Oval)(1 20 20 20 100 40 80 0 2 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(25 pt Round )(1 10 40 100 100 0 0 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(50 pt Flat)(1 40 60 0 0 44 44 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(6 pt Flat )(1 4 8 10 10 90 90 2 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Arrow)(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Marker)(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Paintbrush)(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Type)(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745098 /  1) -( 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Double Lines)(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.14 0.09 ) -(0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Laurel)(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Pattern 69/ ) -(1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Rope )(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /  1 0 1 ) -(0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration]) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0 0 0 1 k(C=0 M=0 Y=0 K=100) Pc0 0.1 1 0 k(C=0 M=10 Y=100 K=0) Pc0 0.5 0 0 k(C=0 M=50 Y=0 K=0) Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0) Pc1 0.55 1 0 k(C=100 M=55 Y=100 K=0) Pc1 0.9 0.1 0 k(C=100 M=90 Y=10 K=0) Pc0.15 1 1 0 k(C=15 M=100 Y=100 K=0) Pc0.45 0.9 0 0 k(C=45 M=90 Y=0 K=0) Pc0.5 0.4 0.3 0 k(C=50 M=40 Y=30 K=0) Pc0.5 0.85 1 0 k(C=50 M=85 Y=100 K=0) Pc0.75 0.05 1 0 k(C=75 M=5 Y=100 K=0) Pc0.75 0.9 0 0 k(C=75 M=90 Y=0 K=0) Pc0.8 0.05 0 0 k(C=80 M=5 Y=0 K=0) PcBb2 (Black, White) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Black, White) PcBb2 (Chrome) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Chrome) PcBb2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Rainbow) PcBb0 0 0 0 Bh2 (Yellow & Orange Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Yellow & Orange Radial) Pc(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Brick) Pc(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Confetti) Pc(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Leaves - Fall ) Pc(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Stripes) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A0 J 0 j 1 w 4 M []0 d0 XR305.9087 7794.999 m305.9087 -8588 L(N) *-7885 -395.9092 m8498 -395.9092 L(N) *-7885 -755.7422 m8498 -755.7422 L(N) **u0 O0 0 0 1 k205.7573 -389.6938 m205.7573 -388.7168 L206.5024 -388.5337 206.9902 -388.293 207.2207 -387.9932 c207.4531 -387.6929 207.5698 -387.1631 207.5698 -386.4023 c207.5698 -352.8511 L194.0166 -352.8511 L193.2573 -352.8511 192.7275 -352.9678 192.4258 -353.1997 c192.126 -353.4302 191.8706 -353.9185 191.6616 -354.6655 c190.8252 -354.6655 L190.8252 -345.5928 L191.6992 -345.5928 L191.936 -346.3911 192.2109 -346.916 192.5239 -347.1699 c192.8374 -347.4229 193.3628 -347.5483 194.0947 -347.5483 c228.1475 -347.5483 L228.8843 -347.5483 229.4111 -347.4229 229.7261 -347.1699 c230.043 -346.916 230.3345 -346.3911 230.5972 -345.5928 c231.4355 -345.5928 L231.4355 -354.6655 L230.5972 -354.6655 L230.3872 -353.9185 230.1362 -353.4302 229.8447 -353.1997 c229.5552 -352.9678 229.0151 -352.8511 228.2256 -352.8511 c214.2686 -352.8511 L214.2686 -386.4023 L214.2686 -387.1631 214.3838 -387.6929 214.6162 -387.9932 c214.8462 -388.293 215.3374 -388.5337 216.085 -388.7168 c216.085 -389.6938 l205.7573 -389.6938 Lf*U*u247.0205 -373.4473 m247.0205 -350.8145 L247.0205 -350.0317 246.8984 -349.4834 246.6543 -349.1675 c246.4106 -348.856 245.9263 -348.5938 245.2075 -348.3848 c245.2075 -347.5483 L255.5356 -347.5483 L255.5356 -348.3848 L254.812 -348.5938 254.3291 -348.856 254.0854 -349.1675 c253.8413 -349.4834 253.7192 -350.0317 253.7192 -350.8145 c253.7192 -373.4473 L253.7192 -377.2656 254.7827 -380.0439 256.9146 -381.7837 c259.042 -383.5225 262.4209 -384.3916 267.0474 -384.3916 c271.7251 -384.3916 275.1167 -383.5356 277.2207 -381.8213 c279.3213 -380.1099 280.3755 -377.3184 280.3755 -373.4473 c280.3755 -350.8145 L280.3755 -350.0317 280.2539 -349.4834 280.0098 -349.1675 c279.7656 -348.856 279.2813 -348.5938 278.561 -348.3848 c278.561 -347.5483 L289.0293 -347.5483 L289.0293 -348.3848 L288.2568 -348.5938 287.7402 -348.8613 287.4741 -349.188 c287.208 -349.5166 287.0742 -350.0571 287.0742 -350.8145 c287.0742 -373.4473 L287.0742 -379.417 285.5068 -383.71 282.3711 -386.3276 c279.2349 -388.9434 274.1406 -390.2529 267.0864 -390.2529 c259.9033 -390.2529 254.7632 -388.9639 251.666 -386.3853 c248.5693 -383.8081 247.0205 -379.4956 247.0205 -373.4473 cf*U*u337.5977 -354.8521 m339.5635 -355.8154 340.5469 -357.3638 340.5469 -359.502 c340.5469 -361.689 339.5498 -363.2925 337.5576 -364.3066 c335.5645 -365.3237 332.4219 -365.8281 328.127 -365.8281 C315.7051 -365.8281 L315.7051 -353.4082 L327.7344 -353.4082 l332.3428 -353.4082 335.6289 -353.8911 337.5977 -354.8521 cf1 D307.1914 -347.5483 m307.1914 -348.3848 l307.9121 -348.5947 308.3965 -348.8594 308.6406 -349.1763 c308.8848 -349.4932 309.0068 -350.0483 309.0068 -350.8379 C309.0068 -386.4141 l309.0068 -387.1934 308.8848 -387.7305 308.6406 -388.0146 c308.3965 -388.3032 307.9121 -388.5488 307.1914 -388.7573 C307.1914 -389.6938 L317.6572 -389.6938 L317.6572 -388.7573 l316.8867 -388.5488 316.3691 -388.2949 316.1055 -387.9961 c315.8379 -387.6968 315.7051 -387.1699 315.7051 -386.4141 C315.7051 -371.5513 L330.2979 -371.5513 L340 -387.0005 l340.0254 -387.0527 340.0781 -387.1309 340.1553 -387.2339 c340.3115 -387.4692 340.3896 -387.6509 340.3896 -387.7813 c340.3896 -388.0659 340.2852 -388.293 340.0781 -388.4639 c339.8682 -388.6333 339.5703 -388.7168 339.1797 -388.7168 C338.8682 -388.7168 L338.8682 -389.6938 L350.1748 -389.6938 L350.1748 -388.7168 L349.8232 -388.7168 l348.7979 -388.7168 346.5156 -385.8433 342.9756 -380.0947 c340.6875 -376.3779 338.7871 -373.3472 337.2656 -371.0054 c340.3135 -370.3521 342.6924 -369.0386 344.4014 -367.0703 c346.1104 -365.103 346.9668 -362.6768 346.9668 -359.7886 c346.9668 -355.9307 345.4453 -352.9258 342.4102 -350.7739 c339.373 -348.6255 335.0938 -347.5483 329.5713 -347.5483 C307.1914 -347.5483 lf*U*u0 D398.3232 -389.6938 m398.3232 -388.7168 L398.8584 -388.5591 399.2402 -388.3638 399.4727 -388.1284 c399.7012 -387.8911 399.8164 -387.5938 399.8164 -387.2271 c399.8164 -387.0171 399.7773 -386.8091 399.7012 -386.6006 c399.625 -386.3906 399.5098 -386.1943 399.3574 -386.0107 c371.251 -354.4263 L371.251 -386.4004 L371.251 -387.1343 371.3721 -387.6509 371.627 -387.9526 c371.8789 -388.252 372.4063 -388.5068 373.2021 -388.7168 c373.2021 -389.6938 L364.1318 -389.6938 L364.1318 -388.7168 L364.8779 -388.5337 365.3672 -388.291 365.5977 -387.9912 c365.8301 -387.6899 365.9463 -387.1611 365.9463 -386.4004 c365.9463 -350.8179 L365.9463 -350.0337 365.8242 -349.4834 365.5791 -349.1675 c365.335 -348.856 364.8516 -348.5938 364.1318 -348.3848 c364.1318 -347.5483 L378.4473 -347.5483 L378.4473 -348.3848 L377.9209 -348.5684 377.5322 -348.7832 377.2832 -349.0322 c377.0352 -349.2793 376.9111 -349.6011 376.9111 -349.9912 c376.9111 -350.2266 376.957 -350.4487 377.0479 -350.6587 c377.1396 -350.8691 377.2656 -351.0518 377.4229 -351.2075 c402.5117 -378.6738 L402.5117 -350.8179 L402.5117 -350.0337 402.3896 -349.4834 402.1455 -349.1675 c401.9004 -348.856 401.417 -348.5938 400.6973 -348.3848 c400.6973 -347.5483 L409.627 -347.5483 L409.627 -348.3848 L408.9072 -348.5938 408.4248 -348.856 408.1797 -349.1675 c407.9365 -349.4834 407.8145 -350.0337 407.8145 -350.8179 c407.8145 -386.4004 L407.8145 -387.1611 407.9287 -387.6899 408.1611 -387.9912 c408.3926 -388.291 408.8818 -388.5337 409.627 -388.7168 c409.627 -389.6938 l398.3232 -389.6938 Lf*U*u463.3555 -384.3916 m464.1182 -384.3916 464.6543 -384.2749 464.958 -384.0444 c465.2598 -383.814 465.5449 -383.3223 465.8096 -382.5771 c466.6465 -382.5771 L466.6465 -391.5068 L465.8096 -391.5068 L465.5967 -390.7617 465.3398 -390.2715 465.0371 -390.043 c464.7334 -389.8096 464.1992 -389.6938 463.4355 -389.6938 c427.709 -389.6938 L427.709 -388.7168 L428.4287 -388.5337 428.9131 -388.291 429.1582 -387.9912 c429.4014 -387.6899 429.5234 -387.1582 429.5234 -386.3955 c429.5234 -350.8008 L429.5234 -350.022 429.4014 -349.4756 429.1582 -349.1646 c428.9131 -348.8525 428.4287 -348.5938 427.709 -348.3848 c427.709 -347.5483 L461.5645 -347.5483 L462.3057 -347.5483 462.8516 -347.4004 463.1963 -347.1079 c463.541 -346.8145 463.8066 -346.3076 463.9941 -345.5928 c464.834 -345.5928 L464.834 -354.5244 L463.9941 -354.5244 L463.8613 -353.8066 463.6338 -353.3218 463.3145 -353.0781 c462.999 -352.834 462.4404 -352.7104 461.6416 -352.7104 c436.2217 -352.7104 L436.2217 -365.4111 L452.9473 -365.4111 L453.6787 -365.4111 454.2031 -365.293 454.5166 -365.0557 c454.8311 -364.8184 455.1055 -364.332 455.3428 -363.5967 c456.1797 -363.5581 L456.1797 -372.5273 L455.3428 -372.4893 L455.1328 -371.7446 454.8828 -371.2612 454.5977 -371.0435 c454.3096 -370.8257 453.7832 -370.7129 453.0273 -370.7129 c436.2217 -370.7129 L436.2217 -384.3916 l463.3555 -384.3916 Lf*U*u512.6016 -354.8521 m514.5674 -355.8154 515.5537 -357.3638 515.5537 -359.502 c515.5537 -361.689 514.5537 -363.2925 512.5615 -364.3066 c510.5693 -365.3237 507.4287 -365.8281 503.1318 -365.8281 C490.7109 -365.8281 L490.7109 -353.4082 L502.7422 -353.4082 l507.3506 -353.4082 510.6338 -353.8911 512.6016 -354.8521 cf1 D482.1973 -347.5483 m482.1973 -348.3848 l482.917 -348.5947 483.4023 -348.8594 483.6455 -349.1763 c483.8887 -349.4932 484.0117 -350.0483 484.0117 -350.8379 C484.0117 -386.4141 l484.0117 -387.1934 483.8887 -387.7305 483.6455 -388.0146 c483.4023 -388.3032 482.917 -388.5488 482.1973 -388.7573 C482.1973 -389.6938 L492.665 -389.6938 L492.665 -388.7573 l491.8936 -388.5488 491.374 -388.2949 491.1094 -387.9961 c490.8438 -387.6968 490.7109 -387.1699 490.7109 -386.4141 C490.7109 -371.5513 L505.3047 -371.5513 L515.0049 -387.0005 l515.0322 -387.0527 515.083 -387.1309 515.1611 -387.2339 c515.3164 -387.4692 515.3945 -387.6509 515.3945 -387.7813 c515.3945 -388.0659 515.293 -388.293 515.083 -388.4639 c514.875 -388.6333 514.5742 -388.7168 514.1846 -388.7168 C513.873 -388.7168 L513.873 -389.6938 L525.1826 -389.6938 L525.1826 -388.7168 L524.8271 -388.7168 l523.8037 -388.7168 521.5205 -385.8433 517.9795 -380.0947 c515.6924 -376.3779 513.792 -373.3472 512.2705 -371.0054 c515.3203 -370.3521 517.6992 -369.0386 519.4102 -367.0703 c521.1172 -365.103 521.9717 -362.6768 521.9717 -359.7886 c521.9717 -355.9307 520.4531 -352.9258 517.417 -350.7739 c514.3779 -348.6255 510.0986 -347.5483 504.5791 -347.5483 C482.1973 -347.5483 lf*U1 Ap0 D0 R0 0 0 1 K111.4624 -362.7646 m91.522 -362.7646 L91.522 -342.8193 L111.4624 -342.8193 L111.4624 -362.7646 Lb143.5938 -362.7646 m123.6499 -362.7646 L123.6499 -342.8193 L143.5938 -342.8193 L143.5938 -362.7646 Lb0.15 1 0.61 0.36 k0.15 1 0.61 0.36 K175.6616 -362.7646 m155.7178 -362.7646 L155.7178 -342.8193 L175.6616 -342.8193 L175.6616 -362.7646 Lb0 0 0 1 k0 0 0 1 K143.5938 -391.2871 m123.6499 -391.2871 L123.6499 -371.3428 L143.5938 -371.3428 L143.5938 -391.2871 Lb143.5938 -419.8105 m123.6499 -419.8105 L123.6499 -399.8682 L143.5938 -399.8682 L143.5938 -419.8105 Lb*u0 Ap199.4517 -415.3828 m199.9937 -415.6816 200.2646 -416.1602 200.2646 -416.8145 c200.2646 -417.498 200.0107 -417.9775 199.502 -418.2559 c198.9941 -418.5313 198.0625 -418.6689 196.7036 -418.6689 C192.624 -418.6689 L192.624 -414.9355 L196.8135 -414.9355 l198.0317 -414.9355 198.9126 -415.0859 199.4517 -415.3828 cf1 D197.2593 -420.3457 m198.7939 -420.3457 199.9805 -420.0439 200.8188 -419.4375 c201.6587 -418.8359 202.0791 -417.9922 202.0791 -416.9082 c202.0791 -416.2617 201.9185 -415.7051 201.5981 -415.2393 c201.2778 -414.7754 200.7817 -414.373 200.1123 -414.04 c200.6514 -413.7646 201.0542 -413.4238 201.3252 -413.0215 c201.5947 -412.6182 201.7305 -412.1445 201.7305 -411.6104 c201.7305 -410.6777 201.356 -409.9482 200.6123 -409.418 c199.8647 -408.8867 198.8281 -408.6221 197.5 -408.6221 C190.2524 -408.6221 L190.2524 -408.8652 l190.4585 -408.9238 190.5977 -408.9971 190.6689 -409.085 c190.7388 -409.1699 190.7739 -409.3242 190.7739 -409.5439 C190.7739 -419.4268 l190.7739 -419.6367 190.7397 -419.7813 190.6743 -419.8643 c190.6064 -419.9482 190.4653 -420.0156 190.2524 -420.0654 C190.2524 -420.3457 L197.2593 -420.3457 lf0 D199.2959 -410.5684 m199.709 -410.7979 199.916 -411.1895 199.916 -411.748 c199.916 -412.2578 199.7129 -412.6367 199.3057 -412.8867 c198.8989 -413.1367 198.2827 -413.2617 197.4561 -413.2617 C192.624 -413.2617 L192.624 -410.2246 L197.1069 -410.2246 l198.1504 -410.2246 198.8804 -410.3398 199.2959 -410.5684 cf*U*u208.6816 -415.8105 m208.6816 -409.54 L208.6816 -409.3242 208.6475 -409.1699 208.5762 -409.085 c208.5054 -408.9971 208.3662 -408.9229 208.1592 -408.8652 c208.1592 -408.6221 L211.0908 -408.6221 L211.0908 -408.8652 L210.8804 -408.9229 210.7417 -408.9971 210.6738 -409.085 c210.6025 -409.1699 210.5649 -409.3242 210.5649 -409.54 c210.5649 -415.8105 L210.5649 -416.8691 210.8618 -417.6406 211.4526 -418.1191 c212.043 -418.6064 212.9814 -418.8438 214.2656 -418.8438 c215.563 -418.8438 216.5034 -418.6064 217.0879 -418.1328 c217.6704 -417.6582 217.9639 -416.8848 217.9639 -415.8105 c217.9639 -409.54 L217.9639 -409.3242 217.9282 -409.1699 217.8569 -409.085 c217.7861 -408.9971 217.647 -408.9229 217.4399 -408.8652 c217.4399 -408.6221 L220.3374 -408.6221 L220.3374 -408.8652 L220.1274 -408.9229 219.9902 -408.9971 219.9204 -409.0879 c219.8462 -409.1807 219.8125 -409.3311 219.8125 -409.54 c219.8125 -415.8105 L219.8125 -417.4707 219.375 -418.666 218.5044 -419.3936 c217.6333 -420.1191 216.2188 -420.4844 214.2588 -420.4844 c212.2607 -420.4844 210.833 -420.127 209.9727 -419.4102 c209.1118 -418.6934 208.6816 -417.4932 208.6816 -415.8105 cf*U*u226.9175 -420.3457 m226.9175 -420.0654 L227.1328 -420.0156 227.2749 -419.9482 227.3408 -419.8643 c227.4087 -419.7813 227.4409 -419.6328 227.4409 -419.4229 c227.4409 -409.5439 L227.4409 -409.3242 227.4067 -409.1699 227.334 -409.085 c227.2646 -408.9971 227.1279 -408.9238 226.9175 -408.8652 c226.9175 -408.6221 L229.8486 -408.6221 L229.8486 -408.8652 L229.6401 -408.9238 229.5024 -408.9971 229.4316 -409.085 c229.3604 -409.1699 229.3267 -409.3242 229.3267 -409.5439 c229.3267 -419.4229 L229.3267 -419.6328 229.3584 -419.7813 229.4248 -419.8643 c229.4927 -419.9482 229.6348 -420.0156 229.8486 -420.0654 c229.8486 -420.3457 l226.9175 -420.3457 Lf*U*u246.3257 -418.8789 m246.5361 -418.8789 246.6846 -418.8457 246.7681 -418.7773 c246.853 -418.7139 246.9287 -418.5732 247.002 -418.3564 c247.2476 -418.3564 L247.2476 -420.8682 L247.002 -420.8682 L246.9463 -420.6514 246.875 -420.5107 246.79 -420.4453 c246.7051 -420.377 246.5596 -420.3457 246.3481 -420.3457 c236.4307 -420.3457 L236.4307 -420.0654 L236.6387 -420.0156 236.7778 -419.9492 236.8486 -419.8682 c236.9199 -419.7832 236.9536 -419.6387 236.9536 -419.4277 c236.9536 -409.5439 L236.9536 -409.3242 236.9199 -409.1699 236.8486 -409.085 c236.7778 -408.9971 236.6387 -408.9238 236.4307 -408.8652 c236.4307 -408.6221 L239.3276 -408.6221 L239.3276 -408.8652 L239.1206 -408.9238 238.98 -408.9971 238.9102 -409.0879 c238.8394 -409.1807 238.8037 -409.3311 238.8037 -409.5439 c238.8037 -418.8789 l246.3257 -418.8789 Lf*U*u258.9067 -410.0518 m260.4351 -410.0518 261.606 -410.4297 262.4209 -411.1855 c263.2358 -411.9395 263.6436 -413.0264 263.6436 -414.4434 c263.6436 -415.8809 263.2427 -416.9707 262.4375 -417.7236 c261.6343 -418.4688 260.457 -418.8438 258.9067 -418.8438 C255.1309 -418.8438 L255.1309 -410.0518 L258.9067 -410.0518 lf1 D258.2427 -420.3457 m259.6489 -420.3457 260.7397 -420.2441 261.5156 -420.0391 c262.2915 -419.835 262.9678 -419.5 263.542 -419.0264 c264.1489 -418.5234 264.6128 -417.8789 264.9385 -417.0957 c265.2603 -416.3096 265.4229 -415.4355 265.4229 -414.4648 c265.4229 -413.5156 265.2603 -412.6475 264.9385 -411.8604 c264.6128 -411.0781 264.1489 -410.4355 263.542 -409.9414 c262.9678 -409.4668 262.2915 -409.1309 261.5156 -408.9277 c260.7397 -408.7227 259.6489 -408.6221 258.2427 -408.6221 C252.7583 -408.6221 L252.7583 -408.8652 l252.9673 -408.9238 253.1045 -408.9971 253.1772 -409.085 c253.2466 -409.1699 253.2822 -409.3242 253.2822 -409.5439 C253.2822 -419.4229 l253.2822 -419.6328 253.2485 -419.7793 253.1802 -419.8643 c253.1162 -419.9482 252.9741 -420.0156 252.7583 -420.0654 C252.7583 -420.3457 L258.2427 -420.3457 lf*U*u0 D280.8916 -418.8789 m281.0986 -418.8789 281.2427 -418.8457 281.3242 -418.7773 c281.4053 -418.7139 281.4829 -418.5732 281.5547 -418.3564 c281.7988 -418.3564 L281.7988 -420.8682 L281.5547 -420.8682 L281.4966 -420.6514 281.4277 -420.5107 281.3457 -420.4453 c281.2632 -420.377 281.1211 -420.3457 280.9141 -420.3457 c270.9829 -420.3457 L270.9829 -420.0654 L271.1909 -420.0156 271.3281 -419.9492 271.3999 -419.8682 c271.4712 -419.7832 271.5063 -419.6387 271.5063 -419.4277 c271.5063 -409.5479 L271.5063 -409.3271 271.4712 -409.1758 271.3999 -409.085 c271.3281 -408.9971 271.1909 -408.9238 270.9829 -408.8652 c270.9829 -408.6221 L280.4043 -408.6221 L280.606 -408.6221 280.7549 -408.5811 280.8496 -408.4941 c280.9414 -408.4111 281.0161 -408.2686 281.0669 -408.0625 c281.3105 -408.0625 L281.3105 -410.6104 L281.0669 -410.6104 L281.0298 -410.4023 280.9683 -410.2637 280.8818 -410.1914 c280.7954 -410.1221 280.6431 -410.0859 280.4258 -410.0859 c273.3545 -410.0859 L273.3545 -413.541 L278.0254 -413.541 L278.229 -413.541 278.376 -413.5107 278.4644 -413.4443 c278.5508 -413.3809 278.627 -413.252 278.6929 -413.0518 c278.937 -413.041 L278.937 -415.5645 L278.6929 -415.5527 L278.6338 -415.3359 278.5659 -415.1982 278.4849 -415.1367 c278.4033 -415.0703 278.2573 -415.043 278.0474 -415.043 c273.3545 -415.043 L273.3545 -418.8789 l280.8916 -418.8789 Lf*U*u296.1177 -410.6582 m296.667 -410.9229 296.9409 -411.3525 296.9409 -411.9375 c296.9409 -412.5439 296.6631 -412.9844 296.1074 -413.2617 c295.5518 -413.541 294.6743 -413.6816 293.4746 -413.6816 C290.0322 -413.6816 L290.0322 -410.2607 L293.3667 -410.2607 l294.6523 -410.2607 295.5688 -410.3936 296.1177 -410.6582 cf1 D287.6587 -408.6221 m287.6587 -408.8652 l287.8667 -408.9238 288.0059 -408.9971 288.0767 -409.085 c288.1484 -409.1729 288.1821 -409.3271 288.1821 -409.5469 C288.1821 -419.4229 l288.1821 -419.6426 288.1484 -419.79 288.0767 -419.8691 c288.0059 -419.9492 287.8667 -420.0186 287.6587 -420.0771 C287.6587 -420.3457 L290.5542 -420.3457 L290.5542 -420.0771 l290.3472 -420.0186 290.21 -419.9482 290.1392 -419.8643 c290.0674 -419.7813 290.0322 -419.6328 290.0322 -419.4229 C290.0322 -415.2852 L294.0898 -415.2852 L296.7886 -419.5879 l296.7954 -419.6025 296.8091 -419.625 296.8311 -419.6523 c296.875 -419.7188 296.8975 -419.7686 296.8975 -419.8057 c296.8975 -419.8857 296.8662 -419.9482 296.8091 -419.9971 c296.7515 -420.041 296.667 -420.0654 296.5581 -420.0654 C296.4736 -420.0654 L296.4736 -420.3457 L299.626 -420.3457 L299.626 -420.0654 L299.5264 -420.0654 l299.2417 -420.0654 298.605 -419.2656 297.6152 -417.665 c296.9819 -416.6289 296.4502 -415.7832 296.0244 -415.1328 c296.873 -414.9521 297.5342 -414.5859 298.0088 -414.041 c298.4824 -413.4932 298.7197 -412.8203 298.7197 -412.0186 c298.7197 -410.9482 298.2964 -410.1152 297.4526 -409.5186 c296.6074 -408.9219 295.4165 -408.6221 293.8779 -408.6221 C287.6587 -408.6221 lf*U*u0 D304.063 -419.0352 m303.8364 -418.9063 L305.5205 -416.4727 L305.7188 -416.625 L305.6899 -416.7031 305.6675 -416.7793 305.6528 -416.8496 c305.6392 -416.916 305.6304 -416.9785 305.6304 -417.0313 c305.6304 -417.3477 306.1133 -417.75 307.0771 -418.2285 c308.043 -418.71 309.0684 -418.9482 310.1592 -418.9482 c311.3184 -418.9482 312.2461 -418.752 312.9434 -418.3613 c313.6387 -417.9688 313.9873 -417.4482 313.9873 -416.8047 c313.9873 -416.2363 313.7168 -415.835 313.1738 -415.5938 c312.6328 -415.3564 311.6152 -415.2188 310.125 -415.1816 c308.1465 -415.123 306.7471 -414.8633 305.9302 -414.3984 c305.1152 -413.9316 304.707 -413.1895 304.707 -412.166 c304.707 -411.1074 305.2319 -410.2236 306.2832 -409.5117 c307.333 -408.8027 308.668 -408.4473 310.2871 -408.4473 c311.3711 -408.4473 312.6152 -408.7354 314.0273 -409.3105 c314.4404 -409.4785 314.6973 -409.5625 314.8008 -409.5625 c314.8584 -409.5625 314.9268 -409.54 315 -409.4932 c315.0781 -409.4434 315.167 -409.3711 315.2686 -409.2646 c315.4883 -409.3975 L314.0762 -411.9014 L313.8496 -411.7578 L313.8633 -411.7393 313.8789 -411.7051 313.8945 -411.6621 c313.9102 -411.6191 313.918 -411.5771 313.918 -411.54 c313.918 -411.165 313.5303 -410.8105 312.7578 -410.4805 c311.9854 -410.1484 311.1152 -409.9824 310.1504 -409.9824 c309.1055 -409.9824 308.2441 -410.166 307.5684 -410.5313 c306.8926 -410.8975 306.5566 -411.3496 306.5566 -411.8936 c306.5566 -412.7686 307.6836 -413.2529 309.9404 -413.3457 c310.4043 -413.3691 310.7637 -413.3896 311.0176 -413.4014 c312.7109 -413.5107 313.9375 -413.8242 314.6973 -414.3418 c315.4551 -414.8574 315.8379 -415.6309 315.8379 -416.665 c315.8379 -417.7441 315.2695 -418.6602 314.1367 -419.4189 c313.0059 -420.1738 311.6143 -420.5557 309.9658 -420.5557 c308.3828 -420.5557 306.7676 -420.085 305.1206 -419.1514 c304.7651 -418.9453 304.5444 -418.8438 304.4663 -418.8438 c304.416 -418.8438 304.3647 -418.8535 304.314 -418.877 c304.2632 -418.8975 304.1787 -418.9512 304.063 -419.0352 cf*U*u330.7529 -420.3457 m330.7529 -420.0654 L330.9697 -420.0156 331.1094 -419.9482 331.1768 -419.8643 c331.2441 -419.7813 331.2783 -419.6328 331.2783 -419.4229 c331.2783 -409.5439 L331.2783 -409.3242 331.2412 -409.1699 331.1719 -409.085 c331.1025 -408.9971 330.9619 -408.9238 330.7529 -408.8652 c330.7529 -408.6221 L333.6846 -408.6221 L333.6846 -408.8652 L333.4775 -408.9238 333.3369 -408.9971 333.2676 -409.085 c333.1963 -409.1699 333.1621 -409.3242 333.1621 -409.5439 c333.1621 -419.4229 L333.1621 -419.6328 333.1953 -419.7813 333.2627 -419.8643 c333.3281 -419.9482 333.4688 -420.0156 333.6846 -420.0654 c333.6846 -420.3457 l330.7529 -420.3457 Lf*U*u349.7207 -420.3457 m349.7207 -420.0654 L349.8721 -420.0225 349.9785 -419.9668 350.043 -419.9023 c350.1074 -419.835 350.1377 -419.7539 350.1377 -419.6514 c350.1377 -419.5938 350.1279 -419.5371 350.1074 -419.4746 c350.0879 -419.4199 350.0537 -419.3652 350.0107 -419.3125 c342.2227 -410.5449 L342.2227 -419.4229 L342.2227 -419.6279 342.2549 -419.7686 342.3232 -419.8535 c342.3887 -419.9355 342.5313 -420.0078 342.7451 -420.0654 c342.7451 -420.3457 L340.2324 -420.3457 L340.2324 -420.0654 L340.4473 -420.0156 340.5898 -419.9482 340.6553 -419.8643 c340.7217 -419.7813 340.7559 -419.6328 340.7559 -419.4229 c340.7559 -409.5439 L340.7559 -409.3242 340.7207 -409.1699 340.6504 -409.085 c340.5791 -408.9971 340.4404 -408.9238 340.2324 -408.8652 c340.2324 -408.6221 L344.2012 -408.6221 L344.2012 -408.8652 L344.0557 -408.9189 343.9473 -408.9775 343.8799 -409.0439 c343.8086 -409.1143 343.7744 -409.2031 343.7744 -409.3145 c343.7744 -409.3779 343.7881 -409.4375 343.8115 -409.498 c343.8389 -409.5557 343.873 -409.6074 343.917 -409.6484 c350.9092 -417.2764 L350.9092 -409.5439 L350.9092 -409.3242 350.873 -409.1699 350.8027 -409.085 c350.7314 -408.9971 350.5918 -408.9238 350.3848 -408.8652 c350.3848 -408.6221 L352.8955 -408.6221 L352.8955 -408.8652 L352.6895 -408.9238 352.5508 -408.9971 352.4795 -409.085 c352.4082 -409.1699 352.375 -409.3242 352.375 -409.5439 c352.375 -419.4229 L352.375 -419.6328 352.4063 -419.7813 352.4736 -419.8643 c352.54 -419.9482 352.6826 -420.0156 352.8955 -420.0654 c352.8955 -420.3457 l349.7207 -420.3457 Lf*U*u369.373 -412.0146 m369.4043 -411.9648 369.4277 -411.9121 369.4414 -411.8564 c369.457 -411.8027 369.4658 -411.75 369.4658 -411.7021 c369.4658 -411.585 369.4199 -411.4746 369.3262 -411.3691 c369.2354 -411.2646 369.0146 -411.1035 368.665 -410.8857 c368.0527 -410.5898 367.4658 -410.3721 366.9121 -410.2275 c366.3574 -410.0859 365.8027 -410.0176 365.2461 -410.0176 c363.7695 -410.0176 362.584 -410.4297 361.6836 -411.2559 c360.7881 -412.0801 360.3369 -413.1611 360.3369 -414.5 c360.3369 -415.8389 360.791 -416.9121 361.7012 -417.7285 c362.6104 -418.543 363.8066 -418.9482 365.2891 -418.9482 c366.29 -418.9482 367.249 -418.6934 368.1709 -418.1777 c369.0918 -417.6602 369.5508 -417.2559 369.5508 -416.957 c369.5508 -416.915 369.543 -416.8613 369.5293 -416.8047 c369.5156 -416.7471 369.4854 -416.6602 369.4434 -416.5527 c369.6484 -416.3682 L371.4678 -418.6465 L371.2461 -418.8027 L371.1436 -418.7344 371.0576 -418.6855 370.9834 -418.6514 c370.9102 -418.6191 370.8447 -418.5996 370.7871 -418.5996 c370.7354 -418.5996 370.5938 -418.6855 370.3633 -418.8574 c370.1299 -419.0273 369.9229 -419.1719 369.7393 -419.2813 c369.0283 -419.7139 368.2998 -420.0332 367.5605 -420.2402 c366.8223 -420.4482 366.0361 -420.5557 365.1992 -420.5557 c363.2119 -420.5557 361.5908 -419.9824 360.3359 -418.8398 c359.0791 -417.6982 358.4531 -416.2422 358.4531 -414.4727 c358.4531 -412.7314 359.0762 -411.2871 360.3203 -410.1357 c361.5635 -408.9863 363.1543 -408.4111 365.0889 -408.4111 c366.5381 -408.4111 368.0781 -408.7734 369.708 -409.5 c370.0566 -409.6582 370.2676 -409.7383 370.3398 -409.7383 c370.3975 -409.7383 370.4609 -409.7188 370.5254 -409.6807 c370.5918 -409.6396 370.6777 -409.5645 370.7871 -409.46 c371.0137 -409.5889 L369.626 -412.1445 l369.373 -412.0146 Lf*U*u378.5459 -411.2852 m379.417 -410.4648 380.5615 -410.0518 381.9814 -410.0518 c383.3916 -410.0518 384.5332 -410.4648 385.3975 -411.2852 c386.2646 -412.1074 386.6982 -413.1777 386.6982 -414.4941 c386.6982 -415.8193 386.2666 -416.8936 385.4043 -417.7139 c384.54 -418.54 383.4082 -418.9482 382.002 -418.9482 c380.5615 -418.9482 379.4063 -418.541 378.543 -417.7285 c377.6758 -416.9121 377.2412 -415.835 377.2412 -414.4941 c377.2412 -413.1777 377.6787 -412.1074 378.5459 -411.2852 cf1 D386.7402 -418.8232 m387.9922 -417.6699 388.6162 -416.2188 388.6162 -414.4727 c388.6162 -412.7314 387.9941 -411.2871 386.7529 -410.1357 c385.5088 -408.9863 383.9199 -408.4111 381.9873 -408.4111 c380.0537 -408.4111 378.4648 -408.9863 377.2227 -410.1357 c375.9805 -411.2871 375.3574 -412.7314 375.3574 -414.4727 c375.3574 -416.2188 375.9844 -417.6699 377.2334 -418.8232 c378.4844 -419.9785 380.0674 -420.5557 381.9873 -420.5557 c383.9063 -420.5557 385.4902 -419.9785 386.7402 -418.8232 cf*U*u0 D402.6572 -410.6582 m403.207 -410.9229 403.4805 -411.3525 403.4805 -411.9375 c403.4805 -412.5439 403.2031 -412.9844 402.6465 -413.2617 c402.0918 -413.541 401.2139 -413.6816 400.0146 -413.6816 C396.5713 -413.6816 L396.5713 -410.2607 L399.9063 -410.2607 l401.1914 -410.2607 402.1104 -410.3936 402.6572 -410.6582 cf1 D394.2002 -408.6221 m394.2002 -408.8652 l394.4063 -408.9238 394.5459 -408.9971 394.6172 -409.085 c394.6885 -409.1729 394.7227 -409.3271 394.7227 -409.5469 C394.7227 -419.4229 l394.7227 -419.6426 394.6885 -419.79 394.6172 -419.8691 c394.5459 -419.9492 394.4063 -420.0186 394.2002 -420.0771 C394.2002 -420.3457 L397.0957 -420.3457 L397.0957 -420.0771 l396.8906 -420.0186 396.752 -419.9482 396.6787 -419.8643 c396.6094 -419.7813 396.5713 -419.6328 396.5713 -419.4229 C396.5713 -415.2852 L400.6318 -415.2852 L403.3281 -419.5879 l403.335 -419.6025 403.3486 -419.625 403.3721 -419.6523 c403.4141 -419.7188 403.4365 -419.7686 403.4365 -419.8057 c403.4365 -419.8857 403.4082 -419.9482 403.3486 -419.9971 c403.291 -420.041 403.208 -420.0654 403.0977 -420.0654 C403.0127 -420.0654 L403.0127 -420.3457 L406.167 -420.3457 L406.167 -420.0654 L406.0684 -420.0654 l405.7813 -420.0654 405.1445 -419.2656 404.1582 -417.665 c403.5215 -416.6289 402.9893 -415.7832 402.5654 -415.1328 c403.4131 -414.9521 404.0742 -414.5859 404.5488 -414.041 c405.0234 -413.4932 405.2598 -412.8203 405.2598 -412.0186 c405.2598 -410.9482 404.8379 -410.1152 403.9922 -409.5186 c403.1484 -408.9219 401.9561 -408.6221 400.418 -408.6221 C394.2002 -408.6221 lf*U*u0 D420.0557 -410.6543 m420.6025 -410.916 420.877 -411.3389 420.877 -411.9229 c420.877 -412.5186 420.5986 -412.9531 420.043 -413.2324 c419.4873 -413.5078 418.6094 -413.6465 417.4121 -413.6465 C413.9678 -413.6465 L413.9678 -410.2607 L417.3027 -410.2607 l418.5869 -410.2607 419.5059 -410.3906 420.0557 -410.6543 cf1 D411.5967 -408.6221 m411.5967 -408.8652 l411.8027 -408.9238 411.9414 -408.9971 412.0127 -409.085 c412.083 -409.1729 412.1182 -409.3271 412.1182 -409.5469 C412.1182 -419.4229 l412.1182 -419.6328 412.0859 -419.7793 412.0186 -419.8643 c411.9512 -419.9482 411.8086 -420.0156 411.5967 -420.0654 C411.5967 -420.3457 L414.4912 -420.3457 L414.4912 -420.0654 l414.2773 -420.0078 414.1367 -419.9355 414.0684 -419.8525 c414.002 -419.7686 413.9678 -419.625 413.9678 -419.4229 C413.9678 -415.2852 L417.5088 -415.2852 l419.2773 -415.2852 420.5801 -415.0186 421.4111 -414.4932 c422.2402 -413.96 422.6553 -413.1328 422.6553 -412.0078 c422.6553 -410.9414 422.2354 -410.1094 421.3887 -409.5156 c420.5449 -408.9189 419.3525 -408.6221 417.8135 -408.6221 C411.5967 -408.6221 lf*U*u0 D430.626 -411.2852 m431.4961 -410.4648 432.6406 -410.0518 434.0605 -410.0518 c435.4727 -410.0518 436.6104 -410.4648 437.4775 -411.2852 c438.3438 -412.1074 438.7773 -413.1777 438.7773 -414.4941 c438.7773 -415.8193 438.3447 -416.8936 437.4824 -417.7139 c436.6211 -418.54 435.4863 -418.9482 434.083 -418.9482 c432.6406 -418.9482 431.4873 -418.541 430.6201 -417.7285 c429.7539 -416.9121 429.3203 -415.835 429.3203 -414.4941 c429.3203 -413.1777 429.7559 -412.1074 430.626 -411.2852 cf1 D438.8213 -418.8232 m440.0723 -417.6699 440.6943 -416.2188 440.6943 -414.4727 c440.6943 -412.7314 440.0742 -411.2871 438.8311 -410.1357 c437.5869 -408.9863 436.001 -408.4111 434.0674 -408.4111 c432.1318 -408.4111 430.5459 -408.9863 429.3037 -410.1357 c428.0596 -411.2871 427.4375 -412.7314 427.4375 -414.4727 c427.4375 -416.2188 428.0635 -417.6699 429.3135 -418.8232 c430.5645 -419.9785 432.1484 -420.5557 434.0674 -420.5557 c435.9844 -420.5557 437.5713 -419.9785 438.8213 -418.8232 cf*U*u0 D454.7363 -410.6582 m455.2852 -410.9229 455.5586 -411.3525 455.5586 -411.9375 c455.5586 -412.5439 455.2822 -412.9844 454.7266 -413.2617 c454.1699 -413.541 453.293 -413.6816 452.0928 -413.6816 C448.6504 -413.6816 L448.6504 -410.2607 L451.9873 -410.2607 l453.2715 -410.2607 454.1885 -410.3936 454.7363 -410.6582 cf1 D446.2783 -408.6221 m446.2783 -408.8652 l446.4863 -408.9238 446.626 -408.9971 446.6963 -409.085 c446.7666 -409.1729 446.8027 -409.3271 446.8027 -409.5469 C446.8027 -419.4229 l446.8027 -419.6426 446.7666 -419.79 446.6963 -419.8691 c446.626 -419.9492 446.4863 -420.0186 446.2783 -420.0771 C446.2783 -420.3457 L449.1758 -420.3457 L449.1758 -420.0771 l448.9697 -420.0186 448.8301 -419.9482 448.7598 -419.8643 c448.6875 -419.7813 448.6504 -419.6328 448.6504 -419.4229 C448.6504 -415.2852 L452.709 -415.2852 L455.4072 -419.5879 l455.4141 -419.6025 455.4297 -419.625 455.4512 -419.6523 c455.4951 -419.7188 455.5156 -419.7686 455.5156 -419.8057 c455.5156 -419.8857 455.4883 -419.9482 455.4297 -419.9971 c455.3701 -420.041 455.2871 -420.0654 455.1777 -420.0654 C455.0918 -420.0654 L455.0918 -420.3457 L458.2461 -420.3457 L458.2461 -420.0654 L458.1455 -420.0654 l457.8594 -420.0654 457.2236 -419.2656 456.2373 -417.665 c455.5996 -416.6289 455.0684 -415.7832 454.6445 -415.1328 c455.4922 -414.9521 456.1523 -414.5859 456.627 -414.041 c457.1016 -413.4932 457.3398 -412.8203 457.3398 -412.0186 c457.3398 -410.9482 456.9141 -410.1152 456.0703 -409.5186 c455.2275 -408.9219 454.0371 -408.6221 452.5 -408.6221 C446.2783 -408.6221 lf*U*u0 D468.6387 -410.5439 m471.0156 -415.6689 L466.293 -415.6689 L468.6387 -410.5439 lf1 D464.8623 -420.3457 m464.8623 -420.0654 l464.7695 -420.0225 464.6973 -419.9688 464.6504 -419.9121 c464.6016 -419.8535 464.5791 -419.7871 464.5791 -419.7148 c464.5791 -419.6055 464.6406 -419.4229 464.7656 -419.165 c464.7793 -419.1445 464.7891 -419.127 464.7969 -419.1113 C465.627 -417.2393 L471.7451 -417.2393 L472.6162 -419.1113 l472.6982 -419.29 472.75 -419.416 472.7773 -419.4971 c472.8027 -419.5771 472.8145 -419.6484 472.8145 -419.7148 c472.8145 -419.7871 472.793 -419.8535 472.749 -419.9121 c472.707 -419.9688 472.6338 -420.0225 472.5303 -420.0654 C472.5303 -420.3457 L475.6084 -420.3457 L475.6084 -420.0654 l475.3877 -419.9785 475.1992 -419.8486 475.0342 -419.6777 c474.8701 -419.5039 474.7207 -419.2764 474.5811 -418.9902 C470.252 -409.8457 l470.1787 -409.6992 470.126 -409.584 470.0918 -409.4932 c470.0605 -409.4023 470.043 -409.3184 470.043 -409.2471 c470.0518 -409.1602 470.0791 -409.085 470.126 -409.0234 c470.1709 -408.9609 470.2441 -408.9102 470.3398 -408.8652 C470.3398 -408.6221 L467.1426 -408.6221 L467.1426 -408.8652 l467.2354 -408.9102 467.3086 -408.9648 467.3613 -409.0293 c467.4121 -409.0957 467.4355 -409.166 467.4355 -409.2471 c467.4355 -409.3057 467.4219 -409.373 467.3984 -409.4561 c467.373 -409.5352 467.3174 -409.6689 467.2295 -409.8564 C463.0068 -419.1445 l462.8926 -419.416 462.7646 -419.6143 462.6279 -419.7432 c462.4883 -419.8691 462.3018 -419.9785 462.0703 -420.0654 C462.0703 -420.3457 L464.8623 -420.3457 lf*U*u0 D482.6797 -420.3457 m482.6797 -420.0654 L482.8955 -420.0156 483.0352 -419.9482 483.1035 -419.8643 c483.1699 -419.7813 483.2031 -419.6328 483.2031 -419.4229 c483.2031 -410.0859 L479.4258 -410.0859 L479.2148 -410.0859 479.0674 -410.1221 478.9834 -410.1855 c478.9023 -410.2539 478.8301 -410.3975 478.7734 -410.6104 c478.5293 -410.6104 L478.5293 -408.0977 L478.7832 -408.0977 L478.8477 -408.3125 478.9258 -408.4521 479.0117 -408.5225 c479.0986 -408.5859 479.2441 -408.6221 479.4473 -408.6221 c488.9141 -408.6221 L489.1191 -408.6221 489.2637 -408.5859 489.3506 -408.5225 c489.4365 -408.4521 489.5156 -408.3125 489.5889 -408.0977 c489.832 -408.0977 L489.832 -410.6104 L489.5889 -410.6104 L489.5303 -410.3975 489.4619 -410.2539 489.3828 -410.1855 c489.3047 -410.1221 489.1553 -410.0859 488.9375 -410.0859 c485.0889 -410.0859 L485.0889 -419.4229 L485.0889 -419.6328 485.1191 -419.7813 485.1875 -419.8643 c485.2559 -419.9482 485.3936 -420.0156 485.6113 -420.0654 c485.6113 -420.3457 l482.6797 -420.3457 Lf*U*u505.0635 -418.8789 m505.2695 -418.8789 505.4121 -418.8457 505.4932 -418.7773 c505.5752 -418.7139 505.6533 -418.5732 505.7246 -418.3564 c505.9678 -418.3564 L505.9678 -420.8682 L505.7246 -420.8682 L505.666 -420.6514 505.5986 -420.5107 505.5166 -420.4453 c505.4326 -420.377 505.291 -420.3457 505.083 -420.3457 c495.1523 -420.3457 L495.1523 -420.0654 L495.3604 -420.0156 495.4971 -419.9492 495.5693 -419.8682 c495.6406 -419.7832 495.6758 -419.6387 495.6758 -419.4277 c495.6758 -409.5479 L495.6758 -409.3271 495.6406 -409.1758 495.5693 -409.085 c495.4971 -408.9971 495.3604 -408.9238 495.1523 -408.8652 c495.1523 -408.6221 L504.5752 -408.6221 L504.7754 -408.6221 504.9238 -408.5811 505.0186 -408.4941 c505.1143 -408.4111 505.1855 -408.2686 505.2363 -408.0625 c505.4795 -408.0625 L505.4795 -410.6104 L505.2363 -410.6104 L505.1992 -410.4023 505.1377 -410.2637 505.0537 -410.1914 c504.9648 -410.1221 504.8125 -410.0859 504.5947 -410.0859 c497.5234 -410.0859 L497.5234 -413.541 L502.1934 -413.541 L502.3994 -413.541 502.5449 -413.5107 502.6348 -413.4443 c502.7217 -413.3809 502.7998 -413.252 502.8643 -413.0518 c503.1084 -413.041 L503.1084 -415.5645 L502.8643 -415.5527 L502.8037 -415.3359 502.7354 -415.1982 502.6543 -415.1367 c502.5723 -415.0703 502.4268 -415.043 502.2168 -415.043 c497.5234 -415.043 L497.5234 -418.8789 l505.0635 -418.8789 Lf*U*u517.9795 -410.0518 m519.5039 -410.0518 520.6768 -410.4297 521.4932 -411.1855 c522.3066 -411.9395 522.7168 -413.0264 522.7168 -414.4434 c522.7168 -415.8809 522.3135 -416.9707 521.5107 -417.7236 c520.7041 -418.4688 519.5283 -418.8438 517.9795 -418.8438 C514.2021 -418.8438 L514.2021 -410.0518 L517.9795 -410.0518 lf1 D517.3125 -420.3457 m518.7178 -420.3457 519.8096 -420.2441 520.585 -420.0391 c521.3652 -419.835 522.0391 -419.5 522.6152 -419.0264 c523.2178 -418.5234 523.6826 -417.8789 524.0078 -417.0957 c524.333 -416.3096 524.4961 -415.4355 524.4961 -414.4648 c524.4961 -413.5156 524.333 -412.6475 524.0078 -411.8604 c523.6826 -411.0781 523.2178 -410.4355 522.6152 -409.9414 c522.0391 -409.4668 521.3652 -409.1309 520.585 -408.9277 c519.8096 -408.7227 518.7178 -408.6221 517.3125 -408.6221 C511.8301 -408.6221 L511.8301 -408.8652 l512.0361 -408.9238 512.1758 -408.9971 512.2461 -409.085 c512.3174 -409.1699 512.3516 -409.3242 512.3516 -409.5439 C512.3516 -419.4229 l512.3516 -419.6328 512.3174 -419.7793 512.2539 -419.8643 c512.1855 -419.9482 512.043 -420.0156 511.8301 -420.0654 C511.8301 -420.3457 L517.3125 -420.3457 lf*U0 D0 R0.15 1 0.61 0.36 K188.6968 -397.9316 m526.9893 -397.9316 lS35.8271 7794.999 m35.8271 -8588 L(N) *164.5049 7794.999 m164.5049 -8588 L(N) *LB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_pattern_AI5 /terminate get execAGM_Gradient /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF